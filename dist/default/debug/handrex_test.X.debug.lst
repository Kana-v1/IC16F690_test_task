

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Nov 12 14:19:12 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F690
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    48                           	dabs	1,0x7E,2
    49     0000                     
    50                           ; Generated 22/03/2023 GMT
    51                           ; 
    52                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F690 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84     0000                     	;# 
    85     0001                     	;# 
    86     0002                     	;# 
    87     0003                     	;# 
    88     0004                     	;# 
    89     0005                     	;# 
    90     0006                     	;# 
    91     0007                     	;# 
    92     000A                     	;# 
    93     000B                     	;# 
    94     000C                     	;# 
    95     000D                     	;# 
    96     000E                     	;# 
    97     000E                     	;# 
    98     000F                     	;# 
    99     0010                     	;# 
   100     0011                     	;# 
   101     0012                     	;# 
   102     0013                     	;# 
   103     0014                     	;# 
   104     0015                     	;# 
   105     0015                     	;# 
   106     0016                     	;# 
   107     0017                     	;# 
   108     0018                     	;# 
   109     0019                     	;# 
   110     001A                     	;# 
   111     001C                     	;# 
   112     001D                     	;# 
   113     001E                     	;# 
   114     001F                     	;# 
   115     0081                     	;# 
   116     0085                     	;# 
   117     0086                     	;# 
   118     0087                     	;# 
   119     008C                     	;# 
   120     008D                     	;# 
   121     008E                     	;# 
   122     008F                     	;# 
   123     0090                     	;# 
   124     0092                     	;# 
   125     0093                     	;# 
   126     0093                     	;# 
   127     0093                     	;# 
   128     0094                     	;# 
   129     0095                     	;# 
   130     0095                     	;# 
   131     0096                     	;# 
   132     0096                     	;# 
   133     0097                     	;# 
   134     0098                     	;# 
   135     0099                     	;# 
   136     009A                     	;# 
   137     009B                     	;# 
   138     009E                     	;# 
   139     009F                     	;# 
   140     010C                     	;# 
   141     010C                     	;# 
   142     010D                     	;# 
   143     010E                     	;# 
   144     010F                     	;# 
   145     0115                     	;# 
   146     0116                     	;# 
   147     0118                     	;# 
   148     0119                     	;# 
   149     011A                     	;# 
   150     011B                     	;# 
   151     011E                     	;# 
   152     011F                     	;# 
   153     018C                     	;# 
   154     018D                     	;# 
   155     019D                     	;# 
   156     019E                     	;# 
   157     0000                     	;# 
   158     0001                     	;# 
   159     0002                     	;# 
   160     0003                     	;# 
   161     0004                     	;# 
   162     0005                     	;# 
   163     0006                     	;# 
   164     0007                     	;# 
   165     000A                     	;# 
   166     000B                     	;# 
   167     000C                     	;# 
   168     000D                     	;# 
   169     000E                     	;# 
   170     000E                     	;# 
   171     000F                     	;# 
   172     0010                     	;# 
   173     0011                     	;# 
   174     0012                     	;# 
   175     0013                     	;# 
   176     0014                     	;# 
   177     0015                     	;# 
   178     0015                     	;# 
   179     0016                     	;# 
   180     0017                     	;# 
   181     0018                     	;# 
   182     0019                     	;# 
   183     001A                     	;# 
   184     001C                     	;# 
   185     001D                     	;# 
   186     001E                     	;# 
   187     001F                     	;# 
   188     0081                     	;# 
   189     0085                     	;# 
   190     0086                     	;# 
   191     0087                     	;# 
   192     008C                     	;# 
   193     008D                     	;# 
   194     008E                     	;# 
   195     008F                     	;# 
   196     0090                     	;# 
   197     0092                     	;# 
   198     0093                     	;# 
   199     0093                     	;# 
   200     0093                     	;# 
   201     0094                     	;# 
   202     0095                     	;# 
   203     0095                     	;# 
   204     0096                     	;# 
   205     0096                     	;# 
   206     0097                     	;# 
   207     0098                     	;# 
   208     0099                     	;# 
   209     009A                     	;# 
   210     009B                     	;# 
   211     009E                     	;# 
   212     009F                     	;# 
   213     010C                     	;# 
   214     010C                     	;# 
   215     010D                     	;# 
   216     010E                     	;# 
   217     010F                     	;# 
   218     0115                     	;# 
   219     0116                     	;# 
   220     0118                     	;# 
   221     0119                     	;# 
   222     011A                     	;# 
   223     011B                     	;# 
   224     011E                     	;# 
   225     011F                     	;# 
   226     018C                     	;# 
   227     018D                     	;# 
   228     019D                     	;# 
   229     019E                     	;# 
   230     0000                     	;# 
   231     0001                     	;# 
   232     0002                     	;# 
   233     0003                     	;# 
   234     0004                     	;# 
   235     0005                     	;# 
   236     0006                     	;# 
   237     0007                     	;# 
   238     000A                     	;# 
   239     000B                     	;# 
   240     000C                     	;# 
   241     000D                     	;# 
   242     000E                     	;# 
   243     000E                     	;# 
   244     000F                     	;# 
   245     0010                     	;# 
   246     0011                     	;# 
   247     0012                     	;# 
   248     0013                     	;# 
   249     0014                     	;# 
   250     0015                     	;# 
   251     0015                     	;# 
   252     0016                     	;# 
   253     0017                     	;# 
   254     0018                     	;# 
   255     0019                     	;# 
   256     001A                     	;# 
   257     001C                     	;# 
   258     001D                     	;# 
   259     001E                     	;# 
   260     001F                     	;# 
   261     0081                     	;# 
   262     0085                     	;# 
   263     0086                     	;# 
   264     0087                     	;# 
   265     008C                     	;# 
   266     008D                     	;# 
   267     008E                     	;# 
   268     008F                     	;# 
   269     0090                     	;# 
   270     0092                     	;# 
   271     0093                     	;# 
   272     0093                     	;# 
   273     0093                     	;# 
   274     0094                     	;# 
   275     0095                     	;# 
   276     0095                     	;# 
   277     0096                     	;# 
   278     0096                     	;# 
   279     0097                     	;# 
   280     0098                     	;# 
   281     0099                     	;# 
   282     009A                     	;# 
   283     009B                     	;# 
   284     009E                     	;# 
   285     009F                     	;# 
   286     010C                     	;# 
   287     010C                     	;# 
   288     010D                     	;# 
   289     010E                     	;# 
   290     010F                     	;# 
   291     0115                     	;# 
   292     0116                     	;# 
   293     0118                     	;# 
   294     0119                     	;# 
   295     011A                     	;# 
   296     011B                     	;# 
   297     011E                     	;# 
   298     011F                     	;# 
   299     018C                     	;# 
   300     018D                     	;# 
   301     019D                     	;# 
   302     019E                     	;# 
   303     0000                     	;# 
   304     0001                     	;# 
   305     0002                     	;# 
   306     0003                     	;# 
   307     0004                     	;# 
   308     0005                     	;# 
   309     0006                     	;# 
   310     0007                     	;# 
   311     000A                     	;# 
   312     000B                     	;# 
   313     000C                     	;# 
   314     000D                     	;# 
   315     000E                     	;# 
   316     000E                     	;# 
   317     000F                     	;# 
   318     0010                     	;# 
   319     0011                     	;# 
   320     0012                     	;# 
   321     0013                     	;# 
   322     0014                     	;# 
   323     0015                     	;# 
   324     0015                     	;# 
   325     0016                     	;# 
   326     0017                     	;# 
   327     0018                     	;# 
   328     0019                     	;# 
   329     001A                     	;# 
   330     001C                     	;# 
   331     001D                     	;# 
   332     001E                     	;# 
   333     001F                     	;# 
   334     0081                     	;# 
   335     0085                     	;# 
   336     0086                     	;# 
   337     0087                     	;# 
   338     008C                     	;# 
   339     008D                     	;# 
   340     008E                     	;# 
   341     008F                     	;# 
   342     0090                     	;# 
   343     0092                     	;# 
   344     0093                     	;# 
   345     0093                     	;# 
   346     0093                     	;# 
   347     0094                     	;# 
   348     0095                     	;# 
   349     0095                     	;# 
   350     0096                     	;# 
   351     0096                     	;# 
   352     0097                     	;# 
   353     0098                     	;# 
   354     0099                     	;# 
   355     009A                     	;# 
   356     009B                     	;# 
   357     009E                     	;# 
   358     009F                     	;# 
   359     010C                     	;# 
   360     010C                     	;# 
   361     010D                     	;# 
   362     010E                     	;# 
   363     010F                     	;# 
   364     0115                     	;# 
   365     0116                     	;# 
   366     0118                     	;# 
   367     0119                     	;# 
   368     011A                     	;# 
   369     011B                     	;# 
   370     011E                     	;# 
   371     011F                     	;# 
   372     018C                     	;# 
   373     018D                     	;# 
   374     019D                     	;# 
   375     019E                     	;# 
   376     0000                     	;# 
   377     0001                     	;# 
   378     0002                     	;# 
   379     0003                     	;# 
   380     0004                     	;# 
   381     0005                     	;# 
   382     0006                     	;# 
   383     0007                     	;# 
   384     000A                     	;# 
   385     000B                     	;# 
   386     000C                     	;# 
   387     000D                     	;# 
   388     000E                     	;# 
   389     000E                     	;# 
   390     000F                     	;# 
   391     0010                     	;# 
   392     0011                     	;# 
   393     0012                     	;# 
   394     0013                     	;# 
   395     0014                     	;# 
   396     0015                     	;# 
   397     0015                     	;# 
   398     0016                     	;# 
   399     0017                     	;# 
   400     0018                     	;# 
   401     0019                     	;# 
   402     001A                     	;# 
   403     001C                     	;# 
   404     001D                     	;# 
   405     001E                     	;# 
   406     001F                     	;# 
   407     0081                     	;# 
   408     0085                     	;# 
   409     0086                     	;# 
   410     0087                     	;# 
   411     008C                     	;# 
   412     008D                     	;# 
   413     008E                     	;# 
   414     008F                     	;# 
   415     0090                     	;# 
   416     0092                     	;# 
   417     0093                     	;# 
   418     0093                     	;# 
   419     0093                     	;# 
   420     0094                     	;# 
   421     0095                     	;# 
   422     0095                     	;# 
   423     0096                     	;# 
   424     0096                     	;# 
   425     0097                     	;# 
   426     0098                     	;# 
   427     0099                     	;# 
   428     009A                     	;# 
   429     009B                     	;# 
   430     009E                     	;# 
   431     009F                     	;# 
   432     010C                     	;# 
   433     010C                     	;# 
   434     010D                     	;# 
   435     010E                     	;# 
   436     010F                     	;# 
   437     0115                     	;# 
   438     0116                     	;# 
   439     0118                     	;# 
   440     0119                     	;# 
   441     011A                     	;# 
   442     011B                     	;# 
   443     011E                     	;# 
   444     011F                     	;# 
   445     018C                     	;# 
   446     018D                     	;# 
   447     019D                     	;# 
   448     019E                     	;# 
   449     0000                     	;# 
   450     0001                     	;# 
   451     0002                     	;# 
   452     0003                     	;# 
   453     0004                     	;# 
   454     0005                     	;# 
   455     0006                     	;# 
   456     0007                     	;# 
   457     000A                     	;# 
   458     000B                     	;# 
   459     000C                     	;# 
   460     000D                     	;# 
   461     000E                     	;# 
   462     000E                     	;# 
   463     000F                     	;# 
   464     0010                     	;# 
   465     0011                     	;# 
   466     0012                     	;# 
   467     0013                     	;# 
   468     0014                     	;# 
   469     0015                     	;# 
   470     0015                     	;# 
   471     0016                     	;# 
   472     0017                     	;# 
   473     0018                     	;# 
   474     0019                     	;# 
   475     001A                     	;# 
   476     001C                     	;# 
   477     001D                     	;# 
   478     001E                     	;# 
   479     001F                     	;# 
   480     0081                     	;# 
   481     0085                     	;# 
   482     0086                     	;# 
   483     0087                     	;# 
   484     008C                     	;# 
   485     008D                     	;# 
   486     008E                     	;# 
   487     008F                     	;# 
   488     0090                     	;# 
   489     0092                     	;# 
   490     0093                     	;# 
   491     0093                     	;# 
   492     0093                     	;# 
   493     0094                     	;# 
   494     0095                     	;# 
   495     0095                     	;# 
   496     0096                     	;# 
   497     0096                     	;# 
   498     0097                     	;# 
   499     0098                     	;# 
   500     0099                     	;# 
   501     009A                     	;# 
   502     009B                     	;# 
   503     009E                     	;# 
   504     009F                     	;# 
   505     010C                     	;# 
   506     010C                     	;# 
   507     010D                     	;# 
   508     010E                     	;# 
   509     010F                     	;# 
   510     0115                     	;# 
   511     0116                     	;# 
   512     0118                     	;# 
   513     0119                     	;# 
   514     011A                     	;# 
   515     011B                     	;# 
   516     011E                     	;# 
   517     011F                     	;# 
   518     018C                     	;# 
   519     018D                     	;# 
   520     019D                     	;# 
   521     019E                     	;# 
   522     0000                     	;# 
   523     0001                     	;# 
   524     0002                     	;# 
   525     0003                     	;# 
   526     0004                     	;# 
   527     0005                     	;# 
   528     0006                     	;# 
   529     0007                     	;# 
   530     000A                     	;# 
   531     000B                     	;# 
   532     000C                     	;# 
   533     000D                     	;# 
   534     000E                     	;# 
   535     000E                     	;# 
   536     000F                     	;# 
   537     0010                     	;# 
   538     0011                     	;# 
   539     0012                     	;# 
   540     0013                     	;# 
   541     0014                     	;# 
   542     0015                     	;# 
   543     0015                     	;# 
   544     0016                     	;# 
   545     0017                     	;# 
   546     0018                     	;# 
   547     0019                     	;# 
   548     001A                     	;# 
   549     001C                     	;# 
   550     001D                     	;# 
   551     001E                     	;# 
   552     001F                     	;# 
   553     0081                     	;# 
   554     0085                     	;# 
   555     0086                     	;# 
   556     0087                     	;# 
   557     008C                     	;# 
   558     008D                     	;# 
   559     008E                     	;# 
   560     008F                     	;# 
   561     0090                     	;# 
   562     0092                     	;# 
   563     0093                     	;# 
   564     0093                     	;# 
   565     0093                     	;# 
   566     0094                     	;# 
   567     0095                     	;# 
   568     0095                     	;# 
   569     0096                     	;# 
   570     0096                     	;# 
   571     0097                     	;# 
   572     0098                     	;# 
   573     0099                     	;# 
   574     009A                     	;# 
   575     009B                     	;# 
   576     009E                     	;# 
   577     009F                     	;# 
   578     010C                     	;# 
   579     010C                     	;# 
   580     010D                     	;# 
   581     010E                     	;# 
   582     010F                     	;# 
   583     0115                     	;# 
   584     0116                     	;# 
   585     0118                     	;# 
   586     0119                     	;# 
   587     011A                     	;# 
   588     011B                     	;# 
   589     011E                     	;# 
   590     011F                     	;# 
   591     018C                     	;# 
   592     018D                     	;# 
   593     019D                     	;# 
   594     019E                     	;# 
   595                           
   596                           	psect	strings
   597     073A                     __pstrings:
   598     073A                     stringtab:
   599     073A                     __stringtab:
   600     073A                     stringcode:	
   601                           ;	String table - string pointers are 1 byte each
   602                           
   603     073A                     stringdir:
   604     073A  3007               	movlw	high stringdir
   605     073B  008A               	movwf	10
   606     073C  0804               	movf	4,w
   607     073D  0A84               	incf	4,f
   608     073E  0782               	addwf	2,f
   609     073F                     __stringbase:
   610     073F  3400               	retlw	0
   611     0740                     __end_of__stringtab:
   612     0740                     pwr_pulse@pulse_shift:
   613     0740  3442               	retlw	66
   614     0741  3460               	retlw	96
   615     0742  34E5               	retlw	229
   616     0743  343B               	retlw	59
   617     0744                     __end_ofpwr_pulse@pulse_shift:
   618     0744                     pwr_pulse@pulse_shift_us:
   619     0744  3400               	retlw	0
   620     0745  3400               	retlw	0
   621     0746  3400               	retlw	0
   622     0747  3400               	retlw	0
   623     0748                     __end_ofpwr_pulse@pulse_shift_us:
   624     0007                     _PORTCbits	set	7
   625     001E                     _ADRESH	set	30
   626     001F                     _ADCON0bits	set	31
   627     000C                     _PIR1bits	set	12
   628     000B                     _INTCONbits	set	11
   629     0006                     _PORTB	set	6
   630     0007                     _PORTC	set	7
   631     0005                     _PORTA	set	5
   632     0087                     _TRISCbits	set	135
   633     009E                     _ADRESL	set	158
   634     009F                     _ADCON1bits	set	159
   635     008C                     _PIE1bits	set	140
   636     0086                     _TRISBbits	set	134
   637     008F                     _OSCCONbits	set	143
   638     0086                     _TRISB	set	134
   639     0087                     _TRISC	set	135
   640     0085                     _TRISA	set	133
   641     011E                     _ANSELbits	set	286
   642     0116                     _IOCBbits	set	278
   643     011F                     _ANSELHbits	set	287
   644     011E                     _ANSEL	set	286
   645                           
   646                           	psect	cinit
   647     0011                     start_initialization:	
   648                           ; #config settings
   649                           
   650     0011                     __initialization:
   651                           
   652                           ; Clear objects allocated to BANK0
   653     0011  1283               	bcf	3,5	;RP0=0, select bank0
   654     0012  1303               	bcf	3,6	;RP1=0, select bank0
   655     0013  01CB               	clrf	__pbssBANK0& (0+127)
   656     0014  01CC               	clrf	(__pbssBANK0+1)& (0+127)
   657     0015  01CD               	clrf	(__pbssBANK0+2)& (0+127)
   658     0016  01CE               	clrf	(__pbssBANK0+3)& (0+127)
   659     0017  01CF               	clrf	(__pbssBANK0+4)& (0+127)
   660     0018  01D0               	clrf	(__pbssBANK0+5)& (0+127)
   661                           
   662                           ; Clear objects allocated to BANK1
   663     0019  1683               	bsf	3,5	;RP0=1, select bank1
   664     001A  1303               	bcf	3,6	;RP1=0, select bank1
   665     001B  01D5               	clrf	__pbssBANK1& (0+127)
   666     001C  01D6               	clrf	(__pbssBANK1+1)& (0+127)
   667     001D  01D7               	clrf	(__pbssBANK1+2)& (0+127)
   668     001E  01D8               	clrf	(__pbssBANK1+3)& (0+127)
   669     001F  01D9               	clrf	(__pbssBANK1+4)& (0+127)
   670     0020  01DA               	clrf	(__pbssBANK1+5)& (0+127)
   671     0021  01DB               	clrf	(__pbssBANK1+6)& (0+127)
   672     0022  01DC               	clrf	(__pbssBANK1+7)& (0+127)
   673     0023  01DD               	clrf	(__pbssBANK1+8)& (0+127)
   674     0024                     end_of_initialization:	
   675                           ;End of C runtime variable initialization code
   676                           
   677     0024                     __end_of__initialization:
   678     0024  0183               	clrf	3
   679     0025  118A  2F55         	ljmp	_main	;jump to C main() function
   680                           
   681                           	psect	bssBANK0
   682     004B                     __pbssBANK0:
   683     004B                     malloc@lock:
   684     004B                     	ds	4
   685     004F                     _power_lvl:
   686     004F                     	ds	2
   687                           
   688                           	psect	bssBANK1
   689     00D5                     __pbssBANK1:
   690     00D5                     _brkp:
   691     00D5                     	ds	2
   692     00D7                     malloc@end:
   693     00D7                     	ds	2
   694     00D9                     malloc@cur:
   695     00D9                     	ds	2
   696     00DB                     _errno:
   697     00DB                     	ds	2
   698     00DD                     ___freelist:
   699     00DD                     	ds	1
   700                           
   701                           	psect	cstackBANK1
   702     00A0                     __pcstackBANK1:
   703     00A0                     ??_start_adc_conversion:
   704     00A0                     ??_setup_RC7:	
   705                           ; 1 bytes @ 0x0
   706                           
   707     00A0                     ??_setup_RC2:	
   708                           ; 1 bytes @ 0x0
   709                           
   710     00A0                     ??_turn_board_on:	
   711                           ; 1 bytes @ 0x0
   712                           
   713     00A0                     ??_start_spectating_zero_crossing:	
   714                           ; 1 bytes @ 0x0
   715                           
   716     00A0                     ?___simple_search_fl:	
   717                           ; 1 bytes @ 0x0
   718                           
   719     00A0                     ??___expand_heap:	
   720                           ; 1 bytes @ 0x0
   721                           
   722     00A0                     ??_global_setup:	
   723                           ; 1 bytes @ 0x0
   724                           
   725     00A0                     ??_setup_GPIO:	
   726                           ; 1 bytes @ 0x0
   727                           
   728     00A0                     ?_led_on:	
   729                           ; 1 bytes @ 0x0
   730                           
   731     00A0                     ?_led_off:	
   732                           ; 1 bytes @ 0x0
   733                           
   734     00A0                     ??_setup_RB5:	
   735                           ; 1 bytes @ 0x0
   736                           
   737     00A0                     ??_setup_ADC:	
   738                           ; 1 bytes @ 0x0
   739                           
   740     00A0                     ??_set_full_pwr:	
   741                           ; 1 bytes @ 0x0
   742                           
   743     00A0                     ___expand_heap@pn:	
   744                           ; 1 bytes @ 0x0
   745                           
   746     00A0                     led_on@led:	
   747                           ; 1 bytes @ 0x0
   748                           
   749     00A0                     led_off@led:	
   750                           ; 2 bytes @ 0x0
   751                           
   752     00A0                     ___simple_search_fl@n:	
   753                           ; 2 bytes @ 0x0
   754                           
   755                           
   756                           ; 2 bytes @ 0x0
   757     00A0                     	ds	1
   758     00A1                     ___expand_heap@n:
   759                           
   760                           ; 2 bytes @ 0x1
   761     00A1                     	ds	1
   762     00A2                     ??___simple_search_fl:
   763     00A2                     ??_led_on:	
   764                           ; 1 bytes @ 0x2
   765                           
   766     00A2                     ??_led_off:	
   767                           ; 1 bytes @ 0x2
   768                           
   769                           
   770                           ; 1 bytes @ 0x2
   771     00A2                     	ds	1
   772     00A3                     ___expand_heap@new_brkp:
   773                           
   774                           ; 2 bytes @ 0x3
   775     00A3                     	ds	2
   776     00A5                     led_off@shift:
   777                           
   778                           ; 2 bytes @ 0x5
   779     00A5                     	ds	1
   780     00A6                     ___simple_search_fl@remaining_size:
   781                           
   782                           ; 2 bytes @ 0x6
   783     00A6                     	ds	1
   784     00A7                     led_on@shift:
   785                           
   786                           ; 2 bytes @ 0x7
   787     00A7                     	ds	1
   788     00A8                     ___simple_search_fl@best_last:
   789                           
   790                           ; 1 bytes @ 0x8
   791     00A8                     	ds	1
   792     00A9                     ___simple_search_fl@split:
   793                           
   794                           ; 1 bytes @ 0x9
   795     00A9                     	ds	1
   796     00AA                     ___simple_search_fl@last:
   797                           
   798                           ; 1 bytes @ 0xA
   799     00AA                     	ds	1
   800     00AB                     ___simple_search_fl@next:
   801                           
   802                           ; 1 bytes @ 0xB
   803     00AB                     	ds	1
   804     00AC                     ___simple_search_fl@c:
   805                           
   806                           ; 1 bytes @ 0xC
   807     00AC                     	ds	1
   808     00AD                     ___simple_search_fl@best:
   809                           
   810                           ; 1 bytes @ 0xD
   811     00AD                     	ds	1
   812     00AE                     ?_malloc:
   813     00AE                     malloc@n:	
   814                           ; 2 bytes @ 0xE
   815                           
   816                           
   817                           ; 2 bytes @ 0xE
   818     00AE                     	ds	2
   819     00B0                     ??_malloc:
   820                           
   821                           ; 1 bytes @ 0x10
   822     00B0                     	ds	2
   823     00B2                     malloc@m:
   824                           
   825                           ; 2 bytes @ 0x12
   826     00B2                     	ds	2
   827     00B4                     malloc@sz:
   828                           
   829                           ; 2 bytes @ 0x14
   830     00B4                     	ds	2
   831     00B6                     malloc@size:
   832                           
   833                           ; 2 bytes @ 0x16
   834     00B6                     	ds	2
   835     00B8                     malloc@p:
   836                           
   837                           ; 2 bytes @ 0x18
   838     00B8                     	ds	2
   839     00BA                     malloc@new:
   840                           
   841                           ; 2 bytes @ 0x1A
   842     00BA                     	ds	2
   843     00BC                     ??_gather_LED_info:
   844                           
   845                           ; 1 bytes @ 0x1C
   846     00BC                     	ds	4
   847     00C0                     gather_LED_info@LED1:
   848                           
   849                           ; 2 bytes @ 0x20
   850     00C0                     	ds	2
   851     00C2                     gather_LED_info@LED2:
   852                           
   853                           ; 2 bytes @ 0x22
   854     00C2                     	ds	2
   855     00C4                     gather_LED_info@LED3:
   856                           
   857                           ; 2 bytes @ 0x24
   858     00C4                     	ds	2
   859     00C6                     gather_LED_info@LED4:
   860                           
   861                           ; 2 bytes @ 0x26
   862     00C6                     	ds	2
   863     00C8                     gather_LED_info@LED5:
   864                           
   865                           ; 2 bytes @ 0x28
   866     00C8                     	ds	2
   867     00CA                     gather_LED_info@leds_info:
   868                           
   869                           ; 2 bytes @ 0x2A
   870     00CA                     	ds	2
   871     00CC                     ??_blink:
   872                           
   873                           ; 1 bytes @ 0x2C
   874     00CC                     	ds	5
   875     00D1                     blink@leds_info:
   876                           
   877                           ; 2 bytes @ 0x31
   878     00D1                     	ds	2
   879     00D3                     blink@i:
   880                           
   881                           ; 2 bytes @ 0x33
   882     00D3                     	ds	2
   883     00D5                     ??_main:
   884                           
   885                           	psect	cstackCOMMON
   886     0070                     __pcstackCOMMON:	
   887                           ; 1 bytes @ 0x35
   888                           
   889     0070                     ?_reset_adc_interrupt:
   890     0070                     ??_reset_adc_interrupt:	
   891                           ; 1 bytes @ 0x0
   892                           
   893     0070                     ?_set_state_according_to_pwr_btn:	
   894                           ; 1 bytes @ 0x0
   895                           
   896     0070                     ?_pwr_pulse:	
   897                           ; 1 bytes @ 0x0
   898                           
   899     0070                     ??_pwr_pulse:	
   900                           ; 1 bytes @ 0x0
   901                           
   902     0070                     ?_start_adc_conversion:	
   903                           ; 1 bytes @ 0x0
   904                           
   905     0070                     ?_setup_RC7:	
   906                           ; 1 bytes @ 0x0
   907                           
   908     0070                     ?_setup_RC2:	
   909                           ; 1 bytes @ 0x0
   910                           
   911     0070                     ?_turn_board_on:	
   912                           ; 1 bytes @ 0x0
   913                           
   914     0070                     ?_blink:	
   915                           ; 1 bytes @ 0x0
   916                           
   917     0070                     ?_start_spectating_zero_crossing:	
   918                           ; 1 bytes @ 0x0
   919                           
   920     0070                     ?_isr:	
   921                           ; 1 bytes @ 0x0
   922                           
   923     0070                     ?_global_setup:	
   924                           ; 1 bytes @ 0x0
   925                           
   926     0070                     ?_main:	
   927                           ; 1 bytes @ 0x0
   928                           
   929     0070                     ?_setup_GPIO:	
   930                           ; 1 bytes @ 0x0
   931                           
   932     0070                     ?_setup_RB5:	
   933                           ; 1 bytes @ 0x0
   934                           
   935     0070                     ?_setup_ADC:	
   936                           ; 1 bytes @ 0x0
   937                           
   938     0070                     ?_set_low_pwr:	
   939                           ; 1 bytes @ 0x0
   940                           
   941     0070                     ??_set_low_pwr:	
   942                           ; 1 bytes @ 0x0
   943                           
   944     0070                     ?_set_full_pwr:	
   945                           ; 1 bytes @ 0x0
   946                           
   947     0070                     ?_turn_board_off:	
   948                           ; 1 bytes @ 0x0
   949                           
   950     0070                     ??_turn_board_off:	
   951                           ; 1 bytes @ 0x0
   952                           
   953     0070                     ?i1_start_adc_conversion:	
   954                           ; 1 bytes @ 0x0
   955                           
   956     0070                     ??i1_start_adc_conversion:	
   957                           ; 1 bytes @ 0x0
   958                           
   959     0070                     ?i1_set_full_pwr:	
   960                           ; 1 bytes @ 0x0
   961                           
   962     0070                     ??i1_set_full_pwr:	
   963                           ; 1 bytes @ 0x0
   964                           
   965     0070                     ?i1_turn_board_on:	
   966                           ; 1 bytes @ 0x0
   967                           
   968     0070                     ??i1_turn_board_on:	
   969                           ; 1 bytes @ 0x0
   970                           
   971     0070                     ?_is_adc_conversion_done:	
   972                           ; 1 bytes @ 0x0
   973                           
   974     0070                     ?_gather_LED_info:	
   975                           ; 2 bytes @ 0x0
   976                           
   977     0070                     ?___expand_heap:	
   978                           ; 2 bytes @ 0x0
   979                           
   980     0070                     ?_is_pwr_btn_pressed:	
   981                           ; 2 bytes @ 0x0
   982                           
   983     0070                     ?i1___wmul:	
   984                           ; 2 bytes @ 0x0
   985                           
   986     0070                     i1___wmul@multiplier:	
   987                           ; 2 bytes @ 0x0
   988                           
   989                           
   990                           ; 2 bytes @ 0x0
   991     0070                     	ds	2
   992     0072                     ??_is_adc_conversion_done:
   993     0072                     ??_is_pwr_btn_pressed:	
   994                           ; 1 bytes @ 0x2
   995                           
   996     0072                     i1___wmul@multiplicand:	
   997                           ; 1 bytes @ 0x2
   998                           
   999                           
  1000                           ; 2 bytes @ 0x2
  1001     0072                     	ds	2
  1002     0074                     ??i1___wmul:
  1003     0074                     _is_adc_conversion_done$425:	
  1004                           ; 1 bytes @ 0x4
  1005                           
  1006     0074                     i1___wmul@product:	
  1007                           ; 1 bytes @ 0x4
  1008                           
  1009                           
  1010                           ; 2 bytes @ 0x4
  1011     0074                     	ds	1
  1012     0075                     ??_set_state_according_to_pwr_btn:
  1013                           
  1014                           ; 1 bytes @ 0x5
  1015     0075                     	ds	1
  1016     0076                     ?___awdiv:
  1017     0076                     ___awdiv@divisor:	
  1018                           ; 2 bytes @ 0x6
  1019                           
  1020                           
  1021                           ; 2 bytes @ 0x6
  1022     0076                     	ds	2
  1023     0078                     ___awdiv@dividend:
  1024                           
  1025                           ; 2 bytes @ 0x8
  1026     0078                     	ds	2
  1027     007A                     ??___awdiv:
  1028     007A                     ___awdiv@counter:	
  1029                           ; 1 bytes @ 0xA
  1030                           
  1031                           
  1032                           ; 1 bytes @ 0xA
  1033     007A                     	ds	1
  1034     007B                     ___awdiv@sign:
  1035                           
  1036                           ; 1 bytes @ 0xB
  1037     007B                     	ds	1
  1038     007C                     ___awdiv@quotient:
  1039                           
  1040                           ; 2 bytes @ 0xC
  1041     007C                     	ds	2
  1042     007E                     ??_get_conversion_result:
  1043                           
  1044                           	psect	cstackBANK0
  1045     0020                     __pcstackBANK0:	
  1046                           ; 1 bytes @ 0xE
  1047                           
  1048     0020                     ?___xxtofl:
  1049     0020                     ___xxtofl@val:	
  1050                           ; 4 bytes @ 0x0
  1051                           
  1052                           
  1053                           ; 4 bytes @ 0x0
  1054     0020                     	ds	4
  1055     0024                     ??___xxtofl:
  1056                           
  1057                           ; 1 bytes @ 0x4
  1058     0024                     	ds	4
  1059     0028                     ___xxtofl@sign:
  1060                           
  1061                           ; 1 bytes @ 0x8
  1062     0028                     	ds	1
  1063     0029                     ___xxtofl@exp:
  1064                           
  1065                           ; 1 bytes @ 0x9
  1066     0029                     	ds	1
  1067     002A                     ___xxtofl@arg:
  1068                           
  1069                           ; 4 bytes @ 0xA
  1070     002A                     	ds	4
  1071     002E                     ?_get_conversion_result:
  1072                           
  1073                           ; 4 bytes @ 0xE
  1074     002E                     	ds	4
  1075     0032                     get_conversion_result@voltage:
  1076                           
  1077                           ; 4 bytes @ 0x12
  1078     0032                     	ds	4
  1079     0036                     get_conversion_result@adc_res:
  1080                           
  1081                           ; 2 bytes @ 0x16
  1082     0036                     	ds	2
  1083     0038                     ?___fleq:
  1084     0038                     ___fleq@ff1:	
  1085                           ; 1 bit 
  1086                           
  1087                           
  1088                           ; 4 bytes @ 0x18
  1089     0038                     	ds	4
  1090     003C                     ___fleq@ff2:
  1091                           
  1092                           ; 4 bytes @ 0x1C
  1093     003C                     	ds	4
  1094     0040                     ??___fleq:
  1095                           
  1096                           ; 1 bytes @ 0x20
  1097     0040                     	ds	4
  1098     0044                     ?_is_crossing_zero_point:
  1099                           
  1100                           ; 2 bytes @ 0x24
  1101     0044                     	ds	2
  1102     0046                     ??_is_crossing_zero_point:
  1103                           
  1104                           ; 1 bytes @ 0x26
  1105     0046                     	ds	2
  1106     0048                     ??_isr:
  1107                           
  1108                           ; 1 bytes @ 0x28
  1109     0048                     	ds	3
  1110                           
  1111                           	psect	maintext
  1112     0755                     __pmaintext:	
  1113 ;;
  1114 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1115 ;;
  1116 ;; *************** function _main *****************
  1117 ;; Defined at:
  1118 ;;		line 38 in file "main.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;		None
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;		None
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      void 
  1125 ;; Registers used:
  1126 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1127 ;; Tracked objects:
  1128 ;;		On entry : B00/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1132 ;;      Params:         0       0       0       0
  1133 ;;      Locals:         0       0       0       0
  1134 ;;      Temps:          0       0       0       0
  1135 ;;      Totals:         0       0       0       0
  1136 ;;Total ram usage:        0 bytes
  1137 ;; Hardware stack levels required when called: 8
  1138 ;; This function calls:
  1139 ;;		_blink
  1140 ;;		_global_setup
  1141 ;;		_start_spectating_zero_crossing
  1142 ;; This function is called by:
  1143 ;;		Startup code after reset
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147     0755                     _main:	
  1148                           ;psect for function _main
  1149                           
  1150     0755                     l1662:	
  1151                           ;incstack = 0
  1152                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1153                           
  1154                           
  1155                           ;main.c: 39:     blink();
  1156     0755  118A  2434  118A   	fcall	_blink
  1157     0758                     l1664:
  1158                           
  1159                           ;main.c: 41:     global_setup();
  1160     0758  118A  2761  118A   	fcall	_global_setup
  1161     075B                     l1666:
  1162                           
  1163                           ;main.c: 43:     start_spectating_zero_crossing();
  1164     075B  118A  276C  118A   	fcall	_start_spectating_zero_crossing
  1165     075E                     l39:	
  1166                           ;main.c: 45:     while (1){
  1167                           
  1168     075E                     l40:	
  1169                           ;main.c: 47:     }
  1170                           
  1171     075E  2F5E               	goto	l39
  1172     075F  118A  280F         	ljmp	start
  1173     0761                     __end_of_main:
  1174                           
  1175                           	psect	text1
  1176     076C                     __ptext1:	
  1177 ;; *************** function _start_spectating_zero_crossing *****************
  1178 ;; Defined at:
  1179 ;;		line 47 in file "task2/zero_crossing.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;		None
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;		None
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  1    wreg      void 
  1186 ;; Registers used:
  1187 ;;		wreg, status,2, status,0, pclath, cstack
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1193 ;;      Params:         0       0       0       0
  1194 ;;      Locals:         0       0       0       0
  1195 ;;      Temps:          0       0       0       0
  1196 ;;      Totals:         0       0       0       0
  1197 ;;Total ram usage:        0 bytes
  1198 ;; Hardware stack levels used: 1
  1199 ;; Hardware stack levels required when called: 5
  1200 ;; This function calls:
  1201 ;;		_setup_ADC
  1202 ;;		_setup_RB5
  1203 ;;		_start_adc_conversion
  1204 ;; This function is called by:
  1205 ;;		_main
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209     076C                     _start_spectating_zero_crossing:	
  1210                           ;psect for function _start_spectating_zero_crossing
  1211                           
  1212     076C                     l1644:	
  1213                           ;incstack = 0
  1214                           ; Regs used in _start_spectating_zero_crossing: [wreg+status,2+status,0+pclath+cstack]
  1215                           
  1216                           
  1217                           ;task2/zero_crossing.c: 48:     setup_RB5();
  1218     076C  118A  2776  118A   	fcall	_setup_RB5
  1219     076F                     l1646:
  1220                           
  1221                           ;task2/zero_crossing.c: 49:     setup_ADC();
  1222     076F  118A  26FF  118A   	fcall	_setup_ADC
  1223     0772                     l1648:
  1224                           
  1225                           ;task2/zero_crossing.c: 50:     start_adc_conversion();
  1226     0772  118A  27AD  118A   	fcall	_start_adc_conversion
  1227     0775                     l125:
  1228     0775  0008               	return
  1229     0776                     __end_of_start_spectating_zero_crossing:
  1230                           
  1231                           	psect	text2
  1232     07AD                     __ptext2:	
  1233 ;; *************** function _start_adc_conversion *****************
  1234 ;; Defined at:
  1235 ;;		line 22 in file "task2/zero_crossing.c"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;		None
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;		None
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  1    wreg      void 
  1242 ;; Registers used:
  1243 ;;		None
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1249 ;;      Params:         0       0       0       0
  1250 ;;      Locals:         0       0       0       0
  1251 ;;      Temps:          0       0       0       0
  1252 ;;      Totals:         0       0       0       0
  1253 ;;Total ram usage:        0 bytes
  1254 ;; Hardware stack levels used: 1
  1255 ;; Hardware stack levels required when called: 4
  1256 ;; This function calls:
  1257 ;;		Nothing
  1258 ;; This function is called by:
  1259 ;;		_start_spectating_zero_crossing
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263     07AD                     _start_adc_conversion:	
  1264                           ;psect for function _start_adc_conversion
  1265                           
  1266     07AD                     l1488:	
  1267                           ;incstack = 0
  1268                           ; Regs used in _start_adc_conversion: []
  1269                           
  1270                           
  1271                           ;task2/zero_crossing.c: 23:     ADCON0bits.GO_nDONE = 1;
  1272     07AD  1283               	bcf	3,5	;RP0=0, select bank0
  1273     07AE  1303               	bcf	3,6	;RP1=0, select bank0
  1274     07AF  149F               	bsf	31,1	;volatile
  1275     07B0                     l108:
  1276     07B0  0008               	return
  1277     07B1                     __end_of_start_adc_conversion:
  1278                           
  1279                           	psect	text3
  1280     0776                     __ptext3:	
  1281 ;; *************** function _setup_RB5 *****************
  1282 ;; Defined at:
  1283 ;;		line 4 in file "task2/zero_crossing.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;		None
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;		None
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      void 
  1290 ;; Registers used:
  1291 ;;		None
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1297 ;;      Params:         0       0       0       0
  1298 ;;      Locals:         0       0       0       0
  1299 ;;      Temps:          0       0       0       0
  1300 ;;      Totals:         0       0       0       0
  1301 ;;Total ram usage:        0 bytes
  1302 ;; Hardware stack levels used: 1
  1303 ;; Hardware stack levels required when called: 4
  1304 ;; This function calls:
  1305 ;;		Nothing
  1306 ;; This function is called by:
  1307 ;;		_start_spectating_zero_crossing
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311     0776                     _setup_RB5:	
  1312                           ;psect for function _setup_RB5
  1313                           
  1314     0776                     l1552:	
  1315                           ;incstack = 0
  1316                           ; Regs used in _setup_RB5: []
  1317                           
  1318                           
  1319                           ;task2/zero_crossing.c: 5:     ANSELHbits.ANS11 = 0x1;
  1320     0776  1283               	bcf	3,5	;RP0=0, select bank2
  1321     0777  1703               	bsf	3,6	;RP1=1, select bank2
  1322     0778  159F               	bsf	31,3	;volatile
  1323                           
  1324                           ;task2/zero_crossing.c: 6:     TRISBbits.TRISB5 = 0x1;
  1325     0779  1683               	bsf	3,5	;RP0=1, select bank1
  1326     077A  1303               	bcf	3,6	;RP1=0, select bank1
  1327     077B  1686               	bsf	6,5	;volatile
  1328                           
  1329                           ;task2/zero_crossing.c: 7:     IOCBbits.IOCB5 = 0x1;
  1330     077C  1283               	bcf	3,5	;RP0=0, select bank2
  1331     077D  1703               	bsf	3,6	;RP1=1, select bank2
  1332     077E  1696               	bsf	22,5	;volatile
  1333     077F                     l102:
  1334     077F  0008               	return
  1335     0780                     __end_of_setup_RB5:
  1336                           
  1337                           	psect	text4
  1338     06FF                     __ptext4:	
  1339 ;; *************** function _setup_ADC *****************
  1340 ;; Defined at:
  1341 ;;		line 10 in file "task2/zero_crossing.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;		None
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;		None
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  1    wreg      void 
  1348 ;; Registers used:
  1349 ;;		wreg, status,2, status,0
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1355 ;;      Params:         0       0       0       0
  1356 ;;      Locals:         0       0       0       0
  1357 ;;      Temps:          0       0       0       0
  1358 ;;      Totals:         0       0       0       0
  1359 ;;Total ram usage:        0 bytes
  1360 ;; Hardware stack levels used: 1
  1361 ;; Hardware stack levels required when called: 4
  1362 ;; This function calls:
  1363 ;;		Nothing
  1364 ;; This function is called by:
  1365 ;;		_start_spectating_zero_crossing
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369     06FF                     _setup_ADC:	
  1370                           ;psect for function _setup_ADC
  1371                           
  1372     06FF                     l1554:	
  1373                           ;incstack = 0
  1374                           ; Regs used in _setup_ADC: [wreg+status,2+status,0]
  1375                           
  1376                           
  1377                           ;task2/zero_crossing.c: 11:     PIE1bits.ADIE = 0x1;
  1378     06FF  1683               	bsf	3,5	;RP0=1, select bank1
  1379     0700  1303               	bcf	3,6	;RP1=0, select bank1
  1380     0701  170C               	bsf	12,6	;volatile
  1381                           
  1382                           ;task2/zero_crossing.c: 12:     PIR1bits.ADIF = 0;
  1383     0702  1283               	bcf	3,5	;RP0=0, select bank0
  1384     0703  1303               	bcf	3,6	;RP1=0, select bank0
  1385     0704  130C               	bcf	12,6	;volatile
  1386                           
  1387                           ;task2/zero_crossing.c: 13:     INTCONbits.PEIE = 0x1;
  1388     0705  170B               	bsf	11,6	;volatile
  1389                           
  1390                           ;task2/zero_crossing.c: 15:     ADCON0bits.ADON = 0x1;
  1391     0706  141F               	bsf	31,0	;volatile
  1392                           
  1393                           ;task2/zero_crossing.c: 16:     ADCON0bits.VCFG = 0x0;
  1394     0707  131F               	bcf	31,6	;volatile
  1395                           
  1396                           ;task2/zero_crossing.c: 17:     ADCON0bits.ADFM = 0x1;
  1397     0708  179F               	bsf	31,7	;volatile
  1398     0709                     l1556:
  1399                           
  1400                           ;task2/zero_crossing.c: 18:     ADCON0bits.CHS = 0b1011;
  1401     0709  081F               	movf	31,w	;volatile
  1402     070A  39C3               	andlw	-61
  1403     070B  382C               	iorlw	44
  1404     070C  009F               	movwf	31	;volatile
  1405                           
  1406                           ;task2/zero_crossing.c: 19:     ADCON1bits.ADCS = 0b101;
  1407     070D  1683               	bsf	3,5	;RP0=1, select bank1
  1408     070E  1303               	bcf	3,6	;RP1=0, select bank1
  1409     070F  081F               	movf	31,w	;volatile
  1410     0710  398F               	andlw	-113
  1411     0711  3850               	iorlw	80
  1412     0712  009F               	movwf	31	;volatile
  1413     0713                     l105:
  1414     0713  0008               	return
  1415     0714                     __end_of_setup_ADC:
  1416                           
  1417                           	psect	text5
  1418     0761                     __ptext5:	
  1419 ;; *************** function _global_setup *****************
  1420 ;; Defined at:
  1421 ;;		line 31 in file "main.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;		None
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;		None
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  1    wreg      void 
  1428 ;; Registers used:
  1429 ;;		status,2, status,0, pclath, cstack
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1435 ;;      Params:         0       0       0       0
  1436 ;;      Locals:         0       0       0       0
  1437 ;;      Temps:          0       0       0       0
  1438 ;;      Totals:         0       0       0       0
  1439 ;;Total ram usage:        0 bytes
  1440 ;; Hardware stack levels used: 1
  1441 ;; Hardware stack levels required when called: 6
  1442 ;; This function calls:
  1443 ;;		_setup_RC2
  1444 ;;		_setup_RC7
  1445 ;;		_turn_board_on
  1446 ;; This function is called by:
  1447 ;;		_main
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451     0761                     _global_setup:	
  1452                           ;psect for function _global_setup
  1453                           
  1454     0761                     l1622:	
  1455                           ;incstack = 0
  1456                           ; Regs used in _global_setup: [status,2+status,0+pclath+cstack]
  1457                           
  1458                           
  1459                           ;main.c: 32:     INTCONbits.GIE = 1;
  1460     0761  178B               	bsf	11,7	;volatile
  1461     0762                     l1624:
  1462                           
  1463                           ;main.c: 33:     setup_RC7();
  1464     0762  118A  2780  118A   	fcall	_setup_RC7
  1465                           
  1466                           ;main.c: 34:     setup_RC2();
  1467     0765  118A  2787  118A   	fcall	_setup_RC2
  1468                           
  1469                           ;main.c: 35:     turn_board_on();
  1470     0768  118A  27B1  118A   	fcall	_turn_board_on
  1471     076B                     l34:
  1472     076B  0008               	return
  1473     076C                     __end_of_global_setup:
  1474                           
  1475                           	psect	text6
  1476     07B1                     __ptext6:	
  1477 ;; *************** function _turn_board_on *****************
  1478 ;; Defined at:
  1479 ;;		line 3 in file "task4/state_change.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;		None
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;		None
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  1    wreg      void 
  1486 ;; Registers used:
  1487 ;;		status,2, status,0, pclath, cstack
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1493 ;;      Params:         0       0       0       0
  1494 ;;      Locals:         0       0       0       0
  1495 ;;      Temps:          0       0       0       0
  1496 ;;      Totals:         0       0       0       0
  1497 ;;Total ram usage:        0 bytes
  1498 ;; Hardware stack levels used: 1
  1499 ;; Hardware stack levels required when called: 5
  1500 ;; This function calls:
  1501 ;;		_set_full_pwr
  1502 ;; This function is called by:
  1503 ;;		_global_setup
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507     07B1                     _turn_board_on:	
  1508                           ;psect for function _turn_board_on
  1509                           
  1510     07B1                     l1494:	
  1511                           ;incstack = 0
  1512                           ; Regs used in _turn_board_on: [status,2+status,0+pclath+cstack]
  1513                           
  1514                           
  1515                           ;task4/state_change.c: 4:     set_full_pwr();
  1516     07B1  118A  27A3  118A   	fcall	_set_full_pwr
  1517     07B4                     l163:
  1518     07B4  0008               	return
  1519     07B5                     __end_of_turn_board_on:
  1520                           
  1521                           	psect	text7
  1522     07A3                     __ptext7:	
  1523 ;; *************** function _set_full_pwr *****************
  1524 ;; Defined at:
  1525 ;;		line 16 in file "task3/adjust_power.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;		None
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;		None
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  1    wreg      void 
  1532 ;; Registers used:
  1533 ;;		status,2
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1539 ;;      Params:         0       0       0       0
  1540 ;;      Locals:         0       0       0       0
  1541 ;;      Temps:          0       0       0       0
  1542 ;;      Totals:         0       0       0       0
  1543 ;;Total ram usage:        0 bytes
  1544 ;; Hardware stack levels used: 1
  1545 ;; Hardware stack levels required when called: 4
  1546 ;; This function calls:
  1547 ;;		Nothing
  1548 ;; This function is called by:
  1549 ;;		_turn_board_on
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553     07A3                     _set_full_pwr:	
  1554                           ;psect for function _set_full_pwr
  1555                           
  1556     07A3                     l1378:	
  1557                           ;incstack = 0
  1558                           ; Regs used in _set_full_pwr: [status,2]
  1559                           
  1560                           
  1561                           ;task3/adjust_power.c: 17:     power_lvl = 0;
  1562     07A3  1283               	bcf	3,5	;RP0=0, select bank0
  1563     07A4  1303               	bcf	3,6	;RP1=0, select bank0
  1564     07A5  01CF               	clrf	_power_lvl	;volatile
  1565     07A6  01D0               	clrf	_power_lvl+1	;volatile
  1566     07A7                     l144:
  1567     07A7  0008               	return
  1568     07A8                     __end_of_set_full_pwr:
  1569                           
  1570                           	psect	text8
  1571     0780                     __ptext8:	
  1572 ;; *************** function _setup_RC7 *****************
  1573 ;; Defined at:
  1574 ;;		line 7 in file "task3/adjust_power.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;		None
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;		None
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  1    wreg      void 
  1581 ;; Registers used:
  1582 ;;		None
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1588 ;;      Params:         0       0       0       0
  1589 ;;      Locals:         0       0       0       0
  1590 ;;      Temps:          0       0       0       0
  1591 ;;      Totals:         0       0       0       0
  1592 ;;Total ram usage:        0 bytes
  1593 ;; Hardware stack levels used: 1
  1594 ;; Hardware stack levels required when called: 4
  1595 ;; This function calls:
  1596 ;;		Nothing
  1597 ;; This function is called by:
  1598 ;;		_global_setup
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602     0780                     _setup_RC7:	
  1603                           ;psect for function _setup_RC7
  1604                           
  1605     0780                     l1490:	
  1606                           ;incstack = 0
  1607                           ; Regs used in _setup_RC7: []
  1608                           
  1609                           
  1610                           ;task3/adjust_power.c: 8:     ANSELHbits.ANS9 = 0;
  1611     0780  1283               	bcf	3,5	;RP0=0, select bank2
  1612     0781  1703               	bsf	3,6	;RP1=1, select bank2
  1613     0782  109F               	bcf	31,1	;volatile
  1614                           
  1615                           ;task3/adjust_power.c: 9:     TRISCbits.TRISC7 = 0;
  1616     0783  1683               	bsf	3,5	;RP0=1, select bank1
  1617     0784  1303               	bcf	3,6	;RP1=0, select bank1
  1618     0785  1387               	bcf	7,7	;volatile
  1619     0786                     l138:
  1620     0786  0008               	return
  1621     0787                     __end_of_setup_RC7:
  1622                           
  1623                           	psect	text9
  1624     0787                     __ptext9:	
  1625 ;; *************** function _setup_RC2 *****************
  1626 ;; Defined at:
  1627 ;;		line 6 in file "task5/pwr_btn_control.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;		None
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;		None
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  1    wreg      void 
  1634 ;; Registers used:
  1635 ;;		None
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1641 ;;      Params:         0       0       0       0
  1642 ;;      Locals:         0       0       0       0
  1643 ;;      Temps:          0       0       0       0
  1644 ;;      Totals:         0       0       0       0
  1645 ;;Total ram usage:        0 bytes
  1646 ;; Hardware stack levels used: 1
  1647 ;; Hardware stack levels required when called: 4
  1648 ;; This function calls:
  1649 ;;		Nothing
  1650 ;; This function is called by:
  1651 ;;		_global_setup
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655     0787                     _setup_RC2:	
  1656                           ;psect for function _setup_RC2
  1657                           
  1658     0787                     l1492:	
  1659                           ;incstack = 0
  1660                           ; Regs used in _setup_RC2: []
  1661                           
  1662                           
  1663                           ;task5/pwr_btn_control.c: 7:     ANSELbits.ANS6 = 0;
  1664     0787  1283               	bcf	3,5	;RP0=0, select bank2
  1665     0788  1703               	bsf	3,6	;RP1=1, select bank2
  1666     0789  131E               	bcf	30,6	;volatile
  1667                           
  1668                           ;task5/pwr_btn_control.c: 8:     TRISCbits.TRISC2 = 1;
  1669     078A  1683               	bsf	3,5	;RP0=1, select bank1
  1670     078B  1303               	bcf	3,6	;RP1=0, select bank1
  1671     078C  1507               	bsf	7,2	;volatile
  1672     078D                     l179:
  1673     078D  0008               	return
  1674     078E                     __end_of_setup_RC2:
  1675                           
  1676                           	psect	text10
  1677     0434                     __ptext10:	
  1678 ;; *************** function _blink *****************
  1679 ;; Defined at:
  1680 ;;		line 57 in file "task1/blink.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;		None
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;  i               2   51[BANK1 ] int 
  1685 ;;  leds_info       2   49[BANK1 ] PTR PTR struct .
  1686 ;;		 -> __heap_hi(0), NULL(0), 
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  1    wreg      void 
  1689 ;; Registers used:
  1690 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1696 ;;      Params:         0       0       0       0
  1697 ;;      Locals:         0       0       4       0
  1698 ;;      Temps:          0       0       5       0
  1699 ;;      Totals:         0       0       9       0
  1700 ;;Total ram usage:        9 bytes
  1701 ;; Hardware stack levels used: 1
  1702 ;; Hardware stack levels required when called: 7
  1703 ;; This function calls:
  1704 ;;		_gather_LED_info
  1705 ;;		_led_off
  1706 ;;		_led_on
  1707 ;;		_setup_GPIO
  1708 ;; This function is called by:
  1709 ;;		_main
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713     0434                     _blink:	
  1714                           ;psect for function _blink
  1715                           
  1716     0434                     l1626:	
  1717                           ;incstack = 0
  1718                           ; Regs used in _blink: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1719                           
  1720                           
  1721                           ;task1/blink.c: 58:     setup_GPIO();
  1722     0434  118A  278E  118A   	fcall	_setup_GPIO
  1723     0437                     l1628:
  1724                           
  1725                           ;task1/blink.c: 59:     LED_info** leds_info = gather_LED_info();
  1726     0437  118A  2027  118A   	fcall	_gather_LED_info
  1727     043A  0870               	movf	?_gather_LED_info,w
  1728     043B  1683               	bsf	3,5	;RP0=1, select bank1
  1729     043C  1303               	bcf	3,6	;RP1=0, select bank1
  1730     043D  00D1               	movwf	blink@leds_info^(0+128)
  1731     043E  0871               	movf	?_gather_LED_info+1,w
  1732     043F  00D2               	movwf	(blink@leds_info+1)^(0+128)
  1733     0440                     l1630:
  1734                           
  1735                           ;task1/blink.c: 61:     for (int i = 0; i < 5; i++) {
  1736     0440  01D3               	clrf	blink@i^(0+128)
  1737     0441  01D4               	clrf	(blink@i+1)^(0+128)
  1738     0442                     l1636:
  1739                           
  1740                           ;task1/blink.c: 62:         led_on(leds_info[i]);
  1741     0442  1683               	bsf	3,5	;RP0=1, select bank1
  1742     0443  1303               	bcf	3,6	;RP1=0, select bank1
  1743     0444  0854               	movf	(blink@i+1)^(0+128),w
  1744     0445  00CD               	movwf	(??_blink^(0+128)+1)
  1745     0446  0853               	movf	blink@i^(0+128),w
  1746     0447  00CC               	movwf	??_blink^(0+128)
  1747     0448  1003               	clrc
  1748     0449  0DCC               	rlf	??_blink^(0+128),f
  1749     044A  0DCD               	rlf	(??_blink^(0+128)+1),f
  1750     044B  084C               	movf	??_blink^(0+128),w
  1751     044C  0751               	addwf	blink@leds_info^(0+128),w
  1752     044D  00CE               	movwf	(??_blink+2)^(0+128)
  1753     044E  084D               	movf	(??_blink+1)^(0+128),w
  1754     044F  1803               	skipnc
  1755     0450  0A4D               	incf	(??_blink+1)^(0+128),w
  1756     0451  0752               	addwf	(blink@leds_info+1)^(0+128),w
  1757     0452  00CF               	movwf	(??_blink+3)^(0+128)
  1758     0453  084E               	movf	(??_blink+2)^(0+128),w
  1759     0454  0084               	movwf	4
  1760     0455  1783               	bsf	3,7
  1761     0456  1C4F               	btfss	(??_blink+3)^(0+128),0
  1762     0457  1383               	bcf	3,7
  1763     0458  0800               	movf	0,w
  1764     0459  00A0               	movwf	led_on@led^(0+128)
  1765     045A  0A84               	incf	4,f
  1766     045B  0800               	movf	0,w
  1767     045C  0384               	decf	4,f
  1768     045D  00A1               	movwf	(led_on@led+1)^(0+128)
  1769     045E  118A  2508  118A   	fcall	_led_on
  1770     0461                     l1638:
  1771                           
  1772                           ;task1/blink.c: 63:         _delay((unsigned long)((100)*((4000000UL)/4000.0)));
  1773     0461  3082               	movlw	130
  1774     0462  1683               	bsf	3,5	;RP0=1, select bank1
  1775     0463  1303               	bcf	3,6	;RP1=0, select bank1
  1776     0464  00CD               	movwf	(??_blink^(0+128)+1)
  1777     0465  30DD               	movlw	221
  1778     0466  00CC               	movwf	??_blink^(0+128)
  1779     0467                     u1277:
  1780     0467  0BCC               	decfsz	??_blink^(0+128),f
  1781     0468  2C67               	goto	u1277
  1782     0469  0BCD               	decfsz	(??_blink^(0+128)+1),f
  1783     046A  2C67               	goto	u1277
  1784     046B  0000               	nop
  1785     046C                     l1640:
  1786                           
  1787                           ;task1/blink.c: 64:         led_off(leds_info[i]);
  1788     046C  1683               	bsf	3,5	;RP0=1, select bank1
  1789     046D  1303               	bcf	3,6	;RP1=0, select bank1
  1790     046E  0854               	movf	(blink@i+1)^(0+128),w
  1791     046F  00CD               	movwf	(??_blink^(0+128)+1)
  1792     0470  0853               	movf	blink@i^(0+128),w
  1793     0471  00CC               	movwf	??_blink^(0+128)
  1794     0472  1003               	clrc
  1795     0473  0DCC               	rlf	??_blink^(0+128),f
  1796     0474  0DCD               	rlf	(??_blink^(0+128)+1),f
  1797     0475  084C               	movf	??_blink^(0+128),w
  1798     0476  0751               	addwf	blink@leds_info^(0+128),w
  1799     0477  00CE               	movwf	(??_blink+2)^(0+128)
  1800     0478  084D               	movf	(??_blink+1)^(0+128),w
  1801     0479  1803               	skipnc
  1802     047A  0A4D               	incf	(??_blink+1)^(0+128),w
  1803     047B  0752               	addwf	(blink@leds_info+1)^(0+128),w
  1804     047C  00CF               	movwf	(??_blink+3)^(0+128)
  1805     047D  084E               	movf	(??_blink+2)^(0+128),w
  1806     047E  0084               	movwf	4
  1807     047F  1783               	bsf	3,7
  1808     0480  1C4F               	btfss	(??_blink+3)^(0+128),0
  1809     0481  1383               	bcf	3,7
  1810     0482  0800               	movf	0,w
  1811     0483  00A0               	movwf	led_off@led^(0+128)
  1812     0484  0A84               	incf	4,f
  1813     0485  0800               	movf	0,w
  1814     0486  0384               	decf	4,f
  1815     0487  00A1               	movwf	(led_off@led+1)^(0+128)
  1816     0488  118A  263D  118A   	fcall	_led_off
  1817                           
  1818                           ;task1/blink.c: 65:     }
  1819     048B  3001               	movlw	1
  1820     048C  1683               	bsf	3,5	;RP0=1, select bank1
  1821     048D  1303               	bcf	3,6	;RP1=0, select bank1
  1822     048E  07D3               	addwf	blink@i^(0+128),f
  1823     048F  1803               	skipnc
  1824     0490  0AD4               	incf	(blink@i+1)^(0+128),f
  1825     0491  3000               	movlw	0
  1826     0492  07D4               	addwf	(blink@i+1)^(0+128),f
  1827     0493                     l1642:
  1828     0493  0854               	movf	(blink@i+1)^(0+128),w
  1829     0494  3A80               	xorlw	128
  1830     0495  00FF               	movwf	btemp+1
  1831     0496  3080               	movlw	128
  1832     0497  027F               	subwf	btemp+1,w
  1833     0498  1D03               	skipz
  1834     0499  2C9C               	goto	u1245
  1835     049A  3005               	movlw	5
  1836     049B  0253               	subwf	blink@i^(0+128),w
  1837     049C                     u1245:
  1838     049C  1C03               	skipc
  1839     049D  2C9F               	goto	u1241
  1840     049E  2CA0               	goto	u1240
  1841     049F                     u1241:
  1842     049F  2C42               	goto	l1636
  1843     04A0                     u1240:
  1844     04A0                     l79:
  1845     04A0  0008               	return
  1846     04A1                     __end_of_blink:
  1847                           
  1848                           	psect	text11
  1849     078E                     __ptext11:	
  1850 ;; *************** function _setup_GPIO *****************
  1851 ;; Defined at:
  1852 ;;		line 41 in file "task1/blink.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;		None
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;		None
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  1    wreg      void 
  1859 ;; Registers used:
  1860 ;;		status,2
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1866 ;;      Params:         0       0       0       0
  1867 ;;      Locals:         0       0       0       0
  1868 ;;      Temps:          0       0       0       0
  1869 ;;      Totals:         0       0       0       0
  1870 ;;Total ram usage:        0 bytes
  1871 ;; Hardware stack levels used: 1
  1872 ;; Hardware stack levels required when called: 4
  1873 ;; This function calls:
  1874 ;;		Nothing
  1875 ;; This function is called by:
  1876 ;;		_blink
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880     078E                     _setup_GPIO:	
  1881                           ;psect for function _setup_GPIO
  1882                           
  1883     078E                     l1538:	
  1884                           ;incstack = 0
  1885                           ; Regs used in _setup_GPIO: [status,2]
  1886                           
  1887                           
  1888                           ;task1/blink.c: 42:     OSCCONbits.SCS = 0;
  1889     078E  1683               	bsf	3,5	;RP0=1, select bank1
  1890     078F  1303               	bcf	3,6	;RP1=0, select bank1
  1891     0790  100F               	bcf	15,0	;volatile
  1892     0791                     l1540:
  1893                           
  1894                           ;task1/blink.c: 43:     ANSEL = 0;
  1895     0791  1283               	bcf	3,5	;RP0=0, select bank2
  1896     0792  1703               	bsf	3,6	;RP1=1, select bank2
  1897     0793  019E               	clrf	30	;volatile
  1898     0794                     l68:
  1899     0794  0008               	return
  1900     0795                     __end_of_setup_GPIO:
  1901                           
  1902                           	psect	text12
  1903     0508                     __ptext12:	
  1904 ;; *************** function _led_on *****************
  1905 ;; Defined at:
  1906 ;;		line 46 in file "task1/blink.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  led             2    0[BANK1 ] PTR struct .
  1909 ;;		 -> __heap_hi(0), NULL(0), 
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;  shift           2    7[BANK1 ] int 
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  1    wreg      void 
  1914 ;; Registers used:
  1915 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1921 ;;      Params:         0       0       2       0
  1922 ;;      Locals:         0       0       2       0
  1923 ;;      Temps:          0       0       5       0
  1924 ;;      Totals:         0       0       9       0
  1925 ;;Total ram usage:        9 bytes
  1926 ;; Hardware stack levels used: 1
  1927 ;; Hardware stack levels required when called: 4
  1928 ;; This function calls:
  1929 ;;		Nothing
  1930 ;; This function is called by:
  1931 ;;		_blink
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935     0508                     _led_on:	
  1936                           ;psect for function _led_on
  1937                           
  1938     0508                     l1542:	
  1939                           ;incstack = 0
  1940                           ; Regs used in _led_on: [wreg-fsr0h+status,2+status,0+btemp+1]
  1941                           
  1942                           
  1943                           ;task1/blink.c: 47:     int shift = led->index;
  1944     0508  1683               	bsf	3,5	;RP0=1, select bank1
  1945     0509  1303               	bcf	3,6	;RP1=0, select bank1
  1946     050A  0820               	movf	led_on@led^(0+128),w
  1947     050B  3E04               	addlw	4
  1948     050C  00A2               	movwf	??_led_on^(0+128)
  1949     050D  0821               	movf	(led_on@led+1)^(0+128),w
  1950     050E  1803               	skipnc
  1951     050F  3E01               	addlw	1
  1952     0510  3E00               	addlw	0
  1953     0511  00A3               	movwf	(??_led_on+1)^(0+128)
  1954     0512  0822               	movf	??_led_on^(0+128),w
  1955     0513  0084               	movwf	4
  1956     0514  1783               	bsf	3,7
  1957     0515  1C23               	btfss	(??_led_on+1)^(0+128),0
  1958     0516  1383               	bcf	3,7
  1959     0517  0800               	movf	0,w
  1960     0518  00A7               	movwf	led_on@shift^(0+128)
  1961     0519  0A84               	incf	4,f
  1962     051A  0800               	movf	0,w
  1963     051B  00A8               	movwf	(led_on@shift+1)^(0+128)
  1964     051C                     l1544:
  1965                           
  1966                           ;task1/blink.c: 48:     *led->TRIS_port &= ~(1 << shift);
  1967     051C  3001               	movlw	1
  1968     051D  00A2               	movwf	??_led_on^(0+128)
  1969     051E  0A27               	incf	led_on@shift^(0+128),w
  1970     051F  2D22               	goto	u1134
  1971     0520                     u1135:
  1972     0520  1003               	clrc
  1973     0521  0DA2               	rlf	??_led_on^(0+128),f
  1974     0522                     u1134:
  1975     0522  3EFF               	addlw	-1
  1976     0523  1D03               	skipz
  1977     0524  2D20               	goto	u1135
  1978     0525  0822               	movf	??_led_on^(0+128),w
  1979     0526  3AFF               	xorlw	255
  1980     0527  00FF               	movwf	btemp+1
  1981     0528  0820               	movf	led_on@led^(0+128),w
  1982     0529  3E02               	addlw	2
  1983     052A  00A3               	movwf	(??_led_on+1)^(0+128)
  1984     052B  0821               	movf	(led_on@led+1)^(0+128),w
  1985     052C  1803               	skipnc
  1986     052D  3E01               	addlw	1
  1987     052E  3E00               	addlw	0
  1988     052F  00A4               	movwf	(??_led_on+2)^(0+128)
  1989     0530  0823               	movf	(??_led_on+1)^(0+128),w
  1990     0531  0084               	movwf	4
  1991     0532  1783               	bsf	3,7
  1992     0533  1C24               	btfss	(??_led_on+2)^(0+128),0
  1993     0534  1383               	bcf	3,7
  1994     0535  0800               	movf	0,w
  1995     0536  00A5               	movwf	(??_led_on+3)^(0+128)
  1996     0537  0A84               	incf	4,f
  1997     0538  0800               	movf	0,w
  1998     0539  00A6               	movwf	((??_led_on+3)^(0+128)+1)
  1999     053A  0825               	movf	(??_led_on+3)^(0+128),w
  2000     053B  0084               	movwf	4
  2001     053C  1783               	bsf	3,7
  2002     053D  1C26               	btfss	(??_led_on+4)^(0+128),0
  2003     053E  1383               	bcf	3,7
  2004     053F  087F               	movf	btemp+1,w
  2005     0540  0580               	andwf	0,f
  2006     0541                     l1546:
  2007                           
  2008                           ;task1/blink.c: 49:     *led->GPIO_port |= 1 << shift;
  2009     0541  3001               	movlw	1
  2010     0542  00A2               	movwf	??_led_on^(0+128)
  2011     0543  0A27               	incf	led_on@shift^(0+128),w
  2012     0544  2D47               	goto	u1144
  2013     0545                     u1145:
  2014     0545  1003               	clrc
  2015     0546  0DA2               	rlf	??_led_on^(0+128),f
  2016     0547                     u1144:
  2017     0547  3EFF               	addlw	-1
  2018     0548  1D03               	skipz
  2019     0549  2D45               	goto	u1145
  2020     054A  0822               	movf	??_led_on^(0+128),w
  2021     054B  00FF               	movwf	btemp+1
  2022     054C  0820               	movf	led_on@led^(0+128),w
  2023     054D  0084               	movwf	4
  2024     054E  1783               	bsf	3,7
  2025     054F  1C21               	btfss	(led_on@led+1)^(0+128),0
  2026     0550  1383               	bcf	3,7
  2027     0551  0800               	movf	0,w
  2028     0552  00A3               	movwf	(??_led_on+1)^(0+128)
  2029     0553  0A84               	incf	4,f
  2030     0554  0800               	movf	0,w
  2031     0555  00A4               	movwf	((??_led_on+1)^(0+128)+1)
  2032     0556  0823               	movf	(??_led_on+1)^(0+128),w
  2033     0557  0084               	movwf	4
  2034     0558  1783               	bsf	3,7
  2035     0559  1C24               	btfss	(??_led_on+2)^(0+128),0
  2036     055A  1383               	bcf	3,7
  2037     055B  087F               	movf	btemp+1,w
  2038     055C  0480               	iorwf	0,f
  2039     055D                     l71:
  2040     055D  0008               	return
  2041     055E                     __end_of_led_on:
  2042                           
  2043                           	psect	text13
  2044     063D                     __ptext13:	
  2045 ;; *************** function _led_off *****************
  2046 ;; Defined at:
  2047 ;;		line 52 in file "task1/blink.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;  led             2    0[BANK1 ] PTR struct .
  2050 ;;		 -> __heap_hi(0), NULL(0), 
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;  shift           2    5[BANK1 ] int 
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  1    wreg      void 
  2055 ;; Registers used:
  2056 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2062 ;;      Params:         0       0       2       0
  2063 ;;      Locals:         0       0       2       0
  2064 ;;      Temps:          0       0       3       0
  2065 ;;      Totals:         0       0       7       0
  2066 ;;Total ram usage:        7 bytes
  2067 ;; Hardware stack levels used: 1
  2068 ;; Hardware stack levels required when called: 4
  2069 ;; This function calls:
  2070 ;;		Nothing
  2071 ;; This function is called by:
  2072 ;;		_blink
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076     063D                     _led_off:	
  2077                           ;psect for function _led_off
  2078                           
  2079     063D                     l1548:	
  2080                           ;incstack = 0
  2081                           ; Regs used in _led_off: [wreg-fsr0h+status,2+status,0+btemp+1]
  2082                           
  2083                           
  2084                           ;task1/blink.c: 53:     int shift = led->index;
  2085     063D  1683               	bsf	3,5	;RP0=1, select bank1
  2086     063E  1303               	bcf	3,6	;RP1=0, select bank1
  2087     063F  0820               	movf	led_off@led^(0+128),w
  2088     0640  3E04               	addlw	4
  2089     0641  00A2               	movwf	??_led_off^(0+128)
  2090     0642  0821               	movf	(led_off@led+1)^(0+128),w
  2091     0643  1803               	skipnc
  2092     0644  3E01               	addlw	1
  2093     0645  3E00               	addlw	0
  2094     0646  00A3               	movwf	(??_led_off+1)^(0+128)
  2095     0647  0822               	movf	??_led_off^(0+128),w
  2096     0648  0084               	movwf	4
  2097     0649  1783               	bsf	3,7
  2098     064A  1C23               	btfss	(??_led_off+1)^(0+128),0
  2099     064B  1383               	bcf	3,7
  2100     064C  0800               	movf	0,w
  2101     064D  00A5               	movwf	led_off@shift^(0+128)
  2102     064E  0A84               	incf	4,f
  2103     064F  0800               	movf	0,w
  2104     0650  00A6               	movwf	(led_off@shift+1)^(0+128)
  2105     0651                     l1550:
  2106                           
  2107                           ;task1/blink.c: 54:    *led->GPIO_port &= ~(1 << shift);
  2108     0651  3001               	movlw	1
  2109     0652  00A2               	movwf	??_led_off^(0+128)
  2110     0653  0A25               	incf	led_off@shift^(0+128),w
  2111     0654  2E57               	goto	u1154
  2112     0655                     u1155:
  2113     0655  1003               	clrc
  2114     0656  0DA2               	rlf	??_led_off^(0+128),f
  2115     0657                     u1154:
  2116     0657  3EFF               	addlw	-1
  2117     0658  1D03               	skipz
  2118     0659  2E55               	goto	u1155
  2119     065A  0822               	movf	??_led_off^(0+128),w
  2120     065B  3AFF               	xorlw	255
  2121     065C  00FF               	movwf	btemp+1
  2122     065D  0820               	movf	led_off@led^(0+128),w
  2123     065E  0084               	movwf	4
  2124     065F  1783               	bsf	3,7
  2125     0660  1C21               	btfss	(led_off@led+1)^(0+128),0
  2126     0661  1383               	bcf	3,7
  2127     0662  0800               	movf	0,w
  2128     0663  00A3               	movwf	(??_led_off+1)^(0+128)
  2129     0664  0A84               	incf	4,f
  2130     0665  0800               	movf	0,w
  2131     0666  00A4               	movwf	((??_led_off+1)^(0+128)+1)
  2132     0667  0823               	movf	(??_led_off+1)^(0+128),w
  2133     0668  0084               	movwf	4
  2134     0669  1783               	bsf	3,7
  2135     066A  1C24               	btfss	(??_led_off+2)^(0+128),0
  2136     066B  1383               	bcf	3,7
  2137     066C  087F               	movf	btemp+1,w
  2138     066D  0580               	andwf	0,f
  2139     066E                     l74:
  2140     066E  0008               	return
  2141     066F                     __end_of_led_off:
  2142                           
  2143                           	psect	text14
  2144     0027                     __ptext14:	
  2145 ;; *************** function _gather_LED_info *****************
  2146 ;; Defined at:
  2147 ;;		line 5 in file "task1/blink.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;		None
  2150 ;; Auto vars:     Size  Location     Type
  2151 ;;  leds_info       2   42[BANK1 ] PTR PTR struct .
  2152 ;;		 -> __heap_hi(0), NULL(0), 
  2153 ;;  LED5            2   40[BANK1 ] PTR struct .
  2154 ;;		 -> __heap_hi(0), NULL(0), 
  2155 ;;  LED4            2   38[BANK1 ] PTR struct .
  2156 ;;		 -> __heap_hi(0), NULL(0), 
  2157 ;;  LED3            2   36[BANK1 ] PTR struct .
  2158 ;;		 -> __heap_hi(0), NULL(0), 
  2159 ;;  LED2            2   34[BANK1 ] PTR struct .
  2160 ;;		 -> __heap_hi(0), NULL(0), 
  2161 ;;  LED1            2   32[BANK1 ] PTR struct .
  2162 ;;		 -> __heap_hi(0), NULL(0), 
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  2   64[None  ] PTR PTR struct .
  2165 ;; Registers used:
  2166 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2172 ;;      Params:         0       0       0       0
  2173 ;;      Locals:         0       0      12       0
  2174 ;;      Temps:          0       0       4       0
  2175 ;;      Totals:         0       0      16       0
  2176 ;;Total ram usage:       16 bytes
  2177 ;; Hardware stack levels used: 1
  2178 ;; Hardware stack levels required when called: 6
  2179 ;; This function calls:
  2180 ;;		_malloc
  2181 ;; This function is called by:
  2182 ;;		_blink
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186     0027                     _gather_LED_info:	
  2187                           ;psect for function _gather_LED_info
  2188                           
  2189     0027                     l1496:	
  2190                           ;incstack = 0
  2191                           ; Regs used in _gather_LED_info: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2192                           
  2193                           
  2194                           ;task1/blink.c: 6:     LED_info* LED1 = (LED_info*)malloc(sizeof(LED_info));
  2195     0027  3006               	movlw	6
  2196     0028  1683               	bsf	3,5	;RP0=1, select bank1
  2197     0029  1303               	bcf	3,6	;RP1=0, select bank1
  2198     002A  00AE               	movwf	malloc@n^(0+128)
  2199     002B  3000               	movlw	0
  2200     002C  00AF               	movwf	(malloc@n^(0+128)+1)
  2201     002D  118A  237E  118A   	fcall	_malloc
  2202     0030  1683               	bsf	3,5	;RP0=1, select bank1
  2203     0031  1303               	bcf	3,6	;RP1=0, select bank1
  2204     0032  082E               	movf	?_malloc^(0+128),w
  2205     0033  00C0               	movwf	gather_LED_info@LED1^(0+128)
  2206     0034  082F               	movf	(?_malloc+1)^(0+128),w
  2207     0035  00C1               	movwf	(gather_LED_info@LED1+1)^(0+128)
  2208     0036                     l1498:
  2209                           
  2210                           ;task1/blink.c: 7:     LED1->GPIO_port = &PORTA;
  2211     0036  3005               	movlw	5
  2212     0037  00BC               	movwf	??_gather_LED_info^(0+128)
  2213     0038  3000               	movlw	0
  2214     0039  00BD               	movwf	(??_gather_LED_info^(0+128)+1)
  2215     003A  0840               	movf	gather_LED_info@LED1^(0+128),w
  2216     003B  0084               	movwf	4
  2217     003C  1783               	bsf	3,7
  2218     003D  1C41               	btfss	(gather_LED_info@LED1+1)^(0+128),0
  2219     003E  1383               	bcf	3,7
  2220     003F  083C               	movf	??_gather_LED_info^(0+128),w
  2221     0040  0080               	movwf	0
  2222     0041  083D               	movf	(??_gather_LED_info^(0+128)+1),w
  2223     0042  0A84               	incf	4,f
  2224     0043  0080               	movwf	0
  2225     0044  0384               	decf	4,f
  2226     0045                     l1500:
  2227                           
  2228                           ;task1/blink.c: 8:     LED1->TRIS_port = &TRISA;
  2229     0045  3085               	movlw	133
  2230     0046  00BC               	movwf	??_gather_LED_info^(0+128)
  2231     0047  3000               	movlw	0
  2232     0048  00BD               	movwf	(??_gather_LED_info^(0+128)+1)
  2233     0049  0840               	movf	gather_LED_info@LED1^(0+128),w
  2234     004A  3E02               	addlw	2
  2235     004B  00BE               	movwf	(??_gather_LED_info+2)^(0+128)
  2236     004C  0841               	movf	(gather_LED_info@LED1+1)^(0+128),w
  2237     004D  1803               	skipnc
  2238     004E  3E01               	addlw	1
  2239     004F  3E00               	addlw	0
  2240     0050  00BF               	movwf	(??_gather_LED_info+3)^(0+128)
  2241     0051  083E               	movf	(??_gather_LED_info+2)^(0+128),w
  2242     0052  0084               	movwf	4
  2243     0053  1783               	bsf	3,7
  2244     0054  1C3F               	btfss	(??_gather_LED_info+3)^(0+128),0
  2245     0055  1383               	bcf	3,7
  2246     0056  083C               	movf	??_gather_LED_info^(0+128),w
  2247     0057  0080               	movwf	0
  2248     0058  083D               	movf	(??_gather_LED_info^(0+128)+1),w
  2249     0059  0A84               	incf	4,f
  2250     005A  0080               	movwf	0
  2251     005B  0384               	decf	4,f
  2252     005C                     l1502:
  2253                           
  2254                           ;task1/blink.c: 9:     LED1->index = 4;
  2255     005C  0840               	movf	gather_LED_info@LED1^(0+128),w
  2256     005D  3E04               	addlw	4
  2257     005E  00BC               	movwf	??_gather_LED_info^(0+128)
  2258     005F  0841               	movf	(gather_LED_info@LED1+1)^(0+128),w
  2259     0060  1803               	skipnc
  2260     0061  3E01               	addlw	1
  2261     0062  3E00               	addlw	0
  2262     0063  00BD               	movwf	(??_gather_LED_info+1)^(0+128)
  2263     0064  083C               	movf	??_gather_LED_info^(0+128),w
  2264     0065  0084               	movwf	4
  2265     0066  1783               	bsf	3,7
  2266     0067  1C3D               	btfss	(??_gather_LED_info+1)^(0+128),0
  2267     0068  1383               	bcf	3,7
  2268     0069  3004               	movlw	4
  2269     006A  0080               	movwf	0
  2270     006B  0A84               	incf	4,f
  2271     006C  3000               	movlw	0
  2272     006D  0080               	movwf	0
  2273     006E                     l1504:
  2274                           
  2275                           ;task1/blink.c: 11:     LED_info* LED2 = (LED_info*) malloc(sizeof (LED_info));
  2276     006E  3006               	movlw	6
  2277     006F  00AE               	movwf	malloc@n^(0+128)
  2278     0070  3000               	movlw	0
  2279     0071  00AF               	movwf	(malloc@n^(0+128)+1)
  2280     0072  118A  237E  118A   	fcall	_malloc
  2281     0075  1683               	bsf	3,5	;RP0=1, select bank1
  2282     0076  1303               	bcf	3,6	;RP1=0, select bank1
  2283     0077  082E               	movf	?_malloc^(0+128),w
  2284     0078  00C2               	movwf	gather_LED_info@LED2^(0+128)
  2285     0079  082F               	movf	(?_malloc+1)^(0+128),w
  2286     007A  00C3               	movwf	(gather_LED_info@LED2+1)^(0+128)
  2287                           
  2288                           ;task1/blink.c: 12:     LED2->GPIO_port = &PORTC;
  2289     007B  3007               	movlw	7
  2290     007C  00BC               	movwf	??_gather_LED_info^(0+128)
  2291     007D  3000               	movlw	0
  2292     007E  00BD               	movwf	(??_gather_LED_info^(0+128)+1)
  2293     007F  0842               	movf	gather_LED_info@LED2^(0+128),w
  2294     0080  0084               	movwf	4
  2295     0081  1783               	bsf	3,7
  2296     0082  1C43               	btfss	(gather_LED_info@LED2+1)^(0+128),0
  2297     0083  1383               	bcf	3,7
  2298     0084  083C               	movf	??_gather_LED_info^(0+128),w
  2299     0085  0080               	movwf	0
  2300     0086  083D               	movf	(??_gather_LED_info^(0+128)+1),w
  2301     0087  0A84               	incf	4,f
  2302     0088  0080               	movwf	0
  2303     0089  0384               	decf	4,f
  2304                           
  2305                           ;task1/blink.c: 13:     LED2->TRIS_port = &TRISC;
  2306     008A  3087               	movlw	135
  2307     008B  00BC               	movwf	??_gather_LED_info^(0+128)
  2308     008C  3000               	movlw	0
  2309     008D  00BD               	movwf	(??_gather_LED_info^(0+128)+1)
  2310     008E  0842               	movf	gather_LED_info@LED2^(0+128),w
  2311     008F  3E02               	addlw	2
  2312     0090  00BE               	movwf	(??_gather_LED_info+2)^(0+128)
  2313     0091  0843               	movf	(gather_LED_info@LED2+1)^(0+128),w
  2314     0092  1803               	skipnc
  2315     0093  3E01               	addlw	1
  2316     0094  3E00               	addlw	0
  2317     0095  00BF               	movwf	(??_gather_LED_info+3)^(0+128)
  2318     0096  083E               	movf	(??_gather_LED_info+2)^(0+128),w
  2319     0097  0084               	movwf	4
  2320     0098  1783               	bsf	3,7
  2321     0099  1C3F               	btfss	(??_gather_LED_info+3)^(0+128),0
  2322     009A  1383               	bcf	3,7
  2323     009B  083C               	movf	??_gather_LED_info^(0+128),w
  2324     009C  0080               	movwf	0
  2325     009D  083D               	movf	(??_gather_LED_info^(0+128)+1),w
  2326     009E  0A84               	incf	4,f
  2327     009F  0080               	movwf	0
  2328     00A0  0384               	decf	4,f
  2329                           
  2330                           ;task1/blink.c: 14:     LED2->index = 5;
  2331     00A1  0842               	movf	gather_LED_info@LED2^(0+128),w
  2332     00A2  3E04               	addlw	4
  2333     00A3  00BC               	movwf	??_gather_LED_info^(0+128)
  2334     00A4  0843               	movf	(gather_LED_info@LED2+1)^(0+128),w
  2335     00A5  1803               	skipnc
  2336     00A6  3E01               	addlw	1
  2337     00A7  3E00               	addlw	0
  2338     00A8  00BD               	movwf	(??_gather_LED_info+1)^(0+128)
  2339     00A9  083C               	movf	??_gather_LED_info^(0+128),w
  2340     00AA  0084               	movwf	4
  2341     00AB  1783               	bsf	3,7
  2342     00AC  1C3D               	btfss	(??_gather_LED_info+1)^(0+128),0
  2343     00AD  1383               	bcf	3,7
  2344     00AE  3005               	movlw	5
  2345     00AF  0080               	movwf	0
  2346     00B0  0A84               	incf	4,f
  2347     00B1  3000               	movlw	0
  2348     00B2  0080               	movwf	0
  2349     00B3                     l1506:
  2350                           
  2351                           ;task1/blink.c: 16:     LED_info* LED3 = (LED_info*) malloc(sizeof (LED_info));
  2352     00B3  3006               	movlw	6
  2353     00B4  00AE               	movwf	malloc@n^(0+128)
  2354     00B5  3000               	movlw	0
  2355     00B6  00AF               	movwf	(malloc@n^(0+128)+1)
  2356     00B7  118A  237E  118A   	fcall	_malloc
  2357     00BA  1683               	bsf	3,5	;RP0=1, select bank1
  2358     00BB  1303               	bcf	3,6	;RP1=0, select bank1
  2359     00BC  082E               	movf	?_malloc^(0+128),w
  2360     00BD  00C4               	movwf	gather_LED_info@LED3^(0+128)
  2361     00BE  082F               	movf	(?_malloc+1)^(0+128),w
  2362     00BF  00C5               	movwf	(gather_LED_info@LED3+1)^(0+128)
  2363     00C0                     l1508:
  2364                           
  2365                           ;task1/blink.c: 17:     LED3->GPIO_port = &PORTC;
  2366     00C0  3007               	movlw	7
  2367     00C1  00BC               	movwf	??_gather_LED_info^(0+128)
  2368     00C2  3000               	movlw	0
  2369     00C3  00BD               	movwf	(??_gather_LED_info^(0+128)+1)
  2370     00C4  0844               	movf	gather_LED_info@LED3^(0+128),w
  2371     00C5  0084               	movwf	4
  2372     00C6  1783               	bsf	3,7
  2373     00C7  1C45               	btfss	(gather_LED_info@LED3+1)^(0+128),0
  2374     00C8  1383               	bcf	3,7
  2375     00C9  083C               	movf	??_gather_LED_info^(0+128),w
  2376     00CA  0080               	movwf	0
  2377     00CB  083D               	movf	(??_gather_LED_info^(0+128)+1),w
  2378     00CC  0A84               	incf	4,f
  2379     00CD  0080               	movwf	0
  2380     00CE  0384               	decf	4,f
  2381     00CF                     l1510:
  2382                           
  2383                           ;task1/blink.c: 18:     LED3->TRIS_port = &TRISC;
  2384     00CF  3087               	movlw	135
  2385     00D0  00BC               	movwf	??_gather_LED_info^(0+128)
  2386     00D1  3000               	movlw	0
  2387     00D2  00BD               	movwf	(??_gather_LED_info^(0+128)+1)
  2388     00D3  0844               	movf	gather_LED_info@LED3^(0+128),w
  2389     00D4  3E02               	addlw	2
  2390     00D5  00BE               	movwf	(??_gather_LED_info+2)^(0+128)
  2391     00D6  0845               	movf	(gather_LED_info@LED3+1)^(0+128),w
  2392     00D7  1803               	skipnc
  2393     00D8  3E01               	addlw	1
  2394     00D9  3E00               	addlw	0
  2395     00DA  00BF               	movwf	(??_gather_LED_info+3)^(0+128)
  2396     00DB  083E               	movf	(??_gather_LED_info+2)^(0+128),w
  2397     00DC  0084               	movwf	4
  2398     00DD  1783               	bsf	3,7
  2399     00DE  1C3F               	btfss	(??_gather_LED_info+3)^(0+128),0
  2400     00DF  1383               	bcf	3,7
  2401     00E0  083C               	movf	??_gather_LED_info^(0+128),w
  2402     00E1  0080               	movwf	0
  2403     00E2  083D               	movf	(??_gather_LED_info^(0+128)+1),w
  2404     00E3  0A84               	incf	4,f
  2405     00E4  0080               	movwf	0
  2406     00E5  0384               	decf	4,f
  2407     00E6                     l1512:
  2408                           
  2409                           ;task1/blink.c: 19:     LED3->index = 4;
  2410     00E6  0844               	movf	gather_LED_info@LED3^(0+128),w
  2411     00E7  3E04               	addlw	4
  2412     00E8  00BC               	movwf	??_gather_LED_info^(0+128)
  2413     00E9  0845               	movf	(gather_LED_info@LED3+1)^(0+128),w
  2414     00EA  1803               	skipnc
  2415     00EB  3E01               	addlw	1
  2416     00EC  3E00               	addlw	0
  2417     00ED  00BD               	movwf	(??_gather_LED_info+1)^(0+128)
  2418     00EE  083C               	movf	??_gather_LED_info^(0+128),w
  2419     00EF  0084               	movwf	4
  2420     00F0  1783               	bsf	3,7
  2421     00F1  1C3D               	btfss	(??_gather_LED_info+1)^(0+128),0
  2422     00F2  1383               	bcf	3,7
  2423     00F3  3004               	movlw	4
  2424     00F4  0080               	movwf	0
  2425     00F5  0A84               	incf	4,f
  2426     00F6  3000               	movlw	0
  2427     00F7  0080               	movwf	0
  2428                           
  2429                           ;task1/blink.c: 21:     LED_info* LED4 = (LED_info*) malloc(sizeof (LED_info));
  2430     00F8  3006               	movlw	6
  2431     00F9  00AE               	movwf	malloc@n^(0+128)
  2432     00FA  3000               	movlw	0
  2433     00FB  00AF               	movwf	(malloc@n^(0+128)+1)
  2434     00FC  118A  237E  118A   	fcall	_malloc
  2435     00FF  1683               	bsf	3,5	;RP0=1, select bank1
  2436     0100  1303               	bcf	3,6	;RP1=0, select bank1
  2437     0101  082E               	movf	?_malloc^(0+128),w
  2438     0102  00C6               	movwf	gather_LED_info@LED4^(0+128)
  2439     0103  082F               	movf	(?_malloc+1)^(0+128),w
  2440     0104  00C7               	movwf	(gather_LED_info@LED4+1)^(0+128)
  2441     0105                     l1514:
  2442                           
  2443                           ;task1/blink.c: 22:     LED4->GPIO_port =&PORTB;
  2444     0105  3006               	movlw	6
  2445     0106  00BC               	movwf	??_gather_LED_info^(0+128)
  2446     0107  3000               	movlw	0
  2447     0108  00BD               	movwf	(??_gather_LED_info^(0+128)+1)
  2448     0109  0846               	movf	gather_LED_info@LED4^(0+128),w
  2449     010A  0084               	movwf	4
  2450     010B  1783               	bsf	3,7
  2451     010C  1C47               	btfss	(gather_LED_info@LED4+1)^(0+128),0
  2452     010D  1383               	bcf	3,7
  2453     010E  083C               	movf	??_gather_LED_info^(0+128),w
  2454     010F  0080               	movwf	0
  2455     0110  083D               	movf	(??_gather_LED_info^(0+128)+1),w
  2456     0111  0A84               	incf	4,f
  2457     0112  0080               	movwf	0
  2458     0113  0384               	decf	4,f
  2459     0114                     l1516:
  2460                           
  2461                           ;task1/blink.c: 23:     LED4->TRIS_port = &TRISB;
  2462     0114  3086               	movlw	134
  2463     0115  00BC               	movwf	??_gather_LED_info^(0+128)
  2464     0116  3000               	movlw	0
  2465     0117  00BD               	movwf	(??_gather_LED_info^(0+128)+1)
  2466     0118  0846               	movf	gather_LED_info@LED4^(0+128),w
  2467     0119  3E02               	addlw	2
  2468     011A  00BE               	movwf	(??_gather_LED_info+2)^(0+128)
  2469     011B  0847               	movf	(gather_LED_info@LED4+1)^(0+128),w
  2470     011C  1803               	skipnc
  2471     011D  3E01               	addlw	1
  2472     011E  3E00               	addlw	0
  2473     011F  00BF               	movwf	(??_gather_LED_info+3)^(0+128)
  2474     0120  083E               	movf	(??_gather_LED_info+2)^(0+128),w
  2475     0121  0084               	movwf	4
  2476     0122  1783               	bsf	3,7
  2477     0123  1C3F               	btfss	(??_gather_LED_info+3)^(0+128),0
  2478     0124  1383               	bcf	3,7
  2479     0125  083C               	movf	??_gather_LED_info^(0+128),w
  2480     0126  0080               	movwf	0
  2481     0127  083D               	movf	(??_gather_LED_info^(0+128)+1),w
  2482     0128  0A84               	incf	4,f
  2483     0129  0080               	movwf	0
  2484     012A  0384               	decf	4,f
  2485     012B                     l1518:
  2486                           
  2487                           ;task1/blink.c: 24:     LED4->index = 7;
  2488     012B  0846               	movf	gather_LED_info@LED4^(0+128),w
  2489     012C  3E04               	addlw	4
  2490     012D  00BC               	movwf	??_gather_LED_info^(0+128)
  2491     012E  0847               	movf	(gather_LED_info@LED4+1)^(0+128),w
  2492     012F  1803               	skipnc
  2493     0130  3E01               	addlw	1
  2494     0131  3E00               	addlw	0
  2495     0132  00BD               	movwf	(??_gather_LED_info+1)^(0+128)
  2496     0133  083C               	movf	??_gather_LED_info^(0+128),w
  2497     0134  0084               	movwf	4
  2498     0135  1783               	bsf	3,7
  2499     0136  1C3D               	btfss	(??_gather_LED_info+1)^(0+128),0
  2500     0137  1383               	bcf	3,7
  2501     0138  3007               	movlw	7
  2502     0139  0080               	movwf	0
  2503     013A  0A84               	incf	4,f
  2504     013B  3000               	movlw	0
  2505     013C  0080               	movwf	0
  2506     013D                     l1520:
  2507                           
  2508                           ;task1/blink.c: 26:     LED_info* LED5 = (LED_info*) malloc(sizeof (LED_info));
  2509     013D  3006               	movlw	6
  2510     013E  00AE               	movwf	malloc@n^(0+128)
  2511     013F  3000               	movlw	0
  2512     0140  00AF               	movwf	(malloc@n^(0+128)+1)
  2513     0141  118A  237E  118A   	fcall	_malloc
  2514     0144  1683               	bsf	3,5	;RP0=1, select bank1
  2515     0145  1303               	bcf	3,6	;RP1=0, select bank1
  2516     0146  082E               	movf	?_malloc^(0+128),w
  2517     0147  00C8               	movwf	gather_LED_info@LED5^(0+128)
  2518     0148  082F               	movf	(?_malloc+1)^(0+128),w
  2519     0149  00C9               	movwf	(gather_LED_info@LED5+1)^(0+128)
  2520                           
  2521                           ;task1/blink.c: 27:     LED5->GPIO_port = &PORTA;
  2522     014A  3005               	movlw	5
  2523     014B  00BC               	movwf	??_gather_LED_info^(0+128)
  2524     014C  3000               	movlw	0
  2525     014D  00BD               	movwf	(??_gather_LED_info^(0+128)+1)
  2526     014E  0848               	movf	gather_LED_info@LED5^(0+128),w
  2527     014F  0084               	movwf	4
  2528     0150  1783               	bsf	3,7
  2529     0151  1C49               	btfss	(gather_LED_info@LED5+1)^(0+128),0
  2530     0152  1383               	bcf	3,7
  2531     0153  083C               	movf	??_gather_LED_info^(0+128),w
  2532     0154  0080               	movwf	0
  2533     0155  083D               	movf	(??_gather_LED_info^(0+128)+1),w
  2534     0156  0A84               	incf	4,f
  2535     0157  0080               	movwf	0
  2536     0158  0384               	decf	4,f
  2537                           
  2538                           ;task1/blink.c: 28:     LED5->TRIS_port = &TRISA;
  2539     0159  3085               	movlw	133
  2540     015A  00BC               	movwf	??_gather_LED_info^(0+128)
  2541     015B  3000               	movlw	0
  2542     015C  00BD               	movwf	(??_gather_LED_info^(0+128)+1)
  2543     015D  0848               	movf	gather_LED_info@LED5^(0+128),w
  2544     015E  3E02               	addlw	2
  2545     015F  00BE               	movwf	(??_gather_LED_info+2)^(0+128)
  2546     0160  0849               	movf	(gather_LED_info@LED5+1)^(0+128),w
  2547     0161  1803               	skipnc
  2548     0162  3E01               	addlw	1
  2549     0163  3E00               	addlw	0
  2550     0164  00BF               	movwf	(??_gather_LED_info+3)^(0+128)
  2551     0165  083E               	movf	(??_gather_LED_info+2)^(0+128),w
  2552     0166  0084               	movwf	4
  2553     0167  1783               	bsf	3,7
  2554     0168  1C3F               	btfss	(??_gather_LED_info+3)^(0+128),0
  2555     0169  1383               	bcf	3,7
  2556     016A  083C               	movf	??_gather_LED_info^(0+128),w
  2557     016B  0080               	movwf	0
  2558     016C  083D               	movf	(??_gather_LED_info^(0+128)+1),w
  2559     016D  0A84               	incf	4,f
  2560     016E  0080               	movwf	0
  2561     016F  0384               	decf	4,f
  2562                           
  2563                           ;task1/blink.c: 29:     LED5->index = 5;
  2564     0170  0848               	movf	gather_LED_info@LED5^(0+128),w
  2565     0171  3E04               	addlw	4
  2566     0172  00BC               	movwf	??_gather_LED_info^(0+128)
  2567     0173  0849               	movf	(gather_LED_info@LED5+1)^(0+128),w
  2568     0174  1803               	skipnc
  2569     0175  3E01               	addlw	1
  2570     0176  3E00               	addlw	0
  2571     0177  00BD               	movwf	(??_gather_LED_info+1)^(0+128)
  2572     0178  083C               	movf	??_gather_LED_info^(0+128),w
  2573     0179  0084               	movwf	4
  2574     017A  1783               	bsf	3,7
  2575     017B  1C3D               	btfss	(??_gather_LED_info+1)^(0+128),0
  2576     017C  1383               	bcf	3,7
  2577     017D  3005               	movlw	5
  2578     017E  0080               	movwf	0
  2579     017F  0A84               	incf	4,f
  2580     0180  3000               	movlw	0
  2581     0181  0080               	movwf	0
  2582     0182                     l1522:
  2583                           
  2584                           ;task1/blink.c: 31:     LED_info** leds_info = (LED_info**)malloc(5 * sizeof(LED_info*))
      +                          ;
  2585     0182  300A               	movlw	10
  2586     0183  00AE               	movwf	malloc@n^(0+128)
  2587     0184  3000               	movlw	0
  2588     0185  00AF               	movwf	(malloc@n^(0+128)+1)
  2589     0186  118A  237E  118A   	fcall	_malloc
  2590     0189  1683               	bsf	3,5	;RP0=1, select bank1
  2591     018A  1303               	bcf	3,6	;RP1=0, select bank1
  2592     018B  082E               	movf	?_malloc^(0+128),w
  2593     018C  00CA               	movwf	gather_LED_info@leds_info^(0+128)
  2594     018D  082F               	movf	(?_malloc+1)^(0+128),w
  2595     018E  00CB               	movwf	(gather_LED_info@leds_info+1)^(0+128)
  2596     018F                     l1524:
  2597                           
  2598                           ;task1/blink.c: 32:     leds_info[0] = LED1;
  2599     018F  084A               	movf	gather_LED_info@leds_info^(0+128),w
  2600     0190  0084               	movwf	4
  2601     0191  1783               	bsf	3,7
  2602     0192  1C4B               	btfss	(gather_LED_info@leds_info+1)^(0+128),0
  2603     0193  1383               	bcf	3,7
  2604     0194  0840               	movf	gather_LED_info@LED1^(0+128),w
  2605     0195  0080               	movwf	0
  2606     0196  0A84               	incf	4,f
  2607     0197  0841               	movf	(gather_LED_info@LED1+1)^(0+128),w
  2608     0198  0080               	movwf	0
  2609     0199                     l1526:
  2610                           
  2611                           ;task1/blink.c: 33:     leds_info[1] = LED2;
  2612     0199  084A               	movf	gather_LED_info@leds_info^(0+128),w
  2613     019A  3E02               	addlw	2
  2614     019B  00BC               	movwf	??_gather_LED_info^(0+128)
  2615     019C  084B               	movf	(gather_LED_info@leds_info+1)^(0+128),w
  2616     019D  1803               	skipnc
  2617     019E  3E01               	addlw	1
  2618     019F  3E00               	addlw	0
  2619     01A0  00BD               	movwf	(??_gather_LED_info+1)^(0+128)
  2620     01A1  083C               	movf	??_gather_LED_info^(0+128),w
  2621     01A2  0084               	movwf	4
  2622     01A3  1783               	bsf	3,7
  2623     01A4  1C3D               	btfss	(??_gather_LED_info+1)^(0+128),0
  2624     01A5  1383               	bcf	3,7
  2625     01A6  0842               	movf	gather_LED_info@LED2^(0+128),w
  2626     01A7  0080               	movwf	0
  2627     01A8  0A84               	incf	4,f
  2628     01A9  0843               	movf	(gather_LED_info@LED2+1)^(0+128),w
  2629     01AA  0080               	movwf	0
  2630     01AB                     l1528:
  2631                           
  2632                           ;task1/blink.c: 34:     leds_info[2] = LED3;
  2633     01AB  084A               	movf	gather_LED_info@leds_info^(0+128),w
  2634     01AC  3E04               	addlw	4
  2635     01AD  00BC               	movwf	??_gather_LED_info^(0+128)
  2636     01AE  084B               	movf	(gather_LED_info@leds_info+1)^(0+128),w
  2637     01AF  1803               	skipnc
  2638     01B0  3E01               	addlw	1
  2639     01B1  3E00               	addlw	0
  2640     01B2  00BD               	movwf	(??_gather_LED_info+1)^(0+128)
  2641     01B3  083C               	movf	??_gather_LED_info^(0+128),w
  2642     01B4  0084               	movwf	4
  2643     01B5  1783               	bsf	3,7
  2644     01B6  1C3D               	btfss	(??_gather_LED_info+1)^(0+128),0
  2645     01B7  1383               	bcf	3,7
  2646     01B8  0844               	movf	gather_LED_info@LED3^(0+128),w
  2647     01B9  0080               	movwf	0
  2648     01BA  0A84               	incf	4,f
  2649     01BB  0845               	movf	(gather_LED_info@LED3+1)^(0+128),w
  2650     01BC  0080               	movwf	0
  2651     01BD                     l1530:
  2652                           
  2653                           ;task1/blink.c: 35:     leds_info[3] = LED4;
  2654     01BD  084A               	movf	gather_LED_info@leds_info^(0+128),w
  2655     01BE  3E06               	addlw	6
  2656     01BF  00BC               	movwf	??_gather_LED_info^(0+128)
  2657     01C0  084B               	movf	(gather_LED_info@leds_info+1)^(0+128),w
  2658     01C1  1803               	skipnc
  2659     01C2  3E01               	addlw	1
  2660     01C3  3E00               	addlw	0
  2661     01C4  00BD               	movwf	(??_gather_LED_info+1)^(0+128)
  2662     01C5  083C               	movf	??_gather_LED_info^(0+128),w
  2663     01C6  0084               	movwf	4
  2664     01C7  1783               	bsf	3,7
  2665     01C8  1C3D               	btfss	(??_gather_LED_info+1)^(0+128),0
  2666     01C9  1383               	bcf	3,7
  2667     01CA  0846               	movf	gather_LED_info@LED4^(0+128),w
  2668     01CB  0080               	movwf	0
  2669     01CC  0A84               	incf	4,f
  2670     01CD  0847               	movf	(gather_LED_info@LED4+1)^(0+128),w
  2671     01CE  0080               	movwf	0
  2672     01CF                     l1532:
  2673                           
  2674                           ;task1/blink.c: 36:     leds_info[4] = LED5;
  2675     01CF  084A               	movf	gather_LED_info@leds_info^(0+128),w
  2676     01D0  3E08               	addlw	8
  2677     01D1  00BC               	movwf	??_gather_LED_info^(0+128)
  2678     01D2  084B               	movf	(gather_LED_info@leds_info+1)^(0+128),w
  2679     01D3  1803               	skipnc
  2680     01D4  3E01               	addlw	1
  2681     01D5  3E00               	addlw	0
  2682     01D6  00BD               	movwf	(??_gather_LED_info+1)^(0+128)
  2683     01D7  083C               	movf	??_gather_LED_info^(0+128),w
  2684     01D8  0084               	movwf	4
  2685     01D9  1783               	bsf	3,7
  2686     01DA  1C3D               	btfss	(??_gather_LED_info+1)^(0+128),0
  2687     01DB  1383               	bcf	3,7
  2688     01DC  0848               	movf	gather_LED_info@LED5^(0+128),w
  2689     01DD  0080               	movwf	0
  2690     01DE  0A84               	incf	4,f
  2691     01DF  0849               	movf	(gather_LED_info@LED5+1)^(0+128),w
  2692     01E0  0080               	movwf	0
  2693     01E1                     l1534:
  2694                           
  2695                           ;task1/blink.c: 38:     return leds_info;
  2696     01E1  084A               	movf	gather_LED_info@leds_info^(0+128),w
  2697     01E2  00F0               	movwf	?_gather_LED_info
  2698     01E3  084B               	movf	(gather_LED_info@leds_info+1)^(0+128),w
  2699     01E4  00F1               	movwf	?_gather_LED_info+1
  2700     01E5                     l65:
  2701     01E5  0008               	return
  2702     01E6                     __end_of_gather_LED_info:
  2703                           
  2704                           	psect	text15
  2705     037E                     __ptext15:	
  2706 ;; *************** function _malloc *****************
  2707 ;; Defined at:
  2708 ;;		line 16 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lite_malloc.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;  n               2   14[BANK1 ] unsigned int 
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;  sz              2   20[BANK1 ] PTR unsigned int 
  2713 ;;		 -> __heap_hi(0), NULL(0), 
  2714 ;;  new             2   26[BANK1 ] PTR unsigned char 
  2715 ;;		 -> __heap_hi(0), NULL(0), 
  2716 ;;  m               2   18[BANK1 ] unsigned int 
  2717 ;;  p               2   24[BANK1 ] PTR void 
  2718 ;;		 -> __heap_hi(0), NULL(0), 
  2719 ;;  size            2   22[BANK1 ] unsigned int 
  2720 ;; Return value:  Size  Location     Type
  2721 ;;                  2   14[BANK1 ] PTR void 
  2722 ;; Registers used:
  2723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2724 ;; Tracked objects:
  2725 ;;		On entry : 0/0
  2726 ;;		On exit  : 0/0
  2727 ;;		Unchanged: 0/0
  2728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2729 ;;      Params:         0       0       2       0
  2730 ;;      Locals:         0       0      10       0
  2731 ;;      Temps:          0       0       2       0
  2732 ;;      Totals:         0       0      14       0
  2733 ;;Total ram usage:       14 bytes
  2734 ;; Hardware stack levels used: 1
  2735 ;; Hardware stack levels required when called: 5
  2736 ;; This function calls:
  2737 ;;		___expand_heap
  2738 ;;		___simple_search_fl
  2739 ;; This function is called by:
  2740 ;;		_gather_LED_info
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744     037E                     _malloc:	
  2745                           ;psect for function _malloc
  2746                           
  2747     037E                     l1324:	
  2748                           ;incstack = 0
  2749                           ; Regs used in _malloc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2750                           
  2751     037E  1683               	bsf	3,5	;RP0=1, select bank1
  2752     037F  1303               	bcf	3,6	;RP1=0, select bank1
  2753     0380  01B6               	clrf	malloc@size^(0+128)
  2754     0381  01B7               	clrf	(malloc@size+1)^(0+128)
  2755     0382                     l1326:
  2756     0382  082E               	movf	malloc@n^(0+128),w
  2757     0383  042F               	iorwf	(malloc@n+1)^(0+128),w
  2758     0384  1D03               	btfss	3,2
  2759     0385  2B87               	goto	u781
  2760     0386  2B88               	goto	u780
  2761     0387                     u781:
  2762     0387  2B8E               	goto	l743
  2763     0388                     u780:
  2764     0388                     l1328:
  2765     0388  3001               	movlw	1
  2766     0389  07AE               	addwf	malloc@n^(0+128),f
  2767     038A  1803               	skipnc
  2768     038B  0AAF               	incf	(malloc@n+1)^(0+128),f
  2769     038C  3000               	movlw	0
  2770     038D  07AF               	addwf	(malloc@n+1)^(0+128),f
  2771     038E                     l743:
  2772     038E  3000               	movlw	0
  2773     038F  022F               	subwf	(malloc@n+1)^(0+128),w
  2774     0390  3002               	movlw	2
  2775     0391  1903               	skipnz
  2776     0392  022E               	subwf	malloc@n^(0+128),w
  2777     0393  1803               	skipnc
  2778     0394  2B96               	goto	u791
  2779     0395  2B97               	goto	u790
  2780     0396                     u791:
  2781     0396  2B9C               	goto	l1332
  2782     0397                     u790:
  2783     0397                     l1330:
  2784     0397  3002               	movlw	2
  2785     0398  00AE               	movwf	malloc@n^(0+128)
  2786     0399  3000               	movlw	0
  2787     039A  00AF               	movwf	(malloc@n^(0+128)+1)
  2788     039B  2BB2               	goto	l1340
  2789     039C                     l1332:
  2790     039C  082F               	movf	(malloc@n+1)^(0+128),w
  2791     039D  00B1               	movwf	(??_malloc^(0+128)+1)
  2792     039E  082E               	movf	malloc@n^(0+128),w
  2793     039F  00B0               	movwf	??_malloc^(0+128)
  2794     03A0  09B0               	comf	??_malloc^(0+128),f
  2795     03A1  09B1               	comf	(??_malloc^(0+128)+1),f
  2796     03A2  3000               	movlw	0
  2797     03A3  0231               	subwf	(??_malloc+1)^(0+128),w
  2798     03A4  3002               	movlw	2
  2799     03A5  1903               	skipnz
  2800     03A6  0230               	subwf	??_malloc^(0+128),w
  2801     03A7  1803               	skipnc
  2802     03A8  2BAA               	goto	u801
  2803     03A9  2BAB               	goto	u800
  2804     03AA                     u801:
  2805     03AA  2BB2               	goto	l1340
  2806     03AB                     u800:
  2807     03AB                     l1334:
  2808     03AB  300C               	movlw	12
  2809     03AC  00DB               	movwf	_errno^(0+128)
  2810     03AD  3000               	movlw	0
  2811     03AE  00DC               	movwf	(_errno^(0+128)+1)
  2812     03AF                     l1336:
  2813     03AF  01AE               	clrf	?_malloc^(0+128)
  2814     03B0  01AF               	clrf	(?_malloc+1)^(0+128)
  2815     03B1  2C33               	goto	l747
  2816     03B2                     l1340:
  2817     03B2                     l1342:
  2818     03B2  082F               	movf	(malloc@n+1)^(0+128),w
  2819     03B3  00A1               	movwf	(___simple_search_fl@n+1)^(0+128)
  2820     03B4  082E               	movf	malloc@n^(0+128),w
  2821     03B5  00A0               	movwf	___simple_search_fl@n^(0+128)
  2822     03B6  118A  21E6  118A   	fcall	___simple_search_fl
  2823     03B9  1683               	bsf	3,5	;RP0=1, select bank1
  2824     03BA  1303               	bcf	3,6	;RP1=0, select bank1
  2825     03BB  00B8               	movwf	malloc@p^(0+128)
  2826     03BC  3000               	movlw	0
  2827     03BD  00B9               	movwf	(malloc@p+1)^(0+128)
  2828     03BE                     l1344:
  2829     03BE  0838               	movf	malloc@p^(0+128),w
  2830     03BF  0439               	iorwf	(malloc@p+1)^(0+128),w
  2831     03C0  1D03               	btfss	3,2
  2832     03C1  2BC3               	goto	u811
  2833     03C2  2BC4               	goto	u810
  2834     03C3                     u811:
  2835     03C3  2C2F               	goto	l1372
  2836     03C4                     u810:
  2837     03C4                     l1346:
  2838     03C4  0859               	movf	malloc@cur^(0+128),w
  2839     03C5  0257               	subwf	malloc@end^(0+128),w
  2840     03C6  00B0               	movwf	??_malloc^(0+128)
  2841     03C7  085A               	movf	(malloc@cur+1)^(0+128),w
  2842     03C8  1C03               	skipc
  2843     03C9  0A5A               	incf	(malloc@cur+1)^(0+128),w
  2844     03CA  0258               	subwf	(malloc@end+1)^(0+128),w
  2845     03CB  00B1               	movwf	(??_malloc+1)^(0+128)
  2846     03CC  082F               	movf	(malloc@n+1)^(0+128),w
  2847     03CD  0231               	subwf	(??_malloc+1)^(0+128),w
  2848     03CE  1D03               	skipz
  2849     03CF  2BD2               	goto	u825
  2850     03D0  082E               	movf	malloc@n^(0+128),w
  2851     03D1  0230               	subwf	??_malloc^(0+128),w
  2852     03D2                     u825:
  2853     03D2  1803               	skipnc
  2854     03D3  2BD5               	goto	u821
  2855     03D4  2BD6               	goto	u820
  2856     03D5                     u821:
  2857     03D5  2C05               	goto	l749
  2858     03D6                     u820:
  2859     03D6                     l1348:
  2860     03D6  082E               	movf	malloc@n^(0+128),w
  2861     03D7  3E02               	addlw	2
  2862     03D8  00B2               	movwf	malloc@m^(0+128)
  2863     03D9  082F               	movf	(malloc@n+1)^(0+128),w
  2864     03DA  1803               	skipnc
  2865     03DB  3E01               	addlw	1
  2866     03DC  3E00               	addlw	0
  2867     03DD  00B3               	movwf	(malloc@m+1)^(0+128)
  2868     03DE                     l1350:
  2869     03DE  30B2               	movlw	(low (malloc@m| 0))& (0+255)
  2870     03DF  118A  25AE  118A   	fcall	___expand_heap
  2871     03E2  0870               	movf	?___expand_heap,w
  2872     03E3  1683               	bsf	3,5	;RP0=1, select bank1
  2873     03E4  1303               	bcf	3,6	;RP1=0, select bank1
  2874     03E5  00BA               	movwf	malloc@new^(0+128)
  2875     03E6  0871               	movf	?___expand_heap+1,w
  2876     03E7  00BB               	movwf	(malloc@new+1)^(0+128)
  2877     03E8                     l1352:
  2878     03E8  083A               	movf	malloc@new^(0+128),w
  2879     03E9  043B               	iorwf	(malloc@new+1)^(0+128),w
  2880     03EA  1D03               	btfss	3,2
  2881     03EB  2BED               	goto	u831
  2882     03EC  2BEE               	goto	u830
  2883     03ED                     u831:
  2884     03ED  2BEF               	goto	l1358
  2885     03EE                     u830:
  2886     03EE  2BAF               	goto	l1336
  2887     03EF                     l1358:
  2888     03EF  0858               	movf	(malloc@end+1)^(0+128),w
  2889     03F0  063B               	xorwf	(malloc@new+1)^(0+128),w
  2890     03F1  1D03               	skipz
  2891     03F2  2BF5               	goto	u845
  2892     03F3  0857               	movf	malloc@end^(0+128),w
  2893     03F4  063A               	xorwf	malloc@new^(0+128),w
  2894     03F5                     u845:
  2895     03F5  1903               	skipnz
  2896     03F6  2BF8               	goto	u841
  2897     03F7  2BF9               	goto	u840
  2898     03F8                     u841:
  2899     03F8  2BFD               	goto	l751
  2900     03F9                     u840:
  2901     03F9                     l1360:
  2902     03F9  083A               	movf	malloc@new^(0+128),w
  2903     03FA  00D9               	movwf	malloc@cur^(0+128)
  2904     03FB  083B               	movf	(malloc@new+1)^(0+128),w
  2905     03FC  00DA               	movwf	(malloc@cur+1)^(0+128)
  2906     03FD                     l751:
  2907     03FD  0832               	movf	malloc@m^(0+128),w
  2908     03FE  073A               	addwf	malloc@new^(0+128),w
  2909     03FF  00D7               	movwf	malloc@end^(0+128)
  2910     0400  0833               	movf	(malloc@m+1)^(0+128),w
  2911     0401  1803               	skipnc
  2912     0402  0A33               	incf	(malloc@m+1)^(0+128),w
  2913     0403  073B               	addwf	(malloc@new+1)^(0+128),w
  2914     0404  00D8               	movwf	(malloc@end+1)^(0+128)
  2915     0405                     l749:
  2916     0405  0859               	movf	malloc@cur^(0+128),w
  2917     0406  00B8               	movwf	malloc@p^(0+128)
  2918     0407  085A               	movf	(malloc@cur+1)^(0+128),w
  2919     0408  00B9               	movwf	(malloc@p+1)^(0+128)
  2920     0409                     l1362:
  2921     0409  0838               	movf	malloc@p^(0+128),w
  2922     040A  00B4               	movwf	malloc@sz^(0+128)
  2923     040B  0839               	movf	(malloc@p+1)^(0+128),w
  2924     040C  00B5               	movwf	(malloc@sz+1)^(0+128)
  2925     040D                     l1364:
  2926     040D  0834               	movf	malloc@sz^(0+128),w
  2927     040E  0084               	movwf	4
  2928     040F  1783               	bsf	3,7
  2929     0410  1C35               	btfss	(malloc@sz+1)^(0+128),0
  2930     0411  1383               	bcf	3,7
  2931     0412  082E               	movf	malloc@n^(0+128),w
  2932     0413  0080               	movwf	0
  2933     0414  0A84               	incf	4,f
  2934     0415  082F               	movf	(malloc@n+1)^(0+128),w
  2935     0416  0080               	movwf	0
  2936     0417                     l1366:
  2937     0417  3002               	movlw	2
  2938     0418  07B4               	addwf	malloc@sz^(0+128),f
  2939     0419  1803               	skipnc
  2940     041A  0AB5               	incf	(malloc@sz+1)^(0+128),f
  2941     041B  3000               	movlw	0
  2942     041C  07B5               	addwf	(malloc@sz+1)^(0+128),f
  2943     041D                     l1368:
  2944     041D  0834               	movf	malloc@sz^(0+128),w
  2945     041E  00B8               	movwf	malloc@p^(0+128)
  2946     041F  0835               	movf	(malloc@sz+1)^(0+128),w
  2947     0420  00B9               	movwf	(malloc@p+1)^(0+128)
  2948     0421                     l1370:
  2949     0421  082E               	movf	malloc@n^(0+128),w
  2950     0422  3E02               	addlw	2
  2951     0423  00B0               	movwf	??_malloc^(0+128)
  2952     0424  082F               	movf	(malloc@n+1)^(0+128),w
  2953     0425  1803               	skipnc
  2954     0426  3E01               	addlw	1
  2955     0427  3E00               	addlw	0
  2956     0428  00B1               	movwf	(??_malloc+1)^(0+128)
  2957     0429  0830               	movf	??_malloc^(0+128),w
  2958     042A  07D9               	addwf	malloc@cur^(0+128),f
  2959     042B  1803               	skipnc
  2960     042C  0ADA               	incf	(malloc@cur+1)^(0+128),f
  2961     042D  0831               	movf	(??_malloc+1)^(0+128),w
  2962     042E  07DA               	addwf	(malloc@cur+1)^(0+128),f
  2963     042F                     l1372:
  2964     042F  0838               	movf	malloc@p^(0+128),w
  2965     0430  00AE               	movwf	?_malloc^(0+128)
  2966     0431  0839               	movf	(malloc@p+1)^(0+128),w
  2967     0432  00AF               	movwf	(?_malloc+1)^(0+128)
  2968     0433                     l747:
  2969     0433  0008               	return
  2970     0434                     __end_of_malloc:
  2971                           
  2972                           	psect	text16
  2973     01E6                     __ptext16:	
  2974 ;; *************** function ___simple_search_fl *****************
  2975 ;; Defined at:
  2976 ;;		line 19 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lite_free.c"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;  n               2    0[BANK1 ] unsigned int 
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;  remaining_si    2    6[BANK1 ] unsigned int 
  2981 ;;  split           1    9[BANK1 ] PTR struct chunk
  2982 ;;		 -> NULL(0), 
  2983 ;;  next            1   11[BANK1 ] PTR struct chunk
  2984 ;;		 -> NULL(0), 
  2985 ;;  best            1   13[BANK1 ] PTR struct chunk
  2986 ;;		 -> NULL(0), 
  2987 ;;  c               1   12[BANK1 ] PTR struct chunk
  2988 ;;		 -> NULL(0), 
  2989 ;;  last            1   10[BANK1 ] PTR struct chunk
  2990 ;;		 -> NULL(0), 
  2991 ;;  best_last       1    8[BANK1 ] PTR struct chunk
  2992 ;;		 -> NULL(0), 
  2993 ;; Return value:  Size  Location     Type
  2994 ;;                  1    wreg      PTR void 
  2995 ;; Registers used:
  2996 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3002 ;;      Params:         0       0       2       0
  3003 ;;      Locals:         0       0       8       0
  3004 ;;      Temps:          0       0       4       0
  3005 ;;      Totals:         0       0      14       0
  3006 ;;Total ram usage:       14 bytes
  3007 ;; Hardware stack levels used: 1
  3008 ;; Hardware stack levels required when called: 4
  3009 ;; This function calls:
  3010 ;;		Nothing
  3011 ;; This function is called by:
  3012 ;;		_malloc
  3013 ;; This function uses a non-reentrant model
  3014 ;;
  3015                           
  3016     01E6                     ___simple_search_fl:	
  3017                           ;psect for function ___simple_search_fl
  3018                           
  3019     01E6                     l1236:	
  3020                           ;incstack = 0
  3021                           ; Regs used in ___simple_search_fl: [wreg-fsr0h+status,2+status,0+btemp+1]
  3022                           
  3023     01E6  1683               	bsf	3,5	;RP0=1, select bank1
  3024     01E7  1303               	bcf	3,6	;RP1=0, select bank1
  3025     01E8  01AD               	clrf	___simple_search_fl@best^(0+128)
  3026     01E9  01A8               	clrf	___simple_search_fl@best_last^(0+128)
  3027     01EA  01AA               	clrf	___simple_search_fl@last^(0+128)
  3028     01EB                     l1238:
  3029     01EB  085D               	movf	___freelist^(0+128),w
  3030     01EC  1D03               	btfss	3,2
  3031     01ED  29EF               	goto	u641
  3032     01EE  29F0               	goto	u640
  3033     01EF                     u641:
  3034     01EF  29F2               	goto	l1244
  3035     01F0                     u640:
  3036     01F0                     l1240:
  3037     01F0  3000               	movlw	0
  3038     01F1  2AC3               	goto	l776
  3039     01F2                     l1244:
  3040     01F2  085D               	movf	___freelist^(0+128),w
  3041     01F3  00AC               	movwf	___simple_search_fl@c^(0+128)
  3042     01F4  2A59               	goto	l1270
  3043     01F5                     l1246:
  3044     01F5  082C               	movf	___simple_search_fl@c^(0+128),w
  3045     01F6  0084               	movwf	4
  3046     01F7  1383               	bcf	3,7	;select IRP bank0
  3047     01F8  0800               	movf	0,w
  3048     01F9  00A2               	movwf	??___simple_search_fl^(0+128)
  3049     01FA  0A84               	incf	4,f
  3050     01FB  0800               	movf	0,w
  3051     01FC  00A3               	movwf	(??___simple_search_fl^(0+128)+1)
  3052     01FD  0821               	movf	(___simple_search_fl@n+1)^(0+128),w
  3053     01FE  0623               	xorwf	(??___simple_search_fl+1)^(0+128),w
  3054     01FF  1D03               	skipz
  3055     0200  2A03               	goto	u655
  3056     0201  0820               	movf	___simple_search_fl@n^(0+128),w
  3057     0202  0622               	xorwf	??___simple_search_fl^(0+128),w
  3058     0203                     u655:
  3059     0203  1D03               	skipz
  3060     0204  2A06               	goto	u651
  3061     0205  2A07               	goto	u650
  3062     0206                     u651:
  3063     0206  2A1F               	goto	l1258
  3064     0207                     u650:
  3065     0207                     l1248:
  3066     0207  082A               	movf	___simple_search_fl@last^(0+128),w
  3067     0208  1903               	btfsc	3,2
  3068     0209  2A0B               	goto	u661
  3069     020A  2A0C               	goto	u660
  3070     020B                     u661:
  3071     020B  2A17               	goto	l1252
  3072     020C                     u660:
  3073     020C                     l1250:
  3074     020C  082C               	movf	___simple_search_fl@c^(0+128),w
  3075     020D  3E02               	addlw	2
  3076     020E  0084               	movwf	4
  3077     020F  0800               	movf	0,w
  3078     0210  00FF               	movwf	btemp+1
  3079     0211  082A               	movf	___simple_search_fl@last^(0+128),w
  3080     0212  3E02               	addlw	2
  3081     0213  0084               	movwf	4
  3082     0214  087F               	movf	btemp+1,w
  3083     0215  0080               	movwf	0
  3084     0216  2A1C               	goto	l1254
  3085     0217                     l1252:
  3086     0217  082C               	movf	___simple_search_fl@c^(0+128),w
  3087     0218  3E02               	addlw	2
  3088     0219  0084               	movwf	4
  3089     021A  0800               	movf	0,w
  3090     021B  00DD               	movwf	___freelist^(0+128)
  3091     021C                     l1254:
  3092     021C  082C               	movf	___simple_search_fl@c^(0+128),w
  3093     021D  3E02               	addlw	2
  3094     021E  2AC3               	goto	l776
  3095     021F                     l1258:
  3096     021F  082C               	movf	___simple_search_fl@c^(0+128),w
  3097     0220  0084               	movwf	4
  3098     0221  0800               	movf	0,w
  3099     0222  00A2               	movwf	??___simple_search_fl^(0+128)
  3100     0223  0A84               	incf	4,f
  3101     0224  0800               	movf	0,w
  3102     0225  00A3               	movwf	(??___simple_search_fl^(0+128)+1)
  3103     0226  0823               	movf	(??___simple_search_fl+1)^(0+128),w
  3104     0227  0221               	subwf	(___simple_search_fl@n+1)^(0+128),w
  3105     0228  1D03               	skipz
  3106     0229  2A2C               	goto	u675
  3107     022A  0822               	movf	??___simple_search_fl^(0+128),w
  3108     022B  0220               	subwf	___simple_search_fl@n^(0+128),w
  3109     022C                     u675:
  3110     022C  1803               	skipnc
  3111     022D  2A2F               	goto	u671
  3112     022E  2A30               	goto	u670
  3113     022F                     u671:
  3114     022F  2A52               	goto	l784
  3115     0230                     u670:
  3116     0230                     l1260:
  3117     0230  082D               	movf	___simple_search_fl@best^(0+128),w
  3118     0231  1903               	btfsc	3,2
  3119     0232  2A34               	goto	u681
  3120     0233  2A35               	goto	u680
  3121     0234                     u681:
  3122     0234  2A4E               	goto	l1266
  3123     0235                     u680:
  3124     0235                     l1262:
  3125     0235  082D               	movf	___simple_search_fl@best^(0+128),w
  3126     0236  0084               	movwf	4
  3127     0237  0800               	movf	0,w
  3128     0238  00A2               	movwf	??___simple_search_fl^(0+128)
  3129     0239  0A84               	incf	4,f
  3130     023A  0800               	movf	0,w
  3131     023B  00A3               	movwf	(??___simple_search_fl^(0+128)+1)
  3132     023C  082C               	movf	___simple_search_fl@c^(0+128),w
  3133     023D  0084               	movwf	4
  3134     023E  0800               	movf	0,w
  3135     023F  00A4               	movwf	(??___simple_search_fl+2)^(0+128)
  3136     0240  0A84               	incf	4,f
  3137     0241  0800               	movf	0,w
  3138     0242  00A5               	movwf	((??___simple_search_fl+2)^(0+128)+1)
  3139     0243  0823               	movf	(??___simple_search_fl+1)^(0+128),w
  3140     0244  0225               	subwf	(??___simple_search_fl+3)^(0+128),w
  3141     0245  1D03               	skipz
  3142     0246  2A49               	goto	u695
  3143     0247  0822               	movf	??___simple_search_fl^(0+128),w
  3144     0248  0224               	subwf	(??___simple_search_fl+2)^(0+128),w
  3145     0249                     u695:
  3146     0249  1C03               	skipc
  3147     024A  2A4C               	goto	u691
  3148     024B  2A4D               	goto	u690
  3149     024C                     u691:
  3150     024C  2A4E               	goto	l1266
  3151     024D                     u690:
  3152     024D  2A52               	goto	l784
  3153     024E                     l1266:
  3154     024E  082C               	movf	___simple_search_fl@c^(0+128),w
  3155     024F  00AD               	movwf	___simple_search_fl@best^(0+128)
  3156     0250  082A               	movf	___simple_search_fl@last^(0+128),w
  3157     0251  00A8               	movwf	___simple_search_fl@best_last^(0+128)
  3158     0252                     l784:
  3159     0252  082C               	movf	___simple_search_fl@c^(0+128),w
  3160     0253  00AA               	movwf	___simple_search_fl@last^(0+128)
  3161     0254                     l1268:
  3162     0254  082C               	movf	___simple_search_fl@c^(0+128),w
  3163     0255  3E02               	addlw	2
  3164     0256  0084               	movwf	4
  3165     0257  0800               	movf	0,w
  3166     0258  00AC               	movwf	___simple_search_fl@c^(0+128)
  3167     0259                     l1270:
  3168     0259  082C               	movf	___simple_search_fl@c^(0+128),w
  3169     025A  1D03               	btfss	3,2
  3170     025B  2A5D               	goto	u701
  3171     025C  2A5E               	goto	u700
  3172     025D                     u701:
  3173     025D  29F5               	goto	l1246
  3174     025E                     u700:
  3175     025E                     l1272:
  3176     025E  082D               	movf	___simple_search_fl@best^(0+128),w
  3177     025F  1903               	btfsc	3,2
  3178     0260  2A62               	goto	u711
  3179     0261  2A63               	goto	u710
  3180     0262                     u711:
  3181     0262  29F0               	goto	l1240
  3182     0263                     u710:
  3183     0263                     l1274:
  3184     0263  082D               	movf	___simple_search_fl@best^(0+128),w
  3185     0264  3E02               	addlw	2
  3186     0265  0084               	movwf	4
  3187     0266  1383               	bcf	3,7	;select IRP bank0
  3188     0267  0800               	movf	0,w
  3189     0268  00AB               	movwf	___simple_search_fl@next^(0+128)
  3190     0269  082D               	movf	___simple_search_fl@best^(0+128),w
  3191     026A  0084               	movwf	4
  3192     026B  0800               	movf	0,w
  3193     026C  00A2               	movwf	??___simple_search_fl^(0+128)
  3194     026D  0A84               	incf	4,f
  3195     026E  0800               	movf	0,w
  3196     026F  00A3               	movwf	(??___simple_search_fl^(0+128)+1)
  3197     0270  0820               	movf	___simple_search_fl@n^(0+128),w
  3198     0271  0222               	subwf	??___simple_search_fl^(0+128),w
  3199     0272  00A4               	movwf	(??___simple_search_fl+2)^(0+128)
  3200     0273  0821               	movf	(___simple_search_fl@n+1)^(0+128),w
  3201     0274  1C03               	skipc
  3202     0275  0A21               	incf	(___simple_search_fl@n+1)^(0+128),w
  3203     0276  0223               	subwf	(??___simple_search_fl+1)^(0+128),w
  3204     0277  00A5               	movwf	(??___simple_search_fl+3)^(0+128)
  3205     0278  3000               	movlw	0
  3206     0279  0225               	subwf	(??___simple_search_fl+3)^(0+128),w
  3207     027A  3005               	movlw	5
  3208     027B  1903               	skipnz
  3209     027C  0224               	subwf	(??___simple_search_fl+2)^(0+128),w
  3210     027D  1C03               	skipc
  3211     027E  2A80               	goto	u721
  3212     027F  2A81               	goto	u720
  3213     0280                     u721:
  3214     0280  2AB3               	goto	l1286
  3215     0281                     u720:
  3216     0281                     l1276:
  3217     0281  082D               	movf	___simple_search_fl@best^(0+128),w
  3218     0282  0084               	movwf	4
  3219     0283  0800               	movf	0,w
  3220     0284  00A2               	movwf	??___simple_search_fl^(0+128)
  3221     0285  0A84               	incf	4,f
  3222     0286  0800               	movf	0,w
  3223     0287  00A3               	movwf	(??___simple_search_fl^(0+128)+1)
  3224     0288  0820               	movf	___simple_search_fl@n^(0+128),w
  3225     0289  0222               	subwf	??___simple_search_fl^(0+128),w
  3226     028A  00A4               	movwf	(??___simple_search_fl+2)^(0+128)
  3227     028B  0821               	movf	(___simple_search_fl@n+1)^(0+128),w
  3228     028C  1C03               	skipc
  3229     028D  0A21               	incf	(___simple_search_fl@n+1)^(0+128),w
  3230     028E  0223               	subwf	(??___simple_search_fl+1)^(0+128),w
  3231     028F  00A5               	movwf	(??___simple_search_fl+3)^(0+128)
  3232     0290  0824               	movf	(??___simple_search_fl+2)^(0+128),w
  3233     0291  3EFE               	addlw	254
  3234     0292  00A6               	movwf	___simple_search_fl@remaining_size^(0+128)
  3235     0293  0825               	movf	(??___simple_search_fl+3)^(0+128),w
  3236     0294  1803               	skipnc
  3237     0295  3E01               	addlw	1
  3238     0296  3EFF               	addlw	255
  3239     0297  00A7               	movwf	(___simple_search_fl@remaining_size+1)^(0+128)
  3240     0298                     l1278:
  3241     0298  082D               	movf	___simple_search_fl@best^(0+128),w
  3242     0299  0084               	movwf	4
  3243     029A  0820               	movf	___simple_search_fl@n^(0+128),w
  3244     029B  0080               	movwf	0
  3245     029C  0A84               	incf	4,f
  3246     029D  0821               	movf	(___simple_search_fl@n+1)^(0+128),w
  3247     029E  0080               	movwf	0
  3248     029F                     l1280:
  3249     029F  082D               	movf	___simple_search_fl@best^(0+128),w
  3250     02A0  0084               	movwf	4
  3251     02A1  0800               	movf	0,w
  3252     02A2  072D               	addwf	___simple_search_fl@best^(0+128),w
  3253     02A3  3E02               	addlw	2
  3254     02A4  00A9               	movwf	___simple_search_fl@split^(0+128)
  3255     02A5  0829               	movf	___simple_search_fl@split^(0+128),w
  3256     02A6  0084               	movwf	4
  3257     02A7  0826               	movf	___simple_search_fl@remaining_size^(0+128),w
  3258     02A8  0080               	movwf	0
  3259     02A9  0A84               	incf	4,f
  3260     02AA  0827               	movf	(___simple_search_fl@remaining_size+1)^(0+128),w
  3261     02AB  0080               	movwf	0
  3262     02AC                     l1282:
  3263     02AC  0829               	movf	___simple_search_fl@split^(0+128),w
  3264     02AD  3E02               	addlw	2
  3265     02AE  0084               	movwf	4
  3266     02AF  082B               	movf	___simple_search_fl@next^(0+128),w
  3267     02B0  0080               	movwf	0
  3268     02B1                     l1284:
  3269     02B1  0829               	movf	___simple_search_fl@split^(0+128),w
  3270     02B2  00AB               	movwf	___simple_search_fl@next^(0+128)
  3271     02B3                     l1286:
  3272     02B3  085D               	movf	___freelist^(0+128),w
  3273     02B4  062D               	xorwf	___simple_search_fl@best^(0+128),w
  3274     02B5  1D03               	skipz
  3275     02B6  2AB8               	goto	u731
  3276     02B7  2AB9               	goto	u730
  3277     02B8                     u731:
  3278     02B8  2ABC               	goto	l1290
  3279     02B9                     u730:
  3280     02B9                     l1288:
  3281     02B9  082B               	movf	___simple_search_fl@next^(0+128),w
  3282     02BA  00DD               	movwf	___freelist^(0+128)
  3283     02BB  2AC1               	goto	l1292
  3284     02BC                     l1290:
  3285     02BC  0828               	movf	___simple_search_fl@best_last^(0+128),w
  3286     02BD  3E02               	addlw	2
  3287     02BE  0084               	movwf	4
  3288     02BF  082B               	movf	___simple_search_fl@next^(0+128),w
  3289     02C0  0080               	movwf	0
  3290     02C1                     l1292:
  3291     02C1  082D               	movf	___simple_search_fl@best^(0+128),w
  3292     02C2  3E02               	addlw	2
  3293     02C3                     l776:
  3294     02C3  0008               	return
  3295     02C4                     __end_of___simple_search_fl:
  3296                           
  3297                           	psect	text17
  3298     05AE                     __ptext17:	
  3299 ;; *************** function ___expand_heap *****************
  3300 ;; Defined at:
  3301 ;;		line 14 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\expand_heap.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;  pn              1    wreg     PTR unsigned int 
  3304 ;;		 -> malloc@m(2), 
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;  pn              1    0[BANK1 ] PTR unsigned int 
  3307 ;;		 -> malloc@m(2), 
  3308 ;;  new_brkp        2    3[BANK1 ] PTR unsigned char 
  3309 ;;		 -> __heap_hi(0), NULL(0), 
  3310 ;;  n               2    1[BANK1 ] unsigned int 
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  2  734[None  ] PTR void 
  3313 ;; Registers used:
  3314 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3320 ;;      Params:         0       0       0       0
  3321 ;;      Locals:         0       0       5       0
  3322 ;;      Temps:          0       0       0       0
  3323 ;;      Totals:         0       0       5       0
  3324 ;;Total ram usage:        5 bytes
  3325 ;; Hardware stack levels used: 1
  3326 ;; Hardware stack levels required when called: 4
  3327 ;; This function calls:
  3328 ;;		Nothing
  3329 ;; This function is called by:
  3330 ;;		_malloc
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334     05AE                     ___expand_heap:	
  3335                           ;psect for function ___expand_heap
  3336                           
  3337                           
  3338                           ;incstack = 0
  3339                           ; Regs used in ___expand_heap: [wreg-fsr0h+status,2+status,0]
  3340                           ;___expand_heap@pn stored from wreg
  3341     05AE  1683               	bsf	3,5	;RP0=1, select bank1
  3342     05AF  1303               	bcf	3,6	;RP1=0, select bank1
  3343     05B0  00A0               	movwf	___expand_heap@pn^(0+128)
  3344     05B1                     l1300:
  3345     05B1  0820               	movf	___expand_heap@pn^(0+128),w
  3346     05B2  0084               	movwf	4
  3347     05B3  1383               	bcf	3,7	;select IRP bank0
  3348     05B4  0800               	movf	0,w
  3349     05B5  00A1               	movwf	___expand_heap@n^(0+128)
  3350     05B6  0A84               	incf	4,f
  3351     05B7  0800               	movf	0,w
  3352     05B8  00A2               	movwf	(___expand_heap@n+1)^(0+128)
  3353     05B9                     l1302:
  3354     05B9  0855               	movf	_brkp^(0+128),w
  3355     05BA  0456               	iorwf	(_brkp+1)^(0+128),w
  3356     05BB  1D03               	btfss	3,2
  3357     05BC  2DBE               	goto	u741
  3358     05BD  2DBF               	goto	u740
  3359     05BE                     u741:
  3360     05BE  2DC3               	goto	l765
  3361     05BF                     u740:
  3362     05BF                     l1304:
  3363     05BF  3070               	movlw	low ___heap_hi
  3364     05C0  00D5               	movwf	_brkp^(0+128)
  3365     05C1  3001               	movlw	high ___heap_hi
  3366     05C2  00D6               	movwf	(_brkp^(0+128)+1)
  3367     05C3                     l765:
  3368     05C3  3000               	movlw	0
  3369     05C4  0222               	subwf	(___expand_heap@n+1)^(0+128),w
  3370     05C5  3004               	movlw	4
  3371     05C6  1903               	skipnz
  3372     05C7  0221               	subwf	___expand_heap@n^(0+128),w
  3373     05C8  1803               	skipnc
  3374     05C9  2DCB               	goto	u751
  3375     05CA  2DCC               	goto	u750
  3376     05CB                     u751:
  3377     05CB  2DD0               	goto	l1308
  3378     05CC                     u750:
  3379     05CC                     l1306:
  3380     05CC  3004               	movlw	4
  3381     05CD  00A1               	movwf	___expand_heap@n^(0+128)
  3382     05CE  3000               	movlw	0
  3383     05CF  00A2               	movwf	(___expand_heap@n^(0+128)+1)
  3384     05D0                     l1308:
  3385     05D0  0821               	movf	___expand_heap@n^(0+128),w
  3386     05D1  0255               	subwf	_brkp^(0+128),w
  3387     05D2  00A3               	movwf	___expand_heap@new_brkp^(0+128)
  3388     05D3  0822               	movf	(___expand_heap@n+1)^(0+128),w
  3389     05D4  1C03               	skipc
  3390     05D5  0A22               	incf	(___expand_heap@n+1)^(0+128),w
  3391     05D6  0256               	subwf	(_brkp+1)^(0+128),w
  3392     05D7  00A4               	movwf	(___expand_heap@new_brkp+1)^(0+128)
  3393     05D8                     l1310:
  3394     05D8  3001               	movlw	high ___heap_lo
  3395     05D9  0224               	subwf	(___expand_heap@new_brkp+1)^(0+128),w
  3396     05DA  3020               	movlw	low ___heap_lo
  3397     05DB  1903               	skipnz
  3398     05DC  0223               	subwf	___expand_heap@new_brkp^(0+128),w
  3399     05DD  1C03               	skipc
  3400     05DE  2DE0               	goto	u761
  3401     05DF  2DE1               	goto	u760
  3402     05E0                     u761:
  3403     05E0  2DEB               	goto	l1314
  3404     05E1                     u760:
  3405     05E1                     l1312:
  3406     05E1  0856               	movf	(_brkp+1)^(0+128),w
  3407     05E2  0224               	subwf	(___expand_heap@new_brkp+1)^(0+128),w
  3408     05E3  1D03               	skipz
  3409     05E4  2DE7               	goto	u775
  3410     05E5  0855               	movf	_brkp^(0+128),w
  3411     05E6  0223               	subwf	___expand_heap@new_brkp^(0+128),w
  3412     05E7                     u775:
  3413     05E7  1C03               	skipc
  3414     05E8  2DEA               	goto	u771
  3415     05E9  2DEB               	goto	u770
  3416     05EA                     u771:
  3417     05EA  2DF2               	goto	l1320
  3418     05EB                     u770:
  3419     05EB                     l1314:
  3420     05EB  300C               	movlw	12
  3421     05EC  00DB               	movwf	_errno^(0+128)
  3422     05ED  3000               	movlw	0
  3423     05EE  00DC               	movwf	(_errno^(0+128)+1)
  3424     05EF                     l1316:
  3425     05EF  01F0               	clrf	?___expand_heap
  3426     05F0  01F1               	clrf	?___expand_heap+1
  3427     05F1  2DFA               	goto	l770
  3428     05F2                     l1320:
  3429     05F2  0823               	movf	___expand_heap@new_brkp^(0+128),w
  3430     05F3  00D5               	movwf	_brkp^(0+128)
  3431     05F4  0824               	movf	(___expand_heap@new_brkp+1)^(0+128),w
  3432     05F5  00D6               	movwf	(_brkp+1)^(0+128)
  3433     05F6  0855               	movf	_brkp^(0+128),w
  3434     05F7  00F0               	movwf	?___expand_heap
  3435     05F8  0856               	movf	(_brkp+1)^(0+128),w
  3436     05F9  00F1               	movwf	?___expand_heap+1
  3437     05FA                     l770:
  3438     05FA  0008               	return
  3439     05FB                     __end_of___expand_heap:
  3440                           
  3441                           	psect	text18
  3442     066F                     __ptext18:	
  3443 ;; *************** function _isr *****************
  3444 ;; Defined at:
  3445 ;;		line 17 in file "main.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;		None
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;		None
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  1    wreg      void 
  3452 ;; Registers used:
  3453 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3454 ;; Tracked objects:
  3455 ;;		On entry : 0/0
  3456 ;;		On exit  : 0/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3459 ;;      Params:         0       0       0       0
  3460 ;;      Locals:         0       0       0       0
  3461 ;;      Temps:          0       3       0       0
  3462 ;;      Totals:         0       3       0       0
  3463 ;;Total ram usage:        3 bytes
  3464 ;; Hardware stack levels used: 1
  3465 ;; Hardware stack levels required when called: 3
  3466 ;; This function calls:
  3467 ;;		_is_adc_conversion_done
  3468 ;;		_is_crossing_zero_point
  3469 ;;		_pwr_pulse
  3470 ;;		_reset_adc_interrupt
  3471 ;;		_set_state_according_to_pwr_btn
  3472 ;;		i1_start_adc_conversion
  3473 ;; This function is called by:
  3474 ;;		Interrupt level 1
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478     066F                     _isr:	
  3479                           ;psect for function _isr
  3480                           
  3481     066F                     i1l1650:
  3482                           
  3483                           ;main.c: 18:     if (is_adc_conversion_done()) {
  3484     066F  118A  2714  118A   	fcall	_is_adc_conversion_done
  3485     0672  0870               	movf	?_is_adc_conversion_done,w
  3486     0673  0471               	iorwf	?_is_adc_conversion_done+1,w
  3487     0674  1903               	btfsc	3,2
  3488     0675  2E77               	goto	u125_21
  3489     0676  2E78               	goto	u125_20
  3490     0677                     u125_21:
  3491     0677  2E8F               	goto	i1l31
  3492     0678                     u125_20:
  3493     0678                     i1l1652:
  3494                           
  3495                           ;main.c: 19:         reset_adc_interrupt();
  3496     0678  118A  279C  118A   	fcall	_reset_adc_interrupt
  3497     067B                     i1l1654:
  3498                           
  3499                           ;main.c: 20:         if (is_crossing_zero_point()) {
  3500     067B  118A  26BF  118A   	fcall	_is_crossing_zero_point
  3501     067E  1283               	bcf	3,5	;RP0=0, select bank0
  3502     067F  1303               	bcf	3,6	;RP1=0, select bank0
  3503     0680  0844               	movf	?_is_crossing_zero_point,w
  3504     0681  0445               	iorwf	?_is_crossing_zero_point+1,w
  3505     0682  1903               	btfsc	3,2
  3506     0683  2E85               	goto	u126_21
  3507     0684  2E86               	goto	u126_20
  3508     0685                     u126_21:
  3509     0685  2E8C               	goto	i1l1658
  3510     0686                     u126_20:
  3511     0686                     i1l1656:
  3512                           
  3513                           ;main.c: 21:             set_state_according_to_pwr_btn();
  3514     0686  118A  2729  118A   	fcall	_set_state_according_to_pwr_btn
  3515                           
  3516                           ;main.c: 22:             pwr_pulse();
  3517     0689  118A  26E3  118A   	fcall	_pwr_pulse
  3518     068C                     i1l1658:
  3519                           
  3520                           ;main.c: 25:         start_adc_conversion();
  3521     068C  118A  27B5  118A   	fcall	i1_start_adc_conversion
  3522     068F                     i1l31:
  3523     068F  1283               	bcf	3,5	;RP0=0, select bank0
  3524     0690  1303               	bcf	3,6	;RP1=0, select bank0
  3525     0691  084A               	movf	??_isr+2,w
  3526     0692  00FF               	movwf	btemp+1
  3527     0693  0849               	movf	??_isr+1,w
  3528     0694  008A               	movwf	10
  3529     0695  0E48               	swapf	??_isr,w
  3530     0696  0083               	movwf	3
  3531     0697  0EFE               	swapf	btemp,f
  3532     0698  0E7E               	swapf	btemp,w
  3533     0699  0009               	retfie
  3534     069A                     __end_of_isr:
  3535                           
  3536                           	psect	intentry
  3537     0004                     __pintentry:	
  3538                           ;incstack = 0
  3539                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3540                           
  3541     0004                     interrupt_function:
  3542     007E                     saved_w	set	btemp
  3543     0004  00FE               	movwf	btemp
  3544     0005  0E03               	swapf	3,w
  3545     0006  1283               	bcf	3,5	;RP0=0, select bank0
  3546     0007  1303               	bcf	3,6	;RP1=0, select bank0
  3547     0008  00C8               	movwf	??_isr
  3548     0009  080A               	movf	10,w
  3549     000A  00C9               	movwf	??_isr+1
  3550     000B  087F               	movf	btemp+1,w
  3551     000C  00CA               	movwf	??_isr+2
  3552     000D  118A  2E6F         	ljmp	_isr
  3553                           
  3554                           	psect	text19
  3555     07B5                     __ptext19:	
  3556 ;; *************** function i1_start_adc_conversion *****************
  3557 ;; Defined at:
  3558 ;;		line 22 in file "task2/zero_crossing.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;		None
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;		None
  3563 ;; Return value:  Size  Location     Type
  3564 ;;                  1    wreg      void 
  3565 ;; Registers used:
  3566 ;;		None
  3567 ;; Tracked objects:
  3568 ;;		On entry : 0/0
  3569 ;;		On exit  : 0/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3572 ;;      Params:         0       0       0       0
  3573 ;;      Locals:         0       0       0       0
  3574 ;;      Temps:          0       0       0       0
  3575 ;;      Totals:         0       0       0       0
  3576 ;;Total ram usage:        0 bytes
  3577 ;; Hardware stack levels used: 1
  3578 ;; This function calls:
  3579 ;;		Nothing
  3580 ;; This function is called by:
  3581 ;;		_isr
  3582 ;; This function uses a non-reentrant model
  3583 ;;
  3584                           
  3585     07B5                     i1_start_adc_conversion:	
  3586                           ;psect for function i1_start_adc_conversion
  3587                           
  3588     07B5                     i1l1214:	
  3589                           ;incstack = 0
  3590                           ; Regs used in i1_start_adc_conversion: []
  3591                           
  3592                           
  3593                           ;task2/zero_crossing.c: 23:     ADCON0bits.GO_nDONE = 1;
  3594     07B5  1283               	bcf	3,5	;RP0=0, select bank0
  3595     07B6  1303               	bcf	3,6	;RP1=0, select bank0
  3596     07B7  149F               	bsf	31,1	;volatile
  3597     07B8                     i1l108:
  3598     07B8  0008               	return
  3599     07B9                     __end_ofi1_start_adc_conversion:
  3600                           
  3601                           	psect	text20
  3602     0729                     __ptext20:	
  3603 ;; *************** function _set_state_according_to_pwr_btn *****************
  3604 ;; Defined at:
  3605 ;;		line 15 in file "task5/pwr_btn_control.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;		None
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;		None
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  1    wreg      void 
  3612 ;; Registers used:
  3613 ;;		wreg, status,2, status,0, pclath, cstack
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3619 ;;      Params:         0       0       0       0
  3620 ;;      Locals:         0       0       0       0
  3621 ;;      Temps:          0       0       0       0
  3622 ;;      Totals:         0       0       0       0
  3623 ;;Total ram usage:        0 bytes
  3624 ;; Hardware stack levels used: 1
  3625 ;; Hardware stack levels required when called: 2
  3626 ;; This function calls:
  3627 ;;		_is_pwr_btn_pressed
  3628 ;;		_turn_board_off
  3629 ;;		i1_turn_board_on
  3630 ;; This function is called by:
  3631 ;;		_isr
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635     0729                     _set_state_according_to_pwr_btn:	
  3636                           ;psect for function _set_state_according_to_pwr_btn
  3637                           
  3638     0729                     i1l1602:	
  3639                           ;incstack = 0
  3640                           ; Regs used in _set_state_according_to_pwr_btn: [wreg+status,2+status,0+pclath+cstack]
  3641                           
  3642                           
  3643                           ;task5/pwr_btn_control.c: 16:     if (is_pwr_btn_pressed()) {
  3644     0729  118A  2748  118A   	fcall	_is_pwr_btn_pressed
  3645     072C  0870               	movf	?_is_pwr_btn_pressed,w
  3646     072D  0471               	iorwf	?_is_pwr_btn_pressed+1,w
  3647     072E  1903               	btfsc	3,2
  3648     072F  2F31               	goto	u121_21
  3649     0730  2F32               	goto	u121_20
  3650     0731                     u121_21:
  3651     0731  2F36               	goto	i1l1608
  3652     0732                     u121_20:
  3653     0732                     i1l1604:
  3654                           
  3655                           ;task5/pwr_btn_control.c: 17:         turn_board_on();
  3656     0732  118A  27B9  118A   	fcall	i1_turn_board_on
  3657     0735  2F39               	goto	i1l186
  3658     0736                     i1l1608:
  3659                           
  3660                           ;task5/pwr_btn_control.c: 21:     turn_board_off();
  3661     0736  118A  27BD  118A   	fcall	_turn_board_off
  3662     0739                     i1l186:
  3663     0739  0008               	return
  3664     073A                     __end_of_set_state_according_to_pwr_btn:
  3665                           
  3666                           	psect	text21
  3667     07B9                     __ptext21:	
  3668 ;; *************** function i1_turn_board_on *****************
  3669 ;; Defined at:
  3670 ;;		line 3 in file "task4/state_change.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;		None
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;		None
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1    wreg      void 
  3677 ;; Registers used:
  3678 ;;		status,2, status,0, pclath, cstack
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3684 ;;      Params:         0       0       0       0
  3685 ;;      Locals:         0       0       0       0
  3686 ;;      Temps:          0       0       0       0
  3687 ;;      Totals:         0       0       0       0
  3688 ;;Total ram usage:        0 bytes
  3689 ;; Hardware stack levels used: 1
  3690 ;; Hardware stack levels required when called: 1
  3691 ;; This function calls:
  3692 ;;		i1_set_full_pwr
  3693 ;; This function is called by:
  3694 ;;		_set_state_according_to_pwr_btn
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697                           
  3698     07B9                     i1_turn_board_on:	
  3699                           ;psect for function i1_turn_board_on
  3700                           
  3701     07B9                     i1l1584:	
  3702                           ;incstack = 0
  3703                           ; Regs used in i1_turn_board_on: [status,2+status,0+pclath+cstack]
  3704                           
  3705                           
  3706                           ;task4/state_change.c: 4:     set_full_pwr();
  3707     07B9  118A  27A8  118A   	fcall	i1_set_full_pwr
  3708     07BC                     i1l163:
  3709     07BC  0008               	return
  3710     07BD                     __end_ofi1_turn_board_on:
  3711                           
  3712                           	psect	text22
  3713     07A8                     __ptext22:	
  3714 ;; *************** function i1_set_full_pwr *****************
  3715 ;; Defined at:
  3716 ;;		line 16 in file "task3/adjust_power.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;		None
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;		None
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  1    wreg      void 
  3723 ;; Registers used:
  3724 ;;		status,2
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3730 ;;      Params:         0       0       0       0
  3731 ;;      Locals:         0       0       0       0
  3732 ;;      Temps:          0       0       0       0
  3733 ;;      Totals:         0       0       0       0
  3734 ;;Total ram usage:        0 bytes
  3735 ;; Hardware stack levels used: 1
  3736 ;; This function calls:
  3737 ;;		Nothing
  3738 ;; This function is called by:
  3739 ;;		i1_turn_board_on
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743     07A8                     i1_set_full_pwr:	
  3744                           ;psect for function i1_set_full_pwr
  3745                           
  3746     07A8                     i1l1472:	
  3747                           ;incstack = 0
  3748                           ; Regs used in i1_set_full_pwr: [status,2]
  3749                           
  3750                           
  3751                           ;task3/adjust_power.c: 17:     power_lvl = 0;
  3752     07A8  1283               	bcf	3,5	;RP0=0, select bank0
  3753     07A9  1303               	bcf	3,6	;RP1=0, select bank0
  3754     07AA  01CF               	clrf	_power_lvl	;volatile
  3755     07AB  01D0               	clrf	_power_lvl+1	;volatile
  3756     07AC                     i1l144:
  3757     07AC  0008               	return
  3758     07AD                     __end_ofi1_set_full_pwr:
  3759                           
  3760                           	psect	text23
  3761     07BD                     __ptext23:	
  3762 ;; *************** function _turn_board_off *****************
  3763 ;; Defined at:
  3764 ;;		line 7 in file "task4/state_change.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;		None
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;		None
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  1    wreg      void 
  3771 ;; Registers used:
  3772 ;;		wreg, status,2, status,0, pclath, cstack
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3778 ;;      Params:         0       0       0       0
  3779 ;;      Locals:         0       0       0       0
  3780 ;;      Temps:          0       0       0       0
  3781 ;;      Totals:         0       0       0       0
  3782 ;;Total ram usage:        0 bytes
  3783 ;; Hardware stack levels used: 1
  3784 ;; Hardware stack levels required when called: 1
  3785 ;; This function calls:
  3786 ;;		_set_low_pwr
  3787 ;; This function is called by:
  3788 ;;		_set_state_according_to_pwr_btn
  3789 ;; This function uses a non-reentrant model
  3790 ;;
  3791                           
  3792     07BD                     _turn_board_off:	
  3793                           ;psect for function _turn_board_off
  3794                           
  3795     07BD                     i1l1566:	
  3796                           ;incstack = 0
  3797                           ; Regs used in _turn_board_off: [wreg+status,2+status,0+pclath+cstack]
  3798                           
  3799                           
  3800                           ;task4/state_change.c: 8:     set_low_pwr();
  3801     07BD  118A  2795  118A   	fcall	_set_low_pwr
  3802     07C0                     i1l166:
  3803     07C0  0008               	return
  3804     07C1                     __end_of_turn_board_off:
  3805                           
  3806                           	psect	text24
  3807     0795                     __ptext24:	
  3808 ;; *************** function _set_low_pwr *****************
  3809 ;; Defined at:
  3810 ;;		line 12 in file "task3/adjust_power.c"
  3811 ;; Parameters:    Size  Location     Type
  3812 ;;		None
  3813 ;; Auto vars:     Size  Location     Type
  3814 ;;		None
  3815 ;; Return value:  Size  Location     Type
  3816 ;;                  1    wreg      void 
  3817 ;; Registers used:
  3818 ;;		wreg
  3819 ;; Tracked objects:
  3820 ;;		On entry : 0/0
  3821 ;;		On exit  : 0/0
  3822 ;;		Unchanged: 0/0
  3823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3824 ;;      Params:         0       0       0       0
  3825 ;;      Locals:         0       0       0       0
  3826 ;;      Temps:          0       0       0       0
  3827 ;;      Totals:         0       0       0       0
  3828 ;;Total ram usage:        0 bytes
  3829 ;; Hardware stack levels used: 1
  3830 ;; This function calls:
  3831 ;;		Nothing
  3832 ;; This function is called by:
  3833 ;;		_turn_board_off
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837     0795                     _set_low_pwr:	
  3838                           ;psect for function _set_low_pwr
  3839                           
  3840     0795                     i1l1376:	
  3841                           ;incstack = 0
  3842                           ; Regs used in _set_low_pwr: [wreg]
  3843                           
  3844                           
  3845                           ;task3/adjust_power.c: 13:     power_lvl = 2;
  3846     0795  3002               	movlw	2
  3847     0796  1283               	bcf	3,5	;RP0=0, select bank0
  3848     0797  1303               	bcf	3,6	;RP1=0, select bank0
  3849     0798  00CF               	movwf	_power_lvl	;volatile
  3850     0799  3000               	movlw	0
  3851     079A  00D0               	movwf	_power_lvl+1	;volatile
  3852     079B                     i1l141:
  3853     079B  0008               	return
  3854     079C                     __end_of_set_low_pwr:
  3855                           
  3856                           	psect	text25
  3857     0748                     __ptext25:	
  3858 ;; *************** function _is_pwr_btn_pressed *****************
  3859 ;; Defined at:
  3860 ;;		line 11 in file "task5/pwr_btn_control.c"
  3861 ;; Parameters:    Size  Location     Type
  3862 ;;		None
  3863 ;; Auto vars:     Size  Location     Type
  3864 ;;		None
  3865 ;; Return value:  Size  Location     Type
  3866 ;;                  2    0[COMMON] int 
  3867 ;; Registers used:
  3868 ;;		wreg, status,2, status,0
  3869 ;; Tracked objects:
  3870 ;;		On entry : 0/0
  3871 ;;		On exit  : 0/0
  3872 ;;		Unchanged: 0/0
  3873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3874 ;;      Params:         2       0       0       0
  3875 ;;      Locals:         0       0       0       0
  3876 ;;      Temps:          3       0       0       0
  3877 ;;      Totals:         5       0       0       0
  3878 ;;Total ram usage:        5 bytes
  3879 ;; Hardware stack levels used: 1
  3880 ;; This function calls:
  3881 ;;		Nothing
  3882 ;; This function is called by:
  3883 ;;		_set_state_according_to_pwr_btn
  3884 ;; This function uses a non-reentrant model
  3885 ;;
  3886                           
  3887     0748                     _is_pwr_btn_pressed:	
  3888                           ;psect for function _is_pwr_btn_pressed
  3889                           
  3890     0748                     i1l1568:	
  3891                           ;incstack = 0
  3892                           ; Regs used in _is_pwr_btn_pressed: [wreg+status,2+status,0]
  3893                           
  3894                           
  3895                           ;task5/pwr_btn_control.c: 12:     return PORTCbits.RC2;
  3896     0748  1283               	bcf	3,5	;RP0=0, select bank0
  3897     0749  1303               	bcf	3,6	;RP1=0, select bank0
  3898     074A  0C07               	rrf	7,w	;volatile
  3899     074B  00F2               	movwf	??_is_pwr_btn_pressed
  3900     074C  0C72               	rrf	??_is_pwr_btn_pressed,w
  3901     074D  3901               	andlw	1
  3902     074E  00F3               	movwf	??_is_pwr_btn_pressed+1
  3903     074F  01F4               	clrf	??_is_pwr_btn_pressed+2
  3904     0750  0873               	movf	??_is_pwr_btn_pressed+1,w
  3905     0751  00F0               	movwf	?_is_pwr_btn_pressed
  3906     0752  0874               	movf	??_is_pwr_btn_pressed+2,w
  3907     0753  00F1               	movwf	?_is_pwr_btn_pressed+1
  3908     0754                     i1l182:
  3909     0754  0008               	return
  3910     0755                     __end_of_is_pwr_btn_pressed:
  3911                           
  3912                           	psect	text26
  3913     079C                     __ptext26:	
  3914 ;; *************** function _reset_adc_interrupt *****************
  3915 ;; Defined at:
  3916 ;;		line 30 in file "task2/zero_crossing.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;		None
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;		None
  3921 ;; Return value:  Size  Location     Type
  3922 ;;                  1    wreg      void 
  3923 ;; Registers used:
  3924 ;;		None
  3925 ;; Tracked objects:
  3926 ;;		On entry : 0/0
  3927 ;;		On exit  : 0/0
  3928 ;;		Unchanged: 0/0
  3929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3930 ;;      Params:         0       0       0       0
  3931 ;;      Locals:         0       0       0       0
  3932 ;;      Temps:          0       0       0       0
  3933 ;;      Totals:         0       0       0       0
  3934 ;;Total ram usage:        0 bytes
  3935 ;; Hardware stack levels used: 1
  3936 ;; This function calls:
  3937 ;;		Nothing
  3938 ;; This function is called by:
  3939 ;;		_isr
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943     079C                     _reset_adc_interrupt:	
  3944                           ;psect for function _reset_adc_interrupt
  3945                           
  3946     079C                     i1l1160:	
  3947                           ;incstack = 0
  3948                           ; Regs used in _reset_adc_interrupt: []
  3949                           
  3950                           
  3951                           ;task2/zero_crossing.c: 31:     PIE1bits.ADIE = 0x1;
  3952     079C  1683               	bsf	3,5	;RP0=1, select bank1
  3953     079D  1303               	bcf	3,6	;RP1=0, select bank1
  3954     079E  170C               	bsf	12,6	;volatile
  3955                           
  3956                           ;task2/zero_crossing.c: 32:     PIR1bits.ADIF = 0;
  3957     079F  1283               	bcf	3,5	;RP0=0, select bank0
  3958     07A0  1303               	bcf	3,6	;RP1=0, select bank0
  3959     07A1  130C               	bcf	12,6	;volatile
  3960     07A2                     i1l116:
  3961     07A2  0008               	return
  3962     07A3                     __end_of_reset_adc_interrupt:
  3963                           
  3964                           	psect	text27
  3965     06E3                     __ptext27:	
  3966 ;; *************** function _pwr_pulse *****************
  3967 ;; Defined at:
  3968 ;;		line 24 in file "task3/adjust_power.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;		None
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;		None
  3973 ;; Return value:  Size  Location     Type
  3974 ;;                  1    wreg      void 
  3975 ;; Registers used:
  3976 ;;		wreg, status,2, status,0
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3982 ;;      Params:         0       0       0       0
  3983 ;;      Locals:         0       0       0       0
  3984 ;;      Temps:          1       0       0       0
  3985 ;;      Totals:         1       0       0       0
  3986 ;;Total ram usage:        1 bytes
  3987 ;; Hardware stack levels used: 1
  3988 ;; This function calls:
  3989 ;;		Nothing
  3990 ;; This function is called by:
  3991 ;;		_isr
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994                           
  3995     06E3                     _pwr_pulse:	
  3996                           ;psect for function _pwr_pulse
  3997                           
  3998     06E3                     i1l1610:	
  3999                           ;incstack = 0
  4000                           ; Regs used in _pwr_pulse: [wreg+status,2+status,0]
  4001                           
  4002                           
  4003                           ;task3/adjust_power.c: 25:     if (power_lvl == 2) {
  4004     06E3  3002               	movlw	2
  4005     06E4  1283               	bcf	3,5	;RP0=0, select bank0
  4006     06E5  1303               	bcf	3,6	;RP1=0, select bank0
  4007     06E6  064F               	xorwf	_power_lvl,w	;volatile
  4008     06E7  0450               	iorwf	_power_lvl+1,w	;volatile
  4009     06E8  1D03               	btfss	3,2
  4010     06E9  2EEB               	goto	u122_21
  4011     06EA  2EEC               	goto	u122_20
  4012     06EB                     u122_21:
  4013     06EB  2EED               	goto	i1l1614
  4014     06EC                     u122_20:
  4015     06EC  2EFE               	goto	i1l151
  4016     06ED                     i1l1614:
  4017                           
  4018                           ;task3/adjust_power.c: 29:     if (power_lvl == 1) {
  4019     06ED  034F               	decf	_power_lvl,w	;volatile
  4020     06EE  0450               	iorwf	_power_lvl+1,w	;volatile
  4021     06EF  1D03               	btfss	3,2
  4022     06F0  2EF2               	goto	u123_21
  4023     06F1  2EF3               	goto	u123_20
  4024     06F2                     u123_21:
  4025     06F2  2EF3               	goto	i1l152
  4026     06F3                     u123_20:
  4027     06F3                     i1l1616:
  4028     06F3                     i1l152:	
  4029                           ;task3/adjust_power.c: 30:         const float pulse_shift = 0.7 * 1/50 / 2;;task3/adjus
      +                          t_power.c: 31:         const unsigned long pulse_shift_us = (unsigned long)(pulse_shift 
      +                          * 1,000,000);;task3/adjust_power.c: 32:         _delay((unsigned long)((pulse_shift_us)*
      +                          ((4000000UL)/4000000.0)));
  4030                           ;task3/adjust_power.c: 33:     }
  4031                           
  4032                           
  4033                           ;task3/adjust_power.c: 35:     PORTCbits.RC7 = 1;
  4034     06F3  1283               	bcf	3,5	;RP0=0, select bank0
  4035     06F4  1303               	bcf	3,6	;RP1=0, select bank0
  4036     06F5  1787               	bsf	7,7	;volatile
  4037     06F6                     i1l1618:
  4038                           
  4039                           ;task3/adjust_power.c: 36:     _delay((unsigned long)((20)*((4000000UL)/4000000.0)));
  4040     06F6  3006               	movlw	6
  4041     06F7  00F0               	movwf	??_pwr_pulse
  4042     06F8                     u128_27:
  4043     06F8  0BF0               	decfsz	??_pwr_pulse,f
  4044     06F9  2EF8               	goto	u128_27
  4045     06FA  0000               	nop
  4046     06FB                     i1l1620:
  4047                           
  4048                           ;task3/adjust_power.c: 37:     PORTCbits.RC7 = 0;
  4049     06FB  1283               	bcf	3,5	;RP0=0, select bank0
  4050     06FC  1303               	bcf	3,6	;RP1=0, select bank0
  4051     06FD  1387               	bcf	7,7	;volatile
  4052     06FE                     i1l151:
  4053     06FE  0008               	return
  4054     06FF                     __end_of_pwr_pulse:
  4055                           
  4056                           	psect	text28
  4057     06BF                     __ptext28:	
  4058 ;; *************** function _is_crossing_zero_point *****************
  4059 ;; Defined at:
  4060 ;;		line 43 in file "task2/zero_crossing.c"
  4061 ;; Parameters:    Size  Location     Type
  4062 ;;		None
  4063 ;; Auto vars:     Size  Location     Type
  4064 ;;		None
  4065 ;; Return value:  Size  Location     Type
  4066 ;;                  2   36[BANK0 ] int 
  4067 ;; Registers used:
  4068 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4069 ;; Tracked objects:
  4070 ;;		On entry : 0/0
  4071 ;;		On exit  : 0/0
  4072 ;;		Unchanged: 0/0
  4073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4074 ;;      Params:         0       2       0       0
  4075 ;;      Locals:         0       0       0       0
  4076 ;;      Temps:          0       2       0       0
  4077 ;;      Totals:         0       4       0       0
  4078 ;;Total ram usage:        4 bytes
  4079 ;; Hardware stack levels used: 1
  4080 ;; Hardware stack levels required when called: 2
  4081 ;; This function calls:
  4082 ;;		___fleq
  4083 ;;		_get_conversion_result
  4084 ;; This function is called by:
  4085 ;;		_isr
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089     06BF                     _is_crossing_zero_point:	
  4090                           ;psect for function _is_crossing_zero_point
  4091                           
  4092     06BF                     i1l1598:	
  4093                           ;incstack = 0
  4094                           ; Regs used in _is_crossing_zero_point: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4095                           
  4096                           
  4097                           ;task2/zero_crossing.c: 44:     return get_conversion_result() == 0;
  4098     06BF  118A  25FB  118A   	fcall	_get_conversion_result
  4099     06C2  1283               	bcf	3,5	;RP0=0, select bank0
  4100     06C3  1303               	bcf	3,6	;RP1=0, select bank0
  4101     06C4  0831               	movf	?_get_conversion_result+3,w
  4102     06C5  00BB               	movwf	___fleq@ff1+3
  4103     06C6  0830               	movf	?_get_conversion_result+2,w
  4104     06C7  00BA               	movwf	___fleq@ff1+2
  4105     06C8  082F               	movf	?_get_conversion_result+1,w
  4106     06C9  00B9               	movwf	___fleq@ff1+1
  4107     06CA  082E               	movf	?_get_conversion_result,w
  4108     06CB  00B8               	movwf	___fleq@ff1
  4109     06CC  3000               	movlw	0
  4110     06CD  00BF               	movwf	___fleq@ff2+3
  4111     06CE  3000               	movlw	0
  4112     06CF  00BE               	movwf	___fleq@ff2+2
  4113     06D0  3000               	movlw	0
  4114     06D1  00BD               	movwf	___fleq@ff2+1
  4115     06D2  3000               	movlw	0
  4116     06D3  00BC               	movwf	___fleq@ff2
  4117     06D4  118A  255E  118A   	fcall	___fleq
  4118     06D7  3000               	movlw	0
  4119     06D8  1803               	skipnc
  4120     06D9  3001               	movlw	1
  4121     06DA  1283               	bcf	3,5	;RP0=0, select bank0
  4122     06DB  1303               	bcf	3,6	;RP1=0, select bank0
  4123     06DC  00C6               	movwf	??_is_crossing_zero_point
  4124     06DD  01C7               	clrf	??_is_crossing_zero_point+1
  4125     06DE  0846               	movf	??_is_crossing_zero_point,w
  4126     06DF  00C4               	movwf	?_is_crossing_zero_point
  4127     06E0  0847               	movf	??_is_crossing_zero_point+1,w
  4128     06E1  00C5               	movwf	?_is_crossing_zero_point+1
  4129     06E2                     i1l122:
  4130     06E2  0008               	return
  4131     06E3                     __end_of_is_crossing_zero_point:
  4132                           
  4133                           	psect	text29
  4134     05FB                     __ptext29:	
  4135 ;; *************** function _get_conversion_result *****************
  4136 ;; Defined at:
  4137 ;;		line 35 in file "task2/zero_crossing.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;		None
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;  voltage         4   18[BANK0 ] float 
  4142 ;;  adc_res         2   22[BANK0 ] int 
  4143 ;; Return value:  Size  Location     Type
  4144 ;;                  4   14[BANK0 ] float 
  4145 ;; Registers used:
  4146 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4152 ;;      Params:         0       4       0       0
  4153 ;;      Locals:         0       6       0       0
  4154 ;;      Temps:          0       0       0       0
  4155 ;;      Totals:         0      10       0       0
  4156 ;;Total ram usage:       10 bytes
  4157 ;; Hardware stack levels used: 1
  4158 ;; Hardware stack levels required when called: 1
  4159 ;; This function calls:
  4160 ;;		___awdiv
  4161 ;;		___xxtofl
  4162 ;;		i1___wmul
  4163 ;; This function is called by:
  4164 ;;		_is_crossing_zero_point
  4165 ;; This function uses a non-reentrant model
  4166 ;;
  4167                           
  4168     05FB                     _get_conversion_result:	
  4169                           ;psect for function _get_conversion_result
  4170                           
  4171     05FB                     i1l1558:	
  4172                           ;incstack = 0
  4173                           ; Regs used in _get_conversion_result: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4174                           
  4175                           
  4176                           ;task2/zero_crossing.c: 36:     int adc_res = (ADRESH << 8) | ADRESL;
  4177     05FB  1283               	bcf	3,5	;RP0=0, select bank0
  4178     05FC  1303               	bcf	3,6	;RP1=0, select bank0
  4179     05FD  081E               	movf	30,w	;volatile
  4180     05FE  00B7               	movwf	get_conversion_result@adc_res+1
  4181     05FF  1683               	bsf	3,5	;RP0=1, select bank1
  4182     0600  1303               	bcf	3,6	;RP1=0, select bank1
  4183     0601  081E               	movf	30,w	;volatile
  4184     0602  1283               	bcf	3,5	;RP0=0, select bank0
  4185     0603  1303               	bcf	3,6	;RP1=0, select bank0
  4186     0604  00B6               	movwf	get_conversion_result@adc_res
  4187     0605                     i1l1560:
  4188                           
  4189                           ;task2/zero_crossing.c: 38:     float voltage = (adc_res * 5) / (2^10 - 1);
  4190     0605  3005               	movlw	5
  4191     0606  00F2               	movwf	i1___wmul@multiplicand
  4192     0607  3000               	movlw	0
  4193     0608  00F3               	movwf	i1___wmul@multiplicand+1
  4194     0609  0837               	movf	get_conversion_result@adc_res+1,w
  4195     060A  00F1               	movwf	i1___wmul@multiplier+1
  4196     060B  0836               	movf	get_conversion_result@adc_res,w
  4197     060C  00F0               	movwf	i1___wmul@multiplier
  4198     060D  118A  269A  118A   	fcall	i1___wmul
  4199     0610  0871               	movf	?i1___wmul+1,w
  4200     0611  00F9               	movwf	___awdiv@dividend+1
  4201     0612  0870               	movf	?i1___wmul,w
  4202     0613  00F8               	movwf	___awdiv@dividend
  4203     0614  300B               	movlw	11
  4204     0615  00F6               	movwf	___awdiv@divisor
  4205     0616  3000               	movlw	0
  4206     0617  00F7               	movwf	___awdiv@divisor+1
  4207     0618  118A  24A1  118A   	fcall	___awdiv
  4208     061B  0876               	movf	?___awdiv,w
  4209     061C  1283               	bcf	3,5	;RP0=0, select bank0
  4210     061D  1303               	bcf	3,6	;RP1=0, select bank0
  4211     061E  00A0               	movwf	___xxtofl@val
  4212     061F  0877               	movf	?___awdiv+1,w
  4213     0620  00A1               	movwf	___xxtofl@val+1
  4214     0621  3000               	movlw	0
  4215     0622  1BA1               	btfsc	___xxtofl@val+1,7
  4216     0623  30FF               	movlw	255
  4217     0624  00A2               	movwf	___xxtofl@val+2
  4218     0625  00A3               	movwf	___xxtofl@val+3
  4219     0626  3001               	movlw	1
  4220     0627  118A  22C4  118A   	fcall	___xxtofl
  4221     062A  1283               	bcf	3,5	;RP0=0, select bank0
  4222     062B  1303               	bcf	3,6	;RP1=0, select bank0
  4223     062C  0823               	movf	?___xxtofl+3,w
  4224     062D  00B5               	movwf	get_conversion_result@voltage+3
  4225     062E  0822               	movf	?___xxtofl+2,w
  4226     062F  00B4               	movwf	get_conversion_result@voltage+2
  4227     0630  0821               	movf	?___xxtofl+1,w
  4228     0631  00B3               	movwf	get_conversion_result@voltage+1
  4229     0632  0820               	movf	?___xxtofl,w
  4230     0633  00B2               	movwf	get_conversion_result@voltage
  4231     0634                     i1l1562:
  4232                           
  4233                           ;task2/zero_crossing.c: 40:     return voltage;
  4234     0634  0835               	movf	get_conversion_result@voltage+3,w
  4235     0635  00B1               	movwf	?_get_conversion_result+3
  4236     0636  0834               	movf	get_conversion_result@voltage+2,w
  4237     0637  00B0               	movwf	?_get_conversion_result+2
  4238     0638  0833               	movf	get_conversion_result@voltage+1,w
  4239     0639  00AF               	movwf	?_get_conversion_result+1
  4240     063A  0832               	movf	get_conversion_result@voltage,w
  4241     063B  00AE               	movwf	?_get_conversion_result
  4242     063C                     i1l119:
  4243     063C  0008               	return
  4244     063D                     __end_of_get_conversion_result:
  4245                           
  4246                           	psect	text30
  4247     069A                     __ptext30:	
  4248 ;; *************** function i1___wmul *****************
  4249 ;; Defined at:
  4250 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;  multiplier      2    0[COMMON] unsigned int 
  4253 ;;  multiplicand    2    2[COMMON] unsigned int 
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;  product         2    4[COMMON] unsigned int 
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  2    0[COMMON] unsigned int 
  4258 ;; Registers used:
  4259 ;;		wreg, status,2, status,0
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4265 ;;      Params:         4       0       0       0
  4266 ;;      Locals:         2       0       0       0
  4267 ;;      Temps:          0       0       0       0
  4268 ;;      Totals:         6       0       0       0
  4269 ;;Total ram usage:        6 bytes
  4270 ;; Hardware stack levels used: 1
  4271 ;; This function calls:
  4272 ;;		Nothing
  4273 ;; This function is called by:
  4274 ;;		_get_conversion_result
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           
  4278     069A                     i1___wmul:	
  4279                           ;psect for function i1___wmul
  4280                           
  4281     069A                     i1l1474:	
  4282                           ;incstack = 0
  4283                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  4284                           
  4285     069A  01F4               	clrf	i1___wmul@product
  4286     069B  01F5               	clrf	i1___wmul@product+1
  4287     069C                     i1l1476:
  4288     069C  1C70               	btfss	i1___wmul@multiplier,0
  4289     069D  2E9F               	goto	u109_21
  4290     069E  2EA0               	goto	u109_20
  4291     069F                     u109_21:
  4292     069F  2EA6               	goto	i1l272
  4293     06A0                     u109_20:
  4294     06A0                     i1l1478:
  4295     06A0  0872               	movf	i1___wmul@multiplicand,w
  4296     06A1  07F4               	addwf	i1___wmul@product,f
  4297     06A2  1803               	skipnc
  4298     06A3  0AF5               	incf	i1___wmul@product+1,f
  4299     06A4  0873               	movf	i1___wmul@multiplicand+1,w
  4300     06A5  07F5               	addwf	i1___wmul@product+1,f
  4301     06A6                     i1l272:
  4302     06A6  3001               	movlw	1
  4303     06A7                     u110_25:
  4304     06A7  1003               	clrc
  4305     06A8  0DF2               	rlf	i1___wmul@multiplicand,f
  4306     06A9  0DF3               	rlf	i1___wmul@multiplicand+1,f
  4307     06AA  3EFF               	addlw	-1
  4308     06AB  1D03               	skipz
  4309     06AC  2EA7               	goto	u110_25
  4310     06AD                     i1l1480:
  4311     06AD  3001               	movlw	1
  4312     06AE                     u111_25:
  4313     06AE  1003               	clrc
  4314     06AF  0CF1               	rrf	i1___wmul@multiplier+1,f
  4315     06B0  0CF0               	rrf	i1___wmul@multiplier,f
  4316     06B1  3EFF               	addlw	-1
  4317     06B2  1D03               	skipz
  4318     06B3  2EAE               	goto	u111_25
  4319     06B4                     i1l1482:
  4320     06B4  0870               	movf	i1___wmul@multiplier,w
  4321     06B5  0471               	iorwf	i1___wmul@multiplier+1,w
  4322     06B6  1D03               	btfss	3,2
  4323     06B7  2EB9               	goto	u112_21
  4324     06B8  2EBA               	goto	u112_20
  4325     06B9                     u112_21:
  4326     06B9  2E9C               	goto	i1l1476
  4327     06BA                     u112_20:
  4328     06BA                     i1l1484:
  4329     06BA  0875               	movf	i1___wmul@product+1,w
  4330     06BB  00F1               	movwf	?i1___wmul+1
  4331     06BC  0874               	movf	i1___wmul@product,w
  4332     06BD  00F0               	movwf	?i1___wmul
  4333     06BE                     i1l274:
  4334     06BE  0008               	return
  4335     06BF                     __end_ofi1___wmul:
  4336                           
  4337                           	psect	text31
  4338     02C4                     __ptext31:	
  4339 ;; *************** function ___xxtofl *****************
  4340 ;; Defined at:
  4341 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;  sign            1    wreg     unsigned char 
  4344 ;;  val             4    0[BANK0 ] long 
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;  sign            1    8[BANK0 ] unsigned char 
  4347 ;;  arg             4   10[BANK0 ] unsigned long 
  4348 ;;  exp             1    9[BANK0 ] unsigned char 
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  4    0[BANK0 ] unsigned char 
  4351 ;; Registers used:
  4352 ;;		wreg, status,2, status,0, btemp+1
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4358 ;;      Params:         0       4       0       0
  4359 ;;      Locals:         0       6       0       0
  4360 ;;      Temps:          0       4       0       0
  4361 ;;      Totals:         0      14       0       0
  4362 ;;Total ram usage:       14 bytes
  4363 ;; Hardware stack levels used: 1
  4364 ;; This function calls:
  4365 ;;		Nothing
  4366 ;; This function is called by:
  4367 ;;		_get_conversion_result
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           
  4371     02C4                     ___xxtofl:	
  4372                           ;psect for function ___xxtofl
  4373                           
  4374                           
  4375                           ;incstack = 0
  4376                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  4377                           ;___xxtofl@sign stored from wreg
  4378     02C4  1283               	bcf	3,5	;RP0=0, select bank0
  4379     02C5  1303               	bcf	3,6	;RP1=0, select bank0
  4380     02C6  00A8               	movwf	___xxtofl@sign
  4381     02C7                     i1l1424:
  4382     02C7  0828               	movf	___xxtofl@sign,w
  4383     02C8  1903               	btfsc	3,2
  4384     02C9  2ACB               	goto	u95_21
  4385     02CA  2ACC               	goto	u95_20
  4386     02CB                     u95_21:
  4387     02CB  2AE0               	goto	i1l1430
  4388     02CC                     u95_20:
  4389     02CC                     i1l1426:
  4390     02CC  1FA3               	btfss	___xxtofl@val+3,7
  4391     02CD  2ACF               	goto	u96_21
  4392     02CE  2AD0               	goto	u96_20
  4393     02CF                     u96_21:
  4394     02CF  2AE0               	goto	i1l1430
  4395     02D0                     u96_20:
  4396     02D0                     i1l1428:
  4397     02D0  0920               	comf	___xxtofl@val,w
  4398     02D1  00AA               	movwf	___xxtofl@arg
  4399     02D2  0921               	comf	___xxtofl@val+1,w
  4400     02D3  00AB               	movwf	___xxtofl@arg+1
  4401     02D4  0922               	comf	___xxtofl@val+2,w
  4402     02D5  00AC               	movwf	___xxtofl@arg+2
  4403     02D6  0923               	comf	___xxtofl@val+3,w
  4404     02D7  00AD               	movwf	___xxtofl@arg+3
  4405     02D8  0AAA               	incf	___xxtofl@arg,f
  4406     02D9  1903               	skipnz
  4407     02DA  0AAB               	incf	___xxtofl@arg+1,f
  4408     02DB  1903               	skipnz
  4409     02DC  0AAC               	incf	___xxtofl@arg+2,f
  4410     02DD  1903               	skipnz
  4411     02DE  0AAD               	incf	___xxtofl@arg+3,f
  4412     02DF  2AE8               	goto	i1l713
  4413     02E0                     i1l1430:
  4414     02E0  0823               	movf	___xxtofl@val+3,w
  4415     02E1  00AD               	movwf	___xxtofl@arg+3
  4416     02E2  0822               	movf	___xxtofl@val+2,w
  4417     02E3  00AC               	movwf	___xxtofl@arg+2
  4418     02E4  0821               	movf	___xxtofl@val+1,w
  4419     02E5  00AB               	movwf	___xxtofl@arg+1
  4420     02E6  0820               	movf	___xxtofl@val,w
  4421     02E7  00AA               	movwf	___xxtofl@arg
  4422     02E8                     i1l713:
  4423     02E8  0823               	movf	___xxtofl@val+3,w
  4424     02E9  0422               	iorwf	___xxtofl@val+2,w
  4425     02EA  0421               	iorwf	___xxtofl@val+1,w
  4426     02EB  0420               	iorwf	___xxtofl@val,w
  4427     02EC  1D03               	skipz
  4428     02ED  2AEF               	goto	u97_21
  4429     02EE  2AF0               	goto	u97_20
  4430     02EF                     u97_21:
  4431     02EF  2AF9               	goto	i1l1436
  4432     02F0                     u97_20:
  4433     02F0                     i1l1432:
  4434     02F0  3000               	movlw	0
  4435     02F1  00A3               	movwf	?___xxtofl+3
  4436     02F2  3000               	movlw	0
  4437     02F3  00A2               	movwf	?___xxtofl+2
  4438     02F4  3000               	movlw	0
  4439     02F5  00A1               	movwf	?___xxtofl+1
  4440     02F6  3000               	movlw	0
  4441     02F7  00A0               	movwf	?___xxtofl
  4442     02F8  2B7D               	goto	i1l715
  4443     02F9                     i1l1436:
  4444     02F9  3096               	movlw	150
  4445     02FA  00A9               	movwf	___xxtofl@exp
  4446     02FB  2B09               	goto	i1l1442
  4447     02FC                     i1l1438:
  4448     02FC  3001               	movlw	1
  4449     02FD  00FF               	movwf	btemp+1
  4450     02FE  087F               	movf	btemp+1,w
  4451     02FF  07A9               	addwf	___xxtofl@exp,f
  4452     0300                     i1l1440:
  4453     0300  3001               	movlw	1
  4454     0301                     u98_25:
  4455     0301  1003               	clrc
  4456     0302  0CAD               	rrf	___xxtofl@arg+3,f
  4457     0303  0CAC               	rrf	___xxtofl@arg+2,f
  4458     0304  0CAB               	rrf	___xxtofl@arg+1,f
  4459     0305  0CAA               	rrf	___xxtofl@arg,f
  4460     0306  3EFF               	addlw	-1
  4461     0307  1D03               	skipz
  4462     0308  2B01               	goto	u98_25
  4463     0309                     i1l1442:
  4464     0309  30FE               	movlw	254
  4465     030A  052D               	andwf	___xxtofl@arg+3,w
  4466     030B  1D03               	btfss	3,2
  4467     030C  2B0E               	goto	u99_21
  4468     030D  2B0F               	goto	u99_20
  4469     030E                     u99_21:
  4470     030E  2AFC               	goto	i1l1438
  4471     030F                     u99_20:
  4472     030F  2B2B               	goto	i1l1450
  4473     0310                     i1l1444:
  4474     0310  3001               	movlw	1
  4475     0311  00FF               	movwf	btemp+1
  4476     0312  087F               	movf	btemp+1,w
  4477     0313  07A9               	addwf	___xxtofl@exp,f
  4478     0314                     i1l1446:
  4479     0314  3001               	movlw	1
  4480     0315  07AA               	addwf	___xxtofl@arg,f
  4481     0316  3000               	movlw	0
  4482     0317  1803               	skipnc
  4483     0318  3001               	movlw	1
  4484     0319  07AB               	addwf	___xxtofl@arg+1,f
  4485     031A  3000               	movlw	0
  4486     031B  1803               	skipnc
  4487     031C  3001               	movlw	1
  4488     031D  07AC               	addwf	___xxtofl@arg+2,f
  4489     031E  3000               	movlw	0
  4490     031F  1803               	skipnc
  4491     0320  3001               	movlw	1
  4492     0321  07AD               	addwf	___xxtofl@arg+3,f
  4493     0322                     i1l1448:
  4494     0322  3001               	movlw	1
  4495     0323                     u100_25:
  4496     0323  1003               	clrc
  4497     0324  0CAD               	rrf	___xxtofl@arg+3,f
  4498     0325  0CAC               	rrf	___xxtofl@arg+2,f
  4499     0326  0CAB               	rrf	___xxtofl@arg+1,f
  4500     0327  0CAA               	rrf	___xxtofl@arg,f
  4501     0328  3EFF               	addlw	-1
  4502     0329  1D03               	skipz
  4503     032A  2B23               	goto	u100_25
  4504     032B                     i1l1450:
  4505     032B  30FF               	movlw	255
  4506     032C  052D               	andwf	___xxtofl@arg+3,w
  4507     032D  1D03               	btfss	3,2
  4508     032E  2B30               	goto	u101_21
  4509     032F  2B31               	goto	u101_20
  4510     0330                     u101_21:
  4511     0330  2B10               	goto	i1l1444
  4512     0331                     u101_20:
  4513     0331  2B3D               	goto	i1l1454
  4514     0332                     i1l1452:
  4515     0332  3001               	movlw	1
  4516     0333  02A9               	subwf	___xxtofl@exp,f
  4517     0334  3001               	movlw	1
  4518     0335  00A4               	movwf	??___xxtofl
  4519     0336                     u102_25:
  4520     0336  1003               	clrc
  4521     0337  0DAA               	rlf	___xxtofl@arg,f
  4522     0338  0DAB               	rlf	___xxtofl@arg+1,f
  4523     0339  0DAC               	rlf	___xxtofl@arg+2,f
  4524     033A  0DAD               	rlf	___xxtofl@arg+3,f
  4525     033B  0BA4               	decfsz	??___xxtofl,f
  4526     033C  2B36               	goto	u102_25
  4527     033D                     i1l1454:
  4528     033D  1BAC               	btfsc	___xxtofl@arg+2,7
  4529     033E  2B40               	goto	u103_21
  4530     033F  2B41               	goto	u103_20
  4531     0340                     u103_21:
  4532     0340  2B47               	goto	i1l726
  4533     0341                     u103_20:
  4534     0341                     i1l1456:
  4535     0341  3002               	movlw	2
  4536     0342  0229               	subwf	___xxtofl@exp,w
  4537     0343  1803               	skipnc
  4538     0344  2B46               	goto	u104_21
  4539     0345  2B47               	goto	u104_20
  4540     0346                     u104_21:
  4541     0346  2B32               	goto	i1l1452
  4542     0347                     u104_20:
  4543     0347                     i1l726:
  4544     0347  1829               	btfsc	___xxtofl@exp,0
  4545     0348  2B4A               	goto	u105_21
  4546     0349  2B4B               	goto	u105_20
  4547     034A                     u105_21:
  4548     034A  2B53               	goto	i1l727
  4549     034B                     u105_20:
  4550     034B                     i1l1458:
  4551     034B  30FF               	movlw	255
  4552     034C  05AA               	andwf	___xxtofl@arg,f
  4553     034D  30FF               	movlw	255
  4554     034E  05AB               	andwf	___xxtofl@arg+1,f
  4555     034F  307F               	movlw	127
  4556     0350  05AC               	andwf	___xxtofl@arg+2,f
  4557     0351  30FF               	movlw	255
  4558     0352  05AD               	andwf	___xxtofl@arg+3,f
  4559     0353                     i1l727:
  4560     0353  1003               	clrc
  4561     0354  0CA9               	rrf	___xxtofl@exp,f
  4562     0355                     i1l1460:
  4563     0355  0829               	movf	___xxtofl@exp,w
  4564     0356  00A4               	movwf	??___xxtofl
  4565     0357  01A5               	clrf	??___xxtofl+1
  4566     0358  01A6               	clrf	??___xxtofl+2
  4567     0359  01A7               	clrf	??___xxtofl+3
  4568     035A  3018               	movlw	24
  4569     035B                     u106_25:
  4570     035B  1003               	clrc
  4571     035C  0DA4               	rlf	??___xxtofl,f
  4572     035D  0DA5               	rlf	??___xxtofl+1,f
  4573     035E  0DA6               	rlf	??___xxtofl+2,f
  4574     035F  0DA7               	rlf	??___xxtofl+3,f
  4575     0360                     u106_20:
  4576     0360  3EFF               	addlw	-1
  4577     0361  1D03               	skipz
  4578     0362  2B5B               	goto	u106_25
  4579     0363  0824               	movf	??___xxtofl,w
  4580     0364  04AA               	iorwf	___xxtofl@arg,f
  4581     0365  0825               	movf	??___xxtofl+1,w
  4582     0366  04AB               	iorwf	___xxtofl@arg+1,f
  4583     0367  0826               	movf	??___xxtofl+2,w
  4584     0368  04AC               	iorwf	___xxtofl@arg+2,f
  4585     0369  0827               	movf	??___xxtofl+3,w
  4586     036A  04AD               	iorwf	___xxtofl@arg+3,f
  4587     036B                     i1l1462:
  4588     036B  0828               	movf	___xxtofl@sign,w
  4589     036C  1903               	btfsc	3,2
  4590     036D  2B6F               	goto	u107_21
  4591     036E  2B70               	goto	u107_20
  4592     036F                     u107_21:
  4593     036F  2B75               	goto	i1l1468
  4594     0370                     u107_20:
  4595     0370                     i1l1464:
  4596     0370  1FA3               	btfss	___xxtofl@val+3,7
  4597     0371  2B73               	goto	u108_21
  4598     0372  2B74               	goto	u108_20
  4599     0373                     u108_21:
  4600     0373  2B75               	goto	i1l1468
  4601     0374                     u108_20:
  4602     0374                     i1l1466:
  4603     0374  17AD               	bsf	___xxtofl@arg+3,7
  4604     0375                     i1l1468:
  4605     0375  082D               	movf	___xxtofl@arg+3,w
  4606     0376  00A3               	movwf	?___xxtofl+3
  4607     0377  082C               	movf	___xxtofl@arg+2,w
  4608     0378  00A2               	movwf	?___xxtofl+2
  4609     0379  082B               	movf	___xxtofl@arg+1,w
  4610     037A  00A1               	movwf	?___xxtofl+1
  4611     037B  082A               	movf	___xxtofl@arg,w
  4612     037C  00A0               	movwf	?___xxtofl
  4613     037D                     i1l715:
  4614     037D  0008               	return
  4615     037E                     __end_of___xxtofl:
  4616                           
  4617                           	psect	text32
  4618     04A1                     __ptext32:	
  4619 ;; *************** function ___awdiv *****************
  4620 ;; Defined at:
  4621 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  4622 ;; Parameters:    Size  Location     Type
  4623 ;;  divisor         2    6[COMMON] int 
  4624 ;;  dividend        2    8[COMMON] int 
  4625 ;; Auto vars:     Size  Location     Type
  4626 ;;  quotient        2   12[COMMON] int 
  4627 ;;  sign            1   11[COMMON] unsigned char 
  4628 ;;  counter         1   10[COMMON] unsigned char 
  4629 ;; Return value:  Size  Location     Type
  4630 ;;                  2    6[COMMON] int 
  4631 ;; Registers used:
  4632 ;;		wreg, status,2, status,0, btemp+1
  4633 ;; Tracked objects:
  4634 ;;		On entry : 0/0
  4635 ;;		On exit  : 0/0
  4636 ;;		Unchanged: 0/0
  4637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4638 ;;      Params:         4       0       0       0
  4639 ;;      Locals:         4       0       0       0
  4640 ;;      Temps:          0       0       0       0
  4641 ;;      Totals:         8       0       0       0
  4642 ;;Total ram usage:        8 bytes
  4643 ;; Hardware stack levels used: 1
  4644 ;; This function calls:
  4645 ;;		Nothing
  4646 ;; This function is called by:
  4647 ;;		_get_conversion_result
  4648 ;; This function uses a non-reentrant model
  4649 ;;
  4650                           
  4651     04A1                     ___awdiv:	
  4652                           ;psect for function ___awdiv
  4653                           
  4654     04A1                     i1l1380:	
  4655                           ;incstack = 0
  4656                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  4657                           
  4658     04A1  01FB               	clrf	___awdiv@sign
  4659     04A2                     i1l1382:
  4660     04A2  1FF7               	btfss	___awdiv@divisor+1,7
  4661     04A3  2CA5               	goto	u85_21
  4662     04A4  2CA6               	goto	u85_20
  4663     04A5                     u85_21:
  4664     04A5  2CAD               	goto	i1l1388
  4665     04A6                     u85_20:
  4666     04A6                     i1l1384:
  4667     04A6  09F6               	comf	___awdiv@divisor,f
  4668     04A7  09F7               	comf	___awdiv@divisor+1,f
  4669     04A8  0AF6               	incf	___awdiv@divisor,f
  4670     04A9  1903               	skipnz
  4671     04AA  0AF7               	incf	___awdiv@divisor+1,f
  4672     04AB                     i1l1386:
  4673     04AB  01FB               	clrf	___awdiv@sign
  4674     04AC  0AFB               	incf	___awdiv@sign,f
  4675     04AD                     i1l1388:
  4676     04AD  1FF9               	btfss	___awdiv@dividend+1,7
  4677     04AE  2CB0               	goto	u86_21
  4678     04AF  2CB1               	goto	u86_20
  4679     04B0                     u86_21:
  4680     04B0  2CBA               	goto	i1l1394
  4681     04B1                     u86_20:
  4682     04B1                     i1l1390:
  4683     04B1  09F8               	comf	___awdiv@dividend,f
  4684     04B2  09F9               	comf	___awdiv@dividend+1,f
  4685     04B3  0AF8               	incf	___awdiv@dividend,f
  4686     04B4  1903               	skipnz
  4687     04B5  0AF9               	incf	___awdiv@dividend+1,f
  4688     04B6                     i1l1392:
  4689     04B6  3001               	movlw	1
  4690     04B7  00FF               	movwf	btemp+1
  4691     04B8  087F               	movf	btemp+1,w
  4692     04B9  06FB               	xorwf	___awdiv@sign,f
  4693     04BA                     i1l1394:
  4694     04BA  01FC               	clrf	___awdiv@quotient
  4695     04BB  01FD               	clrf	___awdiv@quotient+1
  4696     04BC                     i1l1396:
  4697     04BC  0876               	movf	___awdiv@divisor,w
  4698     04BD  0477               	iorwf	___awdiv@divisor+1,w
  4699     04BE  1903               	btfsc	3,2
  4700     04BF  2CC1               	goto	u87_21
  4701     04C0  2CC2               	goto	u87_20
  4702     04C1                     u87_21:
  4703     04C1  2CF9               	goto	i1l1416
  4704     04C2                     u87_20:
  4705     04C2                     i1l1398:
  4706     04C2  01FA               	clrf	___awdiv@counter
  4707     04C3  0AFA               	incf	___awdiv@counter,f
  4708     04C4  2CD0               	goto	i1l1404
  4709     04C5                     i1l1400:
  4710     04C5  3001               	movlw	1
  4711     04C6                     u88_25:
  4712     04C6  1003               	clrc
  4713     04C7  0DF6               	rlf	___awdiv@divisor,f
  4714     04C8  0DF7               	rlf	___awdiv@divisor+1,f
  4715     04C9  3EFF               	addlw	-1
  4716     04CA  1D03               	skipz
  4717     04CB  2CC6               	goto	u88_25
  4718     04CC                     i1l1402:
  4719     04CC  3001               	movlw	1
  4720     04CD  00FF               	movwf	btemp+1
  4721     04CE  087F               	movf	btemp+1,w
  4722     04CF  07FA               	addwf	___awdiv@counter,f
  4723     04D0                     i1l1404:
  4724     04D0  1FF7               	btfss	___awdiv@divisor+1,7
  4725     04D1  2CD3               	goto	u89_21
  4726     04D2  2CD4               	goto	u89_20
  4727     04D3                     u89_21:
  4728     04D3  2CC5               	goto	i1l1400
  4729     04D4                     u89_20:
  4730     04D4                     i1l1406:
  4731     04D4  3001               	movlw	1
  4732     04D5                     u90_25:
  4733     04D5  1003               	clrc
  4734     04D6  0DFC               	rlf	___awdiv@quotient,f
  4735     04D7  0DFD               	rlf	___awdiv@quotient+1,f
  4736     04D8  3EFF               	addlw	-1
  4737     04D9  1D03               	skipz
  4738     04DA  2CD5               	goto	u90_25
  4739     04DB  0877               	movf	___awdiv@divisor+1,w
  4740     04DC  0279               	subwf	___awdiv@dividend+1,w
  4741     04DD  1D03               	skipz
  4742     04DE  2CE1               	goto	u91_25
  4743     04DF  0876               	movf	___awdiv@divisor,w
  4744     04E0  0278               	subwf	___awdiv@dividend,w
  4745     04E1                     u91_25:
  4746     04E1  1C03               	skipc
  4747     04E2  2CE4               	goto	u91_21
  4748     04E3  2CE5               	goto	u91_20
  4749     04E4                     u91_21:
  4750     04E4  2CEC               	goto	i1l1412
  4751     04E5                     u91_20:
  4752     04E5                     i1l1408:
  4753     04E5  0876               	movf	___awdiv@divisor,w
  4754     04E6  02F8               	subwf	___awdiv@dividend,f
  4755     04E7  0877               	movf	___awdiv@divisor+1,w
  4756     04E8  1C03               	skipc
  4757     04E9  03F9               	decf	___awdiv@dividend+1,f
  4758     04EA  02F9               	subwf	___awdiv@dividend+1,f
  4759     04EB                     i1l1410:
  4760     04EB  147C               	bsf	___awdiv@quotient,0
  4761     04EC                     i1l1412:
  4762     04EC  3001               	movlw	1
  4763     04ED                     u92_25:
  4764     04ED  1003               	clrc
  4765     04EE  0CF7               	rrf	___awdiv@divisor+1,f
  4766     04EF  0CF6               	rrf	___awdiv@divisor,f
  4767     04F0  3EFF               	addlw	-1
  4768     04F1  1D03               	skipz
  4769     04F2  2CED               	goto	u92_25
  4770     04F3                     i1l1414:
  4771     04F3  3001               	movlw	1
  4772     04F4  02FA               	subwf	___awdiv@counter,f
  4773     04F5  1D03               	btfss	3,2
  4774     04F6  2CF8               	goto	u93_21
  4775     04F7  2CF9               	goto	u93_20
  4776     04F8                     u93_21:
  4777     04F8  2CD4               	goto	i1l1406
  4778     04F9                     u93_20:
  4779     04F9                     i1l1416:
  4780     04F9  087B               	movf	___awdiv@sign,w
  4781     04FA  1903               	btfsc	3,2
  4782     04FB  2CFD               	goto	u94_21
  4783     04FC  2CFE               	goto	u94_20
  4784     04FD                     u94_21:
  4785     04FD  2D03               	goto	i1l1420
  4786     04FE                     u94_20:
  4787     04FE                     i1l1418:
  4788     04FE  09FC               	comf	___awdiv@quotient,f
  4789     04FF  09FD               	comf	___awdiv@quotient+1,f
  4790     0500  0AFC               	incf	___awdiv@quotient,f
  4791     0501  1903               	skipnz
  4792     0502  0AFD               	incf	___awdiv@quotient+1,f
  4793     0503                     i1l1420:
  4794     0503  087D               	movf	___awdiv@quotient+1,w
  4795     0504  00F7               	movwf	?___awdiv+1
  4796     0505  087C               	movf	___awdiv@quotient,w
  4797     0506  00F6               	movwf	?___awdiv
  4798     0507                     i1l425:
  4799     0507  0008               	return
  4800     0508                     __end_of___awdiv:
  4801                           
  4802                           	psect	text33
  4803     055E                     __ptext33:	
  4804 ;; *************** function ___fleq *****************
  4805 ;; Defined at:
  4806 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;  ff1             4   24[BANK0 ] int 
  4809 ;;  ff2             4   28[BANK0 ] int 
  4810 ;; Auto vars:     Size  Location     Type
  4811 ;;		None
  4812 ;; Return value:  Size  Location     Type
  4813 ;;		None               void
  4814 ;; Registers used:
  4815 ;;		wreg, status,2, status,0
  4816 ;; Tracked objects:
  4817 ;;		On entry : 0/0
  4818 ;;		On exit  : 0/0
  4819 ;;		Unchanged: 0/0
  4820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4821 ;;      Params:         0       8       0       0
  4822 ;;      Locals:         0       0       0       0
  4823 ;;      Temps:          0       4       0       0
  4824 ;;      Totals:         0      12       0       0
  4825 ;;Total ram usage:       12 bytes
  4826 ;; Hardware stack levels used: 1
  4827 ;; This function calls:
  4828 ;;		Nothing
  4829 ;; This function is called by:
  4830 ;;		_is_crossing_zero_point
  4831 ;; This function uses a non-reentrant model
  4832 ;;
  4833                           
  4834     055E                     ___fleq:	
  4835                           ;psect for function ___fleq
  4836                           
  4837     055E                     i1l1572:	
  4838                           ;incstack = 0
  4839                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  4840                           
  4841     055E  3000               	movlw	0
  4842     055F  1283               	bcf	3,5	;RP0=0, select bank0
  4843     0560  1303               	bcf	3,6	;RP1=0, select bank0
  4844     0561  0538               	andwf	___fleq@ff1,w
  4845     0562  00C0               	movwf	??___fleq
  4846     0563  3000               	movlw	0
  4847     0564  0539               	andwf	___fleq@ff1+1,w
  4848     0565  00C1               	movwf	??___fleq+1
  4849     0566  3080               	movlw	128
  4850     0567  053A               	andwf	___fleq@ff1+2,w
  4851     0568  00C2               	movwf	??___fleq+2
  4852     0569  307F               	movlw	127
  4853     056A  053B               	andwf	___fleq@ff1+3,w
  4854     056B  00C3               	movwf	??___fleq+3
  4855     056C  0843               	movf	??___fleq+3,w
  4856     056D  0442               	iorwf	??___fleq+2,w
  4857     056E  0441               	iorwf	??___fleq+1,w
  4858     056F  0440               	iorwf	??___fleq,w
  4859     0570  1D03               	skipz
  4860     0571  2D73               	goto	u116_21
  4861     0572  2D74               	goto	u116_20
  4862     0573                     u116_21:
  4863     0573  2D7C               	goto	i1l441
  4864     0574                     u116_20:
  4865     0574                     i1l1574:
  4866     0574  3000               	movlw	0
  4867     0575  00BB               	movwf	___fleq@ff1+3
  4868     0576  3000               	movlw	0
  4869     0577  00BA               	movwf	___fleq@ff1+2
  4870     0578  3000               	movlw	0
  4871     0579  00B9               	movwf	___fleq@ff1+1
  4872     057A  3000               	movlw	0
  4873     057B  00B8               	movwf	___fleq@ff1
  4874     057C                     i1l441:
  4875     057C  3000               	movlw	0
  4876     057D  053C               	andwf	___fleq@ff2,w
  4877     057E  00C0               	movwf	??___fleq
  4878     057F  3000               	movlw	0
  4879     0580  053D               	andwf	___fleq@ff2+1,w
  4880     0581  00C1               	movwf	??___fleq+1
  4881     0582  3080               	movlw	128
  4882     0583  053E               	andwf	___fleq@ff2+2,w
  4883     0584  00C2               	movwf	??___fleq+2
  4884     0585  307F               	movlw	127
  4885     0586  053F               	andwf	___fleq@ff2+3,w
  4886     0587  00C3               	movwf	??___fleq+3
  4887     0588  0843               	movf	??___fleq+3,w
  4888     0589  0442               	iorwf	??___fleq+2,w
  4889     058A  0441               	iorwf	??___fleq+1,w
  4890     058B  0440               	iorwf	??___fleq,w
  4891     058C  1D03               	skipz
  4892     058D  2D8F               	goto	u117_21
  4893     058E  2D90               	goto	u117_20
  4894     058F                     u117_21:
  4895     058F  2D98               	goto	i1l442
  4896     0590                     u117_20:
  4897     0590                     i1l1576:
  4898     0590  3000               	movlw	0
  4899     0591  00BF               	movwf	___fleq@ff2+3
  4900     0592  3000               	movlw	0
  4901     0593  00BE               	movwf	___fleq@ff2+2
  4902     0594  3000               	movlw	0
  4903     0595  00BD               	movwf	___fleq@ff2+1
  4904     0596  3000               	movlw	0
  4905     0597  00BC               	movwf	___fleq@ff2
  4906     0598                     i1l442:
  4907     0598  083F               	movf	___fleq@ff2+3,w
  4908     0599  063B               	xorwf	___fleq@ff1+3,w
  4909     059A  1D03               	skipz
  4910     059B  2DA6               	goto	u118_25
  4911     059C  083E               	movf	___fleq@ff2+2,w
  4912     059D  063A               	xorwf	___fleq@ff1+2,w
  4913     059E  1D03               	skipz
  4914     059F  2DA6               	goto	u118_25
  4915     05A0  083D               	movf	___fleq@ff2+1,w
  4916     05A1  0639               	xorwf	___fleq@ff1+1,w
  4917     05A2  1D03               	skipz
  4918     05A3  2DA6               	goto	u118_25
  4919     05A4  083C               	movf	___fleq@ff2,w
  4920     05A5  0638               	xorwf	___fleq@ff1,w
  4921     05A6                     u118_25:
  4922     05A6  1903               	skipnz
  4923     05A7  2DA9               	goto	u118_21
  4924     05A8  2DAA               	goto	u118_20
  4925     05A9                     u118_21:
  4926     05A9  2DAC               	goto	i1l1580
  4927     05AA                     u118_20:
  4928     05AA                     i1l1578:
  4929     05AA  1003               	clrc
  4930     05AB  2DAD               	goto	i1l447
  4931     05AC                     i1l1580:
  4932     05AC  1403               	setc
  4933     05AD                     i1l447:
  4934     05AD  0008               	return
  4935     05AE                     __end_of___fleq:
  4936                           
  4937                           	psect	text34
  4938     0714                     __ptext34:	
  4939 ;; *************** function _is_adc_conversion_done *****************
  4940 ;; Defined at:
  4941 ;;		line 26 in file "task2/zero_crossing.c"
  4942 ;; Parameters:    Size  Location     Type
  4943 ;;		None
  4944 ;; Auto vars:     Size  Location     Type
  4945 ;;		None
  4946 ;; Return value:  Size  Location     Type
  4947 ;;                  2    0[COMMON] int 
  4948 ;; Registers used:
  4949 ;;		wreg, status,2
  4950 ;; Tracked objects:
  4951 ;;		On entry : 0/0
  4952 ;;		On exit  : 0/0
  4953 ;;		Unchanged: 0/0
  4954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4955 ;;      Params:         2       0       0       0
  4956 ;;      Locals:         1       0       0       0
  4957 ;;      Temps:          2       0       0       0
  4958 ;;      Totals:         5       0       0       0
  4959 ;;Total ram usage:        5 bytes
  4960 ;; Hardware stack levels used: 1
  4961 ;; This function calls:
  4962 ;;		Nothing
  4963 ;; This function is called by:
  4964 ;;		_isr
  4965 ;; This function uses a non-reentrant model
  4966 ;;
  4967                           
  4968     0714                     _is_adc_conversion_done:	
  4969                           ;psect for function _is_adc_conversion_done
  4970                           
  4971     0714                     i1l1586:	
  4972                           ;incstack = 0
  4973                           ; Regs used in _is_adc_conversion_done: [wreg+status,2]
  4974                           
  4975                           
  4976                           ;task2/zero_crossing.c: 27:     return ADCON0bits.ADON && PIR1bits.ADIF;
  4977     0714  01F4               	clrf	_is_adc_conversion_done$425
  4978     0715                     i1l1588:
  4979     0715  1283               	bcf	3,5	;RP0=0, select bank0
  4980     0716  1303               	bcf	3,6	;RP1=0, select bank0
  4981     0717  1C1F               	btfss	31,0	;volatile
  4982     0718  2F1A               	goto	u119_21
  4983     0719  2F1B               	goto	u119_20
  4984     071A                     u119_21:
  4985     071A  2F21               	goto	i1l1594
  4986     071B                     u119_20:
  4987     071B                     i1l1590:
  4988     071B  1F0C               	btfss	12,6	;volatile
  4989     071C  2F1E               	goto	u120_21
  4990     071D  2F1F               	goto	u120_20
  4991     071E                     u120_21:
  4992     071E  2F21               	goto	i1l1594
  4993     071F                     u120_20:
  4994     071F                     i1l1592:
  4995     071F  01F4               	clrf	_is_adc_conversion_done$425
  4996     0720  0AF4               	incf	_is_adc_conversion_done$425,f
  4997     0721                     i1l1594:
  4998     0721  0874               	movf	_is_adc_conversion_done$425,w
  4999     0722  00F2               	movwf	??_is_adc_conversion_done
  5000     0723  01F3               	clrf	??_is_adc_conversion_done+1
  5001     0724  0872               	movf	??_is_adc_conversion_done,w
  5002     0725  00F0               	movwf	?_is_adc_conversion_done
  5003     0726  0873               	movf	??_is_adc_conversion_done+1,w
  5004     0727  00F1               	movwf	?_is_adc_conversion_done+1
  5005     0728                     i1l113:
  5006     0728  0008               	return
  5007     0729                     __end_of_is_adc_conversion_done:
  5008     007E                     btemp	set	126	;btemp
  5009     007E                     wtemp0	set	126
  5010                           
  5011                           	psect	config
  5012                           
  5013                           ;Config register CONFIG @ 0x2007
  5014                           ;	Oscillator Selection bits
  5015                           ;	FOSC = INTRCIO, INTOSCIO oscillator: I/O function on RA4/OSC2/CLKOUT pin, I/O function
      +                           on RA5/OSC1/CLKIN
  5016                           ;	Watchdog Timer Enable bit
  5017                           ;	WDTE = 0x1, unprogrammed default
  5018                           ;	Power-up Timer Enable bit
  5019                           ;	PWRTE = 0x1, unprogrammed default
  5020                           ;	MCLR Pin Function Select bit
  5021                           ;	MCLRE = 0x1, unprogrammed default
  5022                           ;	Code Protection bit
  5023                           ;	CP = 0x1, unprogrammed default
  5024                           ;	Data Code Protection bit
  5025                           ;	CPD = 0x1, unprogrammed default
  5026                           ;	Brown-out Reset Selection bits
  5027                           ;	BOREN = 0x3, unprogrammed default
  5028                           ;	Internal External Switchover bit
  5029                           ;	IESO = 0x1, unprogrammed default
  5030                           ;	Fail-Safe Clock Monitor Enabled bit
  5031                           ;	FCMEN = 0x1, unprogrammed default
  5032     2007                     	org	8199
  5033     2007  3FFC               	dw	16380

Data Sizes:
    Strings     0
    Constant    8
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     43      49
    BANK1            80     53      62
    BANK2            80      0       0

Pointer List with Targets:

    blink@leds_info	PTR PTR struct . size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    blink@leds_info$GPIO_port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTB(SFR0[1]), PORTC(SFR0[1]), 

    blink@leds_info$TRIS_port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISA(SFR1[1]), TRISB(SFR1[1]), TRISC(SFR1[1]), 

    brkp	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __expand_heap@new_brkp	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __expand_heap@pn	PTR unsigned int  size(1) Largest target is 2
		 -> malloc@m(BANK1[2]), 

    free@c$.$.$next	PTR struct chunk size(1) Largest target is 0

    free@c$.$next	PTR struct chunk size(1) Largest target is 0

    __freelist	PTR struct chunk size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    __freelist$.$next	PTR struct chunk size(1) Largest target is 0

    ?_gather_LED_info$GPIO_port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTB(SFR0[1]), PORTC(SFR0[1]), 

    ?_gather_LED_info$TRIS_port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISA(SFR1[1]), TRISB(SFR1[1]), TRISC(SFR1[1]), 

    gather_LED_info@LED1	PTR struct . size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    gather_LED_info@LED1$GPIO_port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTB(SFR0[1]), PORTC(SFR0[1]), 

    gather_LED_info@LED1$TRIS_port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISA(SFR1[1]), TRISB(SFR1[1]), TRISC(SFR1[1]), 

    gather_LED_info@LED2	PTR struct . size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    gather_LED_info@LED2$GPIO_port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTB(SFR0[1]), PORTC(SFR0[1]), 

    gather_LED_info@LED2$TRIS_port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISA(SFR1[1]), TRISB(SFR1[1]), TRISC(SFR1[1]), 

    gather_LED_info@LED3	PTR struct . size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    gather_LED_info@LED3$GPIO_port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTB(SFR0[1]), PORTC(SFR0[1]), 

    gather_LED_info@LED3$TRIS_port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISA(SFR1[1]), TRISB(SFR1[1]), TRISC(SFR1[1]), 

    gather_LED_info@LED4	PTR struct . size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    gather_LED_info@LED4$GPIO_port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTB(SFR0[1]), PORTC(SFR0[1]), 

    gather_LED_info@LED4$TRIS_port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISA(SFR1[1]), TRISB(SFR1[1]), TRISC(SFR1[1]), 

    gather_LED_info@LED5	PTR struct . size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    gather_LED_info@LED5$GPIO_port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTB(SFR0[1]), PORTC(SFR0[1]), 

    gather_LED_info@LED5$TRIS_port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISA(SFR1[1]), TRISB(SFR1[1]), TRISC(SFR1[1]), 

    gather_LED_info@leds_info	PTR PTR struct . size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    gather_LED_info@leds_info$GPIO_port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTB(SFR0[1]), PORTC(SFR0[1]), 

    gather_LED_info@leds_info$TRIS_port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISA(SFR1[1]), TRISB(SFR1[1]), TRISC(SFR1[1]), 

    __heap_hi$GPIO_port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTB(SFR0[1]), PORTC(SFR0[1]), 

    __heap_hi$TRIS_port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISA(SFR1[1]), TRISB(SFR1[1]), TRISC(SFR1[1]), 

    led_off@led	PTR struct . size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    led_off@led$GPIO_port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTB(SFR0[1]), PORTC(SFR0[1]), 

    led_off@led$TRIS_port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISA(SFR1[1]), TRISB(SFR1[1]), TRISC(SFR1[1]), 

    led_on@led	PTR struct . size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    led_on@led$GPIO_port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTB(SFR0[1]), PORTC(SFR0[1]), 

    led_on@led$TRIS_port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISA(SFR1[1]), TRISB(SFR1[1]), TRISC(SFR1[1]), 

    malloc@cur	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@end	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@new	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@p	PTR void  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@sz	PTR unsigned int  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    S1021$next	PTR struct chunk size(1) Largest target is 0

    S107$GPIO_port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTB(SFR0[1]), PORTC(SFR0[1]), 

    S107$TRIS_port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISA(SFR1[1]), TRISB(SFR1[1]), TRISC(SFR1[1]), 

    ?___simple_search_fl$.$next	PTR struct chunk size(1) Largest target is 0

    __simple_search_fl@best	PTR struct chunk size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    __simple_search_fl@best$.$next	PTR struct chunk size(1) Largest target is 0

    __simple_search_fl@best_last	PTR struct chunk size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    __simple_search_fl@best_last$.$.$next	PTR struct chunk size(1) Largest target is 0

    __simple_search_fl@best_last$.$next	PTR struct chunk size(1) Largest target is 0

    __simple_search_fl@c	PTR struct chunk size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    __simple_search_fl@c$.$next	PTR struct chunk size(1) Largest target is 0

    __simple_search_fl@last	PTR struct chunk size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    __simple_search_fl@last$.$.$next	PTR struct chunk size(1) Largest target is 0

    __simple_search_fl@last$.$next	PTR struct chunk size(1) Largest target is 0

    __simple_search_fl@next	PTR struct chunk size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    __simple_search_fl@next$.$next	PTR struct chunk size(1) Largest target is 0

    __simple_search_fl@split	PTR struct chunk size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    __simple_search_fl@split$.$.$next	PTR struct chunk size(1) Largest target is 0

    __simple_search_fl@split$.$next	PTR struct chunk size(1) Largest target is 0

    sp____expand_heap	PTR void  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    sp____simple_search_fl	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sp____simple_search_fl$.$next	PTR struct chunk size(1) Largest target is 0

    sp__gather_LED_info	PTR PTR struct . size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    sp__gather_LED_info$GPIO_port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTB(SFR0[1]), PORTC(SFR0[1]), 

    sp__gather_LED_info$TRIS_port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISA(SFR1[1]), TRISB(SFR1[1]), TRISC(SFR1[1]), 

    sp__malloc	PTR void  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _set_state_according_to_pwr_btn->_is_pwr_btn_pressed
    _get_conversion_result->___awdiv
    ___xxtofl->___awdiv
    ___awdiv->i1___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->_is_crossing_zero_point
    _is_crossing_zero_point->___fleq
    _get_conversion_result->___xxtofl
    ___fleq->_get_conversion_result

Critical Paths under _main in BANK1

    _main->_blink
    _blink->_gather_LED_info
    _gather_LED_info->_malloc
    _malloc->___simple_search_fl

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3186
                              _blink
                       _global_setup
     _start_spectating_zero_crossing
 ---------------------------------------------------------------------------------
 (1) _start_spectating_zero_crossing                       0     0      0       0
                          _setup_ADC
                          _setup_RB5
               _start_adc_conversion
 ---------------------------------------------------------------------------------
 (2) _start_adc_conversion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setup_RB5                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setup_ADC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _global_setup                                         0     0      0       0
                          _setup_RC2
                          _setup_RC7
                      _turn_board_on
 ---------------------------------------------------------------------------------
 (2) _turn_board_on                                        0     0      0       0
                       _set_full_pwr
 ---------------------------------------------------------------------------------
 (3) _set_full_pwr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setup_RC7                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setup_RC2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blink                                                9     9      0    3186
                                             44 BANK1      9     9      0
                    _gather_LED_info
                            _led_off
                             _led_on
                         _setup_GPIO
 ---------------------------------------------------------------------------------
 (2) _setup_GPIO                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _led_on                                               9     7      2     200
                                              0 BANK1      9     7      2
 ---------------------------------------------------------------------------------
 (2) _led_off                                              7     5      2     156
                                              0 BANK1      7     5      2
 ---------------------------------------------------------------------------------
 (2) _gather_LED_info                                     16    16      0    2695
                                             28 BANK1     16    16      0
                             _malloc
 ---------------------------------------------------------------------------------
 (3) _malloc                                              14    12      2    2117
                                             14 BANK1     14    12      2
                      ___expand_heap
                 ___simple_search_fl
 ---------------------------------------------------------------------------------
 (4) ___simple_search_fl                                  14    12      2     915
                                              0 BANK1     14    12      2
 ---------------------------------------------------------------------------------
 (4) ___expand_heap                                        5     5      0     171
                                              0 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0    1371
                                             40 BANK0      3     3      0
             _is_adc_conversion_done
             _is_crossing_zero_point
                          _pwr_pulse
                _reset_adc_interrupt
     _set_state_according_to_pwr_btn
             i1_start_adc_conversion
 ---------------------------------------------------------------------------------
 (6) i1_start_adc_conversion                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _set_state_according_to_pwr_btn                       0     0      0       0
                 _is_pwr_btn_pressed
                     _turn_board_off
                    i1_turn_board_on
 ---------------------------------------------------------------------------------
 (7) i1_turn_board_on                                      0     0      0       0
                     i1_set_full_pwr
 ---------------------------------------------------------------------------------
 (8) i1_set_full_pwr                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _turn_board_off                                       0     0      0       0
                        _set_low_pwr
 ---------------------------------------------------------------------------------
 (8) _set_low_pwr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _is_pwr_btn_pressed                                   5     3      2       0
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _reset_adc_interrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _pwr_pulse                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _is_crossing_zero_point                               4     2      2    1347
                                             36 BANK0      4     2      2
                             ___fleq
              _get_conversion_result
 ---------------------------------------------------------------------------------
 (7) _get_conversion_result                               10     6      4    1079
                                             14 BANK0     10     6      4
                            ___awdiv
                           ___xxtofl
                           i1___wmul
 ---------------------------------------------------------------------------------
 (8) i1___wmul                                             6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___xxtofl                                            14    10      4     411
                                              0 BANK0     14    10      4
                            ___awdiv (ARG)
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     478
                                              6 COMMON     8     4      4
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     268
                                             24 BANK0     12     4      8
              _get_conversion_result (ARG)
 ---------------------------------------------------------------------------------
 (6) _is_adc_conversion_done                               5     3      2      24
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _blink
     _gather_LED_info
       _malloc
         ___expand_heap
         ___simple_search_fl
     _led_off
     _led_on
     _setup_GPIO
   _global_setup
     _setup_RC2
     _setup_RC7
     _turn_board_on
       _set_full_pwr
   _start_spectating_zero_crossing
     _setup_ADC
     _setup_RB5
     _start_adc_conversion

 _isr (ROOT)
   _is_adc_conversion_done
   _is_crossing_zero_point
     ___fleq
       _get_conversion_result (ARG)
         ___awdiv
           i1___wmul (ARG)
         ___xxtofl
           ___awdiv (ARG)
           i1___wmul (ARG)
         i1___wmul
     _get_conversion_result
   _pwr_pulse
   _reset_adc_interrupt
   _set_state_according_to_pwr_btn
     _is_pwr_btn_pressed
     _turn_board_off
       _set_low_pwr
     i1_turn_board_on
       i1_set_full_pwr
   i1_start_adc_conversion

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     2B      31       3       61.3%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50     35      3E       5       77.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0      7D       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0      7D      10        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Nov 12 14:19:12 2023

                __end_ofi1_set_full_pwr 07AD            get_conversion_result@voltage 0032  
                                     pc 0002                                      l40 075E  
                                    l34 076B                                      l71 055D  
                                    l39 075E                                      l65 01E5  
                                    l74 066E                                      l68 0794  
                                    l79 04A0                            ___awdiv@sign 007B  
                                    fsr 0004                        i1___wmul@product 0074  
                                   l102 077F                                     l105 0713  
                                   l108 07B0                                     l125 0775  
                                   l144 07A7                                     l138 0786  
                                   l163 07B4                                     l179 078D  
                                   l751 03FD                                     l743 038E  
                                   l770 05FA                                     l747 0433  
                                   l765 05C3                                     l749 0405  
                                   l784 0252                                     l776 02C3  
                     ??_gather_LED_info 00BC                                     u700 025E  
                                   u701 025D                                     u710 0263  
                                   u711 0262                                     u720 0281  
                                   u640 01F0                                     u800 03AB  
                                   u721 0280                                     u641 01EF  
                                   u801 03AA                                     u730 02B9  
                                   u650 0207                                     u810 03C4  
                                   u731 02B8                                     u651 0206  
                                   u811 03C3                                     u740 05BF  
                                   u660 020C                                     u820 03D6  
                                   u741 05BE                                     u661 020B  
                                   u821 03D5                                     u750 05CC  
                                   u670 0230                                     u830 03EE  
                                   u751 05CB                                     u671 022F  
                                   u655 0203                                     u831 03ED  
                                   u760 05E1                                     u680 0235  
                                   u840 03F9                                     u761 05E0  
                                   u681 0234                                     u841 03F8  
                                   u825 03D2                                     u770 05EB  
                                   u690 024D                                     u771 05EA  
                                   u691 024C                                     u675 022C  
                                   u780 0388                                     u845 03F5  
                                   u781 0387                                     u790 0397  
                                   u775 05E7                                     u695 0249  
                                   u791 0396                                     _isr 066F  
                                   fsr0 0004                                     indf 0000  
                 ?_start_adc_conversion 0070                                    l1300 05B1  
                                  l1310 05D8                                    l1302 05B9  
                                  l1320 05F2                                    l1312 05E1  
                                  l1304 05BF                                    l1240 01F0  
                                  l1314 05EB                                    l1306 05CC  
                                  l1250 020C                                    l1330 0397  
                                  l1316 05EF                                    l1308 05D0  
                                  l1260 0230                                    l1252 0217  
                                  l1244 01F2                                    l1236 01E6  
                                  l1340 03B2                                    l1332 039C  
                                  l1324 037E                                    l1500 0045  
                                  l1262 0235                                    l1254 021C  
                                  l1246 01F5                                    l1270 0259  
                                  l1238 01EB                                    l1350 03DE  
                                  l1342 03B2                                    l1334 03AB  
                                  l1326 0382                                    l1510 00CF  
                                  l1502 005C                                    l1280 029F  
                                  l1272 025E                                    l1248 0207  
                                  l1360 03F9                                    l1352 03E8  
                                  l1344 03BE                                    l1336 03AF  
                                  l1328 0388                                    l1520 013D  
                                  l1512 00E6                                    l1504 006E  
                                  l1290 02BC                                    l1282 02AC  
                                  l1274 0263                                    l1266 024E  
                                  l1258 021F                                    l1370 0421  
                                  l1362 0409                                    l1346 03C4  
                                  l1530 01BD                                    l1522 0182  
                                  l1514 0105                                    l1506 00B3  
                                  l1292 02C1                                    l1284 02B1  
                                  l1276 0281                                    l1268 0254  
                                  l1364 040D                                    l1348 03D6  
                                  l1372 042F                                    l1532 01CF  
                                  l1524 018F                                    l1516 0114  
                                  l1508 00C0                                    l1540 0791  
                                  l1278 0298                                    l1286 02B3  
                                  l1366 0417                                    l1358 03EF  
                                  l1534 01E1                                    l1526 0199  
                                  l1518 012B                                    l1550 0651  
                                  l1542 0508                                    l1630 0440  
                                  l1622 0761                                    l1288 02B9  
                                  l1368 041D                                    l1528 01AB  
                                  l1544 051C                                    l1640 046C  
                                  l1624 0762                                    l1552 0776  
                                  l1546 0541                                    l1538 078E  
                                  l1642 0493                                    l1626 0434  
                                  l1490 0780                                    l1378 07A3  
                                  l1554 06FF                                    l1548 063D  
                                  l1636 0442                                    l1628 0437  
                                  l1492 0787                                    l1556 0709  
                                  l1644 076C                                    l1638 0461  
                                  l1494 07B1                                    l1646 076F  
                                  l1662 0755                                    l1496 0027  
                                  l1488 07AD                                    l1648 0772  
                                  l1664 0758                                    l1498 0036  
                                  l1666 075B                                    ?_isr 0070  
                                  u1134 0522                                    u1135 0520  
                                  u1144 0547                                    u1240 04A0  
                                  u1145 0545                                    u1241 049F  
                                  u1154 0657                                    u1155 0655  
                                  u1245 049C                                    u1277 0467  
                                  i1l31 068F                                    _brkp 00D5  
                                  _main 0755                                    btemp 007E  
                           led_on@shift 00A7                                    start 000F  
                         ?_global_setup 0070                         ?i1_set_full_pwr 0070  
                                 ??_isr 0048                                   ?_main 0070  
                       __end_of___awdiv 0508                                   _ANSEL 011E  
                       ___awdiv@divisor 0076                                   i1l113 0728  
                                 i1l122 06E2                                   i1l116 07A2  
                                 i1l108 07B8                                   i1l141 079B  
                                 i1l119 063C                                   i1l151 06FE  
                                 i1l152 06F3                                   i1l144 07AC  
                                 i1l163 07BC                                   i1l182 0754  
                                 i1l166 07C0                                   i1l272 06A6  
                                 i1l441 057C                                   i1l425 0507  
                                 i1l442 0598                                   i1l274 06BE  
                                 i1l186 0739                                   i1l447 05AD  
                                 i1l713 02E8                                   i1l715 037D  
                                 i1l726 0347                                   i1l727 0353  
                       ___awdiv@counter 007A                                   _PORTA 0005  
                                 _PORTB 0006                                   _PORTC 0007  
                                 _TRISA 0085                                   _TRISB 0086  
                                 _TRISC 0087                                   u90_25 04D5  
                                 u91_20 04E5                                   u91_21 04E4  
                                 u91_25 04E1                                   u92_25 04ED  
                                 u93_20 04F9                                   u85_20 04A6  
                                 u93_21 04F8                                   u85_21 04A5  
                                 u94_20 04FE                                   u86_20 04B1  
                                 u94_21 04FD                                   u86_21 04B0  
                                 u87_20 04C2                                   u95_20 02CC  
                                 u87_21 04C1                                   u95_21 02CB  
                                 u96_20 02D0                                   u96_21 02CF  
                                 u88_25 04C6                                   u89_20 04D4  
                                 u97_20 02F0                                   u89_21 04D3  
                                 u97_21 02EF                                   u98_25 0301  
                                 u99_20 030F                                   u99_21 030E  
                       __end_of_led_off 066F                                   _blink 0434  
                                 _errno 00DB                ??_is_adc_conversion_done 0072  
                                 pclath 000A                            led_off@shift 00A5  
                      __end_ofi1___wmul 06BF                        ___expand_heap@pn 00A0  
                _is_crossing_zero_point 06BF                                   status 0003  
                   i1___wmul@multiplier 0070                                   wtemp0 007E  
                        ??_global_setup 00A0                        ??_turn_board_off 0070  
                       __initialization 0011                     _reset_adc_interrupt 079C  
                          __end_of_main 0761                           ___expand_heap 05AE  
                                ??_main 00D5                      _is_pwr_btn_pressed 0748  
               ?i1_start_adc_conversion 0070                    ?_reset_adc_interrupt 0070  
                ??_start_adc_conversion 00A0                                  ?_blink 0070  
                                _ADRESH 001E                                  _ADRESL 009E  
                   ?_is_pwr_btn_pressed 0070                        ___awdiv@dividend 0078  
                                u100_25 0323                                  u101_20 0331  
                                u101_21 0330                                  u102_25 0336  
                                u110_25 06A7                                  i1l1214 07B5  
                                i1l1400 04C5                                  u103_20 0341  
                                i1l1160 079C                                  u103_21 0340  
                                i1l1410 04EB                                  i1l1402 04CC  
                                i1l1420 0503                                  i1l1412 04EC  
                                i1l1404 04D0                                  u111_25 06AE  
                                i1l1414 04F3                                  i1l1406 04D4  
                                i1l1430 02E0                                  u120_20 071F  
                                i1l1408 04E5                                  i1l1416 04F9  
                                u104_20 0347                                  i1l1440 0300  
                                i1l1432 02F0                                  i1l1424 02C7  
                                u112_20 06BA                                  u120_21 071E  
                                u104_21 0346                                  u112_21 06B9  
                                i1l1418 04FE                                  i1l1450 032B  
                                i1l1442 0309                                  i1l1426 02CC  
                                i1l1610 06E3                                  i1l1602 0729  
                                i1l1380 04A1                                  i1l1460 0355  
                                i1l1452 0332                                  i1l1444 0310  
                                i1l1436 02F9                                  i1l1428 02D0  
                                i1l1620 06FB                                  i1l1604 0732  
                                i1l1390 04B1                                  i1l1382 04A2  
                                i1l1462 036B                                  i1l1454 033D  
                                i1l1446 0314                                  i1l1438 02FC  
                                i1l1614 06ED                                  i1l1392 04B6  
                                i1l1384 04A6                                  i1l1464 0370  
                                u105_20 034B                                  i1l1456 0341  
                                i1l1448 0322                                  i1l1480 06AD  
                                i1l1560 0605                                  i1l1616 06F3  
                                i1l1376 0795                                  i1l1472 07A8  
                                i1l1608 0736                                  u121_20 0732  
                                u105_21 034A                                  u121_21 0731  
                                i1l1394 04BA                                  i1l1386 04AB  
                                i1l1466 0374                                  i1l1458 034B  
                                i1l1482 06B4                                  i1l1474 069A  
                                i1l1562 0634                                  i1l1618 06F6  
                                i1l1650 066F                                  i1l1580 05AC  
                                i1l1572 055E                                  i1l1396 04BC  
                                i1l1388 04AD                                  i1l1468 0375  
                                i1l1484 06BA                                  i1l1476 069C  
                                i1l1652 0678                                  i1l1590 071B  
                                i1l1574 0574                                  i1l1398 04C2  
                                i1l1478 06A0                                  i1l1558 05FB  
                                i1l1566 07BD                                  i1l1654 067B  
                                i1l1592 071F                                  i1l1576 0590  
                                u106_20 0360                                  u122_20 06EC  
                                i1l1568 0748                                  i1l1584 07B9  
                                i1l1656 0686                                  u122_21 06EB  
                                i1l1594 0721                                  i1l1586 0714  
                                i1l1578 05AA                                  i1l1658 068C  
                                i1l1588 0715                                  u106_25 035B  
                                i1l1598 06BF                                  u107_20 0370  
                                u123_20 06F3                                  u107_21 036F  
                                u123_21 06F2                                  u116_20 0574  
                                u108_20 0374                                  u116_21 0573  
                                u108_21 0373                                  u117_20 0590  
                                u109_20 06A0                                  u125_20 0678  
                                u117_21 058F                                  u109_21 069F  
                                u125_21 0677                                  u118_20 05AA  
                                u126_20 0686                                  u118_21 05A9  
                                u126_21 0685                                  u118_25 05A6  
                                u119_20 071B                                  u119_21 071A  
                                u128_27 06F8  __end_of_set_state_according_to_pwr_btn 073A  
        _set_state_according_to_pwr_btn 0729                        __end_of___xxtofl 037E  
                        ?___expand_heap 0070                                  ___fleq 055E  
               ___simple_search_fl@best 00AD                 ___simple_search_fl@last 00AA  
               ___simple_search_fl@next 00AB                               ??___awdiv 007A  
                  ??_is_pwr_btn_pressed 0072                            ?_set_low_pwr 0070  
                                _led_on 0508                                  _malloc 037E  
                      ___awdiv@quotient 007C                                  blink@i 00D3  
                             ??_led_off 00A2          __end_ofi1_start_adc_conversion 07B9  
                                saved_w 007E                   ??_reset_adc_interrupt 0070  
                        blink@leds_info 00D1                            ___xxtofl@arg 002A  
                          ___xxtofl@exp 0029                            ___xxtofl@val 0020  
                            ___fleq@ff1 0038                              ___fleq@ff2 003C  
               __end_of__initialization 0024                              ___freelist 00DD  
                       _gather_LED_info 0027                          __pcstackCOMMON 0070  
                         __end_of_blink 04A1                       ??i1_turn_board_on 0070  
                             ?i1___wmul 0070              _is_adc_conversion_done$425 0074  
                  __end_of_global_setup 076C                   _get_conversion_result 05FB  
                               ??_blink 00CC              __end_of___simple_search_fl 02C4  
                            __pbssBANK0 004B                              __pbssBANK1 00D5  
                      ??i1_set_full_pwr 0070                         ??___expand_heap 00A0  
                            __pmaintext 0755                                 ?___fleq 0038  
                            __pintentry 0004                                 ?_led_on 00A0  
                               ?_malloc 00AE                  _is_adc_conversion_done 0714  
                            ??i1___wmul 0074  __end_of_start_spectating_zero_crossing 0776  
        _start_spectating_zero_crossing 076C                               ?___xxtofl 0020  
               ?_is_crossing_zero_point 0044                           _turn_board_on 07B1  
                            __stringtab 073A                 __end_of_gather_LED_info 01E6  
                  ___simple_search_fl@c 00AC                    ___simple_search_fl@n 00A0  
                         ?_set_full_pwr 0070                                 ___awdiv 04A1  
              ___simple_search_fl@split 00A9                gather_LED_info@leds_info 00CA  
                             _ANSELbits 011E                                 __ptext1 076C  
                               __ptext2 07AD                                 __ptext3 0776  
                               __ptext4 06FF                                 __ptext5 0761  
                               __ptext6 07B1                                 __ptext7 07A3  
                               __ptext8 0780                                 __ptext9 0787  
                               _led_off 063D                              ??___xxtofl 0024  
                ?_get_conversion_result 002E          __end_of_is_crossing_zero_point 06E3  
                        ?_turn_board_on 0070                    end_of_initialization 0024  
                               malloc@m 00B2                                 malloc@n 00AE  
                               malloc@p 00B8                  ___expand_heap@new_brkp 00A3  
                     __end_of_setup_ADC 0714                       __end_of_setup_RC2 078E  
                     __end_of_setup_RB5 0780                       __end_of_setup_RC7 0787  
                        ??_set_full_pwr 00A0                   i1___wmul@multiplicand 0072  
                     __end_of_pwr_pulse 06FF                              _setup_GPIO 078E  
                             _PORTCbits 0007                           ___xxtofl@sign 0028  
                             _TRISBbits 0086                               _TRISCbits 0087  
                      ?_gather_LED_info 0070                         i1_turn_board_on 07B9  
                            led_off@led 00A0                            _global_setup 0761  
                        __end_of___fleq 05AE                          __end_of_led_on 055E  
                        __end_of_malloc 0434             __end_of_reset_adc_interrupt 07A3  
                       ___expand_heap@n 00A1                     start_initialization 0011  
                       ??_turn_board_on 00A0                              malloc@lock 004B  
                            malloc@size 00B6                             __end_of_isr 069A  
                    ___simple_search_fl 01E6                 ?_is_adc_conversion_done 0070  
                              ??___fleq 0040            ___simple_search_fl@best_last 00A8  
                              ??_led_on 00A2                                ??_malloc 00B0  
                           ?_setup_GPIO 0070                     ?___simple_search_fl 00A0  
               pwr_pulse@pulse_shift_us 0744                               ___heap_hi 0170  
                             ___heap_lo 0120                               ___latbits 0001  
                         __pcstackBANK0 0020                           __pcstackBANK1 00A0  
                  __end_of_set_full_pwr 07A8                 __end_ofi1_turn_board_on 07BD  
                  ??___simple_search_fl 00A2         ?_start_spectating_zero_crossing 0070  
      ??_start_spectating_zero_crossing 00A0          __end_of_is_adc_conversion_done 0729  
                 __end_of___expand_heap 05FB                                ?___awdiv 0076  
              ??i1_start_adc_conversion 0070                 ??_get_conversion_result 007E  
                             __pstrings 073A                                ?_led_off 00A0  
                     interrupt_function 0004                                _IOCBbits 0116  
                              _PIE1bits 008C                                _PIR1bits 000C  
                         ??_set_low_pwr 0070                               _setup_ADC 06FF  
                             _setup_RC2 0787                               _setup_RB5 0776  
                             _setup_RC7 0780                               _power_lvl 004F  
                        _turn_board_off 07BD                              _ADCON0bits 001F  
                           __stringbase 073F                              _ADCON1bits 009F  
                              i1___wmul 069A                               _pwr_pulse 06E3  
                             led_on@led 00A0                        ?i1_turn_board_on 0070  
          __end_ofpwr_pulse@pulse_shift 0744                               malloc@end 00D7  
                             malloc@cur 00D9                               malloc@new 00BA  
                            ?_setup_ADC 0070            __end_of_start_adc_conversion 07B1  
                            ?_setup_RC2 0070                              ?_setup_RB5 0070  
                            ?_setup_RC7 0070                  __end_of_turn_board_off 07C1  
                   gather_LED_info@LED1 00C0                     gather_LED_info@LED2 00C2  
                   gather_LED_info@LED3 00C4                     gather_LED_info@LED4 00C6  
                   gather_LED_info@LED5 00C8                      __end_of__stringtab 0740  
                            _ANSELHbits 011F                     __end_of_set_low_pwr 079C  
                            ?_pwr_pulse 0070                                ___xxtofl 02C4  
                              __ptext10 0434                                __ptext11 078E  
                              __ptext20 0729                                __ptext12 0508  
                              __ptext21 07B9                                __ptext13 063D  
                              __ptext30 069A                                __ptext22 07A8  
                              __ptext14 0027                                __ptext31 02C4  
                              __ptext23 07BD                                __ptext15 037E  
                              __ptext32 04A1                                __ptext24 0795  
                              __ptext16 01E6                                __ptext33 055E  
                              __ptext25 0748                                __ptext17 05AE  
                              __ptext34 0714                                __ptext26 079C  
                              __ptext18 066F                                __ptext27 06E3  
                              __ptext19 07B5                                __ptext28 06BF  
                              __ptext29 05FB         __end_ofpwr_pulse@pulse_shift_us 0748  
            __end_of_is_pwr_btn_pressed 0755                            _set_full_pwr 07A3  
                       ?_turn_board_off 0070                            ??_setup_GPIO 00A0  
              ??_is_crossing_zero_point 0046                                malloc@sz 00B4  
      ??_set_state_according_to_pwr_btn 0075         ?_set_state_according_to_pwr_btn 0070  
                            _INTCONbits 000B       ___simple_search_fl@remaining_size 00A6  
                 __end_of_turn_board_on 07B5                  i1_start_adc_conversion 07B5  
                              intlevel1 0000                      __end_of_setup_GPIO 0795  
                             stringcode 073A                              _OSCCONbits 008F  
                           ??_setup_ADC 00A0                             ??_setup_RC2 00A0  
                           ??_setup_RB5 00A0                             ??_setup_RC7 00A0  
                           _set_low_pwr 0795                          i1_set_full_pwr 07A8  
                  pwr_pulse@pulse_shift 0740           __end_of_get_conversion_result 063D  
                           ??_pwr_pulse 0070                                stringdir 073A  
                              stringtab 073A            get_conversion_result@adc_res 0036  
                  _start_adc_conversion 07AD  
